{"version":2,"kind":"Notebook","sha256":"ef28e5d0ec349df69730d09319595c5611d58cac111a9c309bd887cdc71bf069","slug":"notebooks.tutorials.arc-to-point","location":"/notebooks/tutorials/2_arc_to_point.ipynb","dependencies":[],"frontmatter":{"title":"Great Circles and a Point","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Cora Schneck","given":"Cora","family":"Schneck"},"name":"Cora Schneck","orcid":"0009-0009-1415-5170","affiliations":["NSF National Center for Atmospheric Research"],"id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-1"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/great-circle-cookbook","copyright":"2025","affiliations":[{"id":"NSF National Center for Atmospheric Research","name":"NSF National Center for Atmospheric Research"},{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/great-circle-cookbook/blob/main/notebooks/tutorials/2_arc_to_point.ipynb","thumbnail":"/great-circle-cookbook/build/ddd5e87a4e6794afa31d6f6f486cd11b.gif","exports":[{"format":"ipynb","filename":"2_arc_to_point.ipynb","url":"/great-circle-cookbook/build/2_arc_to_point-deb8a90843c1d53a5afc8fb6d3bd3a60.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/great-circle-cookbook/build/ddd5e87a4e6794afa31d6f6f486cd11b.gif","alt":"A hockey puck is launched from London toward the west, on a stationary earth. The natural great circle motion of the puck takes it toward the equator, not along the original line of latitude, which we might normally call west. The great circle path also coincides with the line of sight toward the west (projected radially down to the earth'surface). Thus we must conclude that Costa Rica is due west of London. Credit: Oregon State (https://sites.science.oregonstate.edu/~mcintyre/coriolis/Curvilinear_GIF.html)","key":"H5zpQ4xgSi","urlSource":"https://sites.science.oregonstate.edu/~mcintyre/coriolis/Images/LonWest.GIF"}],"key":"CpTvw0bVtF"}],"key":"dkQPOUuBBf"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Great Circles and a Point","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"d4q8LZNjhC"}],"identifier":"great-circles-and-a-point","label":"Great Circles and a Point","html_id":"great-circles-and-a-point","implicit":true,"key":"goqKyRPp48"}],"key":"CXPDSycWWu"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qyWpDwF4pE"}],"key":"rYQnB7VQ0v"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VedXV3zVdF"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"P6PuIUmNQA"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Oh no! A plane traveling across the country suddenly discovers it is low on fuel! It can no longer make it to the planned airport, instead it has to find the closest airport to its current position that it can make it with its remaining fuel.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"YiR2AzSrEe"}],"key":"uLAaF2g59P"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In great circle terms, we want to determine how far a point (let’s say, the next closest airport) is from a great circle arc (the flight’s path). In this notebook we will:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"dDD3LYL08M"}],"key":"Y7Y0LWYxcs"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Determine the distance of a point to a great circle arc (cross-track and along-track distance)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"cNQ4sQzGsY"}],"key":"hDrBWFIYTO"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Determine if a point lies on a great circle arc and path (with and without tolerances)","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"p5RolemuDa"}],"key":"x5iGzGVryL"}],"key":"JajqhykSkf"}],"key":"ntYHbAX5y6"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DVQkcttcos"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"p81VEKafVy"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sw0nsxMyOF"}],"key":"ziXXLHsluI"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JaiLGaH6dl"}],"key":"et3hIEAJFf"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"d5M7xAGHOV"}],"key":"Sz04R1PfOm"}],"key":"zQearAFqYK"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/numpy/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Numpy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ov2zhLsnzh"}],"urlSource":"https://foundations.projectpythia.org/core/numpy/","key":"CJC8pBiSbe"}],"key":"DfkipJgBmV"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nP2lZ8GiLX"}],"key":"VA84aegPWQ"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Used to work with large arrays","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"flXar1OsGG"}],"key":"UB12oeH74q"}],"key":"Uv3gH8Hkcc"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/pandas","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Pandas","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"eJlCpYSJLy"}],"urlSource":"https://foundations.projectpythia.org/core/pandas","key":"CyROVoE7H9"}],"key":"GCzzgy1fRr"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"sl0QuNknhB"}],"key":"OzualJKsTM"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Used to read in and organize data (in particular dataframes)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ybXpSQGH36"}],"key":"SPFa9emDEk"}],"key":"EBLN9bjDaQ"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Sh8Orv6LPE"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy","key":"k049RUAcXD"}],"key":"biyOuZLzLn"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"XPzlA4FYS5"}],"key":"UmNL0W1Z8D"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Will be used for adding maps to plotting","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"OZS0LgLpqj"}],"key":"IhbgLtRGna"}],"key":"OSLgM7KEFm"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/matplotlib/","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Matplotlib","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"NJf08AQDJ7"}],"urlSource":"https://foundations.projectpythia.org/core/matplotlib/","key":"Mxyub8EKI2"}],"key":"SONegkPeMu"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"IlPn9ZJXQM"}],"key":"LC5B7MsLzQ"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Will be used for plotting","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"LPQWyneu81"}],"key":"YRpplo0Atp"}],"key":"rwYuolCfCS"}],"key":"qKvbbQj7J4"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"IJqKNMgy7W"}],"key":"LU7j0dScNo"},{"type":"text","value":": 20 minutes","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"YzPyNb9Trr"}],"key":"QzAeRweumO"}],"key":"gycEyOJQL7"}],"key":"Bqk569j0kc"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NAnn9gsP7Q"}],"key":"ZgzDRSlrtY"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zDViT6QQpp"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"PvrCsa8tir"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Import Packages","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bpnqdI7xMs"}],"key":"eb2IAw9iGU"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Setup location dataframe with coordinates","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Bs8y3bhCfY"}],"key":"JC4XHA3VTL"}],"key":"CbfdpxAjm9"}],"key":"d5APXF9d7g"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import pandas as pd                                    # read in data text file\nimport numpy as np                                     # working with degrees and radians\n\nfrom pyproj import Geod                                # working with the Earth as an ellipsod (WGS-84)\nimport geopy.distance                                  # moving along a known distance on the Earth's ellipsoid surface\n\nimport matplotlib.pyplot as plt                        # plotting a graph\nfrom cartopy import crs as ccrs, feature as cfeature   # plotting a world map","key":"dgISl41Eo9"},{"type":"output","id":"3zt4eo7nSza0CmYLfbVof","data":[],"key":"veNdMvsDsy"}],"key":"P18JBGadVx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Get all Coordinates for Locations\nlocation_df = pd.read_csv(\"../location_full_coords.txt\")\nlocation_df = location_df.rename(columns=lambda x: x.strip()) # strip excess white space from column names and values\nlocation_df.index = location_df[\"name\"]\nlocation_df.head()","key":"pe6h9pr2Aj"},{"type":"output","id":"NHeGXdTUW3ZL_QcKCmdbQ","data":[{"output_type":"execute_result","execution_count":2,"metadata":{},"data":{"text/plain":{"content":"              name  latitude  longitude    cart_x    cart_y    cart_z  rho  \\\nname                                                                         \narecibo    arecibo   18.3441   -66.7527  0.374643 -0.872119  0.314723  1.0   \nboulder    boulder   40.0150  -105.2705 -0.201714 -0.738835  0.642988  1.0   \nboston      boston   42.3601   -71.0589  0.239852 -0.698914  0.673788  1.0   \nredwoods  redwoods   41.4017  -124.0417 -0.419898 -0.621549  0.661334  1.0   \nhouston    houston   29.5518   -95.0982 -0.077303 -0.866469  0.493210  1.0   \n\n             theta       phi       polar_x       polar_y       polar_z  \nname                                                                    \narecibo  -1.165054  1.250631 -5.562495e+06  2.389526e+06  2.007347e+06  \nboulder   1.304276  0.872403 -4.712394e+06 -1.286558e+06  4.101066e+06  \nboston   -1.240212  0.831473 -4.457769e+06  1.529809e+06  4.297512e+06  \nredwoods  0.976657  0.848200 -3.964322e+06 -2.678169e+06  4.218080e+06  \nhouston   1.481816  1.055020 -5.526456e+06 -4.930480e+05  3.145762e+06  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>cart_x</th>\n      <th>cart_y</th>\n      <th>cart_z</th>\n      <th>rho</th>\n      <th>theta</th>\n      <th>phi</th>\n      <th>polar_x</th>\n      <th>polar_y</th>\n      <th>polar_z</th>\n    </tr>\n    <tr>\n      <th>name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>arecibo</th>\n      <td>arecibo</td>\n      <td>18.3441</td>\n      <td>-66.7527</td>\n      <td>0.374643</td>\n      <td>-0.872119</td>\n      <td>0.314723</td>\n      <td>1.0</td>\n      <td>-1.165054</td>\n      <td>1.250631</td>\n      <td>-5.562495e+06</td>\n      <td>2.389526e+06</td>\n      <td>2.007347e+06</td>\n    </tr>\n    <tr>\n      <th>boulder</th>\n      <td>boulder</td>\n      <td>40.0150</td>\n      <td>-105.2705</td>\n      <td>-0.201714</td>\n      <td>-0.738835</td>\n      <td>0.642988</td>\n      <td>1.0</td>\n      <td>1.304276</td>\n      <td>0.872403</td>\n      <td>-4.712394e+06</td>\n      <td>-1.286558e+06</td>\n      <td>4.101066e+06</td>\n    </tr>\n    <tr>\n      <th>boston</th>\n      <td>boston</td>\n      <td>42.3601</td>\n      <td>-71.0589</td>\n      <td>0.239852</td>\n      <td>-0.698914</td>\n      <td>0.673788</td>\n      <td>1.0</td>\n      <td>-1.240212</td>\n      <td>0.831473</td>\n      <td>-4.457769e+06</td>\n      <td>1.529809e+06</td>\n      <td>4.297512e+06</td>\n    </tr>\n    <tr>\n      <th>redwoods</th>\n      <td>redwoods</td>\n      <td>41.4017</td>\n      <td>-124.0417</td>\n      <td>-0.419898</td>\n      <td>-0.621549</td>\n      <td>0.661334</td>\n      <td>1.0</td>\n      <td>0.976657</td>\n      <td>0.848200</td>\n      <td>-3.964322e+06</td>\n      <td>-2.678169e+06</td>\n      <td>4.218080e+06</td>\n    </tr>\n    <tr>\n      <th>houston</th>\n      <td>houston</td>\n      <td>29.5518</td>\n      <td>-95.0982</td>\n      <td>-0.077303</td>\n      <td>-0.866469</td>\n      <td>0.493210</td>\n      <td>1.0</td>\n      <td>1.481816</td>\n      <td>1.055020</td>\n      <td>-5.526456e+06</td>\n      <td>-4.930480e+05</td>\n      <td>3.145762e+06</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"aqZILfFJhK"}],"key":"RG3abkzyfu"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine the distance of a point to a great circle arc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YX84DR2yxz"}],"identifier":"determine-the-distance-of-a-point-to-a-great-circle-arc","label":"Determine the distance of a point to a great circle arc","html_id":"determine-the-distance-of-a-point-to-a-great-circle-arc","implicit":true,"key":"BQIRcJm2DK"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The distance from a point to a great circle arc is known as the cross track distance (sometimes known as cross track error). For example, how far would a plane have to fly from its path to get to an unscheduled airport for refueling? Meantime, the along track distance measures how far along the great arc a point lies. For instance, what is your new position (latitude/longitude) when you’ve traveled 250 km into your 2000 km plane ride?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LMZNXwAxD1"}],"key":"S40c5S3K9b"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Cross track distance: angular distance from point P to great circle path","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EiuhAFPkDP"}],"key":"WSiqamVNaZ"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Along track distance: angular distance along the great circle path from A to B before hitting a point that is closest to point P","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"HrGgLsPY6E"}],"key":"pfJgkLJStj"}],"key":"bzOxgvM6wT"}],"key":"gNI2V41AMQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"geodesic = Geod(ellps=\"WGS84\")\nearth_radius = 6378137  # meters","key":"e7AFULTN6z"},{"type":"output","id":"w9PjTfT_vJl6OuucHezm9","data":[],"key":"AN5NTyp5ZX"}],"key":"YyxtP4GC46"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Cross Track Distance","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PiO4WyRSpx"}],"identifier":"cross-track-distance","label":"Cross Track Distance","html_id":"cross-track-distance","implicit":true,"key":"m7TqtHic2g"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Distance of a point to a great circle arc is defined as:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"haX8kpsaRs"}],"key":"VVqThdrNU6"},{"type":"math","value":"dxt = asin( sin(δ13) ⋅ sin(θ13 − θ12) ) * R","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>d</mi><mi>x</mi><mi>t</mi><mo>=</mo><mi>a</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>δ</mi><mn>13</mn><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mn>13</mn><mo>−</mo><mi>θ</mi><mn>12</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">dxt = asin( sin(δ13) ⋅ sin(θ13 − θ12) ) * R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mord\">13</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord\">13</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord\">12</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span>","enumerator":"1","key":"TTnzuvnSLu"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Where,","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"n9ZHFzccAg"}],"key":"F46Pw4xP4T"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":8,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"δ13 (delta_13) is (angular) distance from start point to third point","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"KIgwcFVHjS"}],"key":"zrESoKRQLM"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"θ13 (theta_13) is (initial) bearing from start point to third point","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ZUvmfAvLlH"}],"key":"xxmm2KFBem"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"θ12 (theta_12) is (initial) bearing from start point to end point","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"D4Hhuo7CAy"}],"key":"pqyrJO3URs"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"R is the earth’s radius","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"CjUKxMx47B"}],"key":"sydNVXpwiJ"}],"key":"HTKjqP21dE"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Then,","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"iNnNuEZ24s"}],"key":"X9a0PdgSVT"},{"type":"math","value":"d_xt = np.arcsin(np.sin(delta_13)*np.sin(theta_13 - theta_12)) * R","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>d</mi><mi>x</mi></msub><mi>t</mi><mo>=</mo><mi>n</mi><mi>p</mi><mi mathvariant=\"normal\">.</mi><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>p</mi><mi mathvariant=\"normal\">.</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>e</mi><mi>l</mi><mi>t</mi><msub><mi>a</mi><mn>1</mn></msub><mn>3</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>n</mi><mi>p</mi><mi mathvariant=\"normal\">.</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msub><mi>a</mi><mn>1</mn></msub><mn>3</mn><mo>−</mo><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msub><mi>a</mi><mn>1</mn></msub><mn>2</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">d_xt = np.arcsin(np.sin(delta_13)*np.sin(theta_13 - theta_12)) * R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">rcs</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">lt</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">2</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span>","enumerator":"2","key":"IqLq94Lqdt"},{"type":"math","value":"XTD =asin(sin(dist_AD)*sin(crs_AD-crs_AB))","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>X</mi><mi>T</mi><mi>D</mi><mo>=</mo><mi>a</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>i</mi><mi>s</mi><msub><mi>t</mi><mi>A</mi></msub><mi>D</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mi>r</mi><msub><mi>s</mi><mi>A</mi></msub><mi>D</mi><mo>−</mo><mi>c</mi><mi>r</mi><msub><mi>s</mi><mi>A</mi></msub><mi>B</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">XTD =asin(sin(dist_AD)*sin(crs_AD-crs_AB))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">XT</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">cr</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">cr</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">))</span></span></span></span></span>","enumerator":"3","key":"dzQWIzuJA9"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Where,","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"p3UeNmrPeP"}],"key":"iINWPCeSG8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Positive Cross-Track Distance: Point lies in the hemisphere to the left of the great circle","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"afz3R4qTOY"}],"key":"aHPyfavcE8"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Negative Cross-Track Distance: Point lies in the hemiphere to the right of the great circle","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"lAbS51FRH8"}],"key":"D5GXMs0Z75"}],"key":"WSfW2MV6ae"},{"type":"blockquote","position":{"start":{"line":24,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Note: If the point A is the North or South Pole replace ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"IZXxarPIma"},{"type":"inlineCode","value":"crs_AD-crs_AB","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"DHQyq8xcGa"},{"type":"text","value":" with\n","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"fJAyU3TQ8C"},{"type":"inlineCode","value":"lon_D-lon_B","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"zLqlF857ta"},{"type":"text","value":" or ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"WpBDXxRc1B"},{"type":"inlineCode","value":"lon_B-lon_D","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"t4IqpAZ8WA"},{"type":"text","value":", respectively","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"ndMXY5136E"}],"key":"PdhRUsfMCZ"}],"key":"jIjc8iPUvN"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":27,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":27,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"link","url":"https://edwilliams.org/avform147.htm#XTE","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"See more: Cross track error","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"uKaIYpQKFJ"}],"urlSource":"https://edwilliams.org/avform147.htm#XTE","key":"nHNvpyucDq"}],"key":"Adpi1rpHZf"}],"key":"o6im1ieNQX"},{"type":"paragraph","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"That was a lot of math, let’s see how that translates into a Python function. For the purpose of this example, let’s determine the forward bearing and distance between the great circle arc and the new point on an ellipsoid.","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"y0tgFQwjKL"}],"key":"yYnT2CXErM"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"We will be creating two sides of a spherical triangle. Side 1 will be the great circle arc formed from Point A to Point B, while Side 2 will be a new great circle arc we will create from Point A to the new point C. We can use the angle—angular distance—between these two legs to determine the cross track distance:","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"sK1zzVpBjn"}],"key":"gpQ3z7lth8"}],"key":"idbHaaAh5e"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def cross_track_distance(start_point=None, end_point=None, new_point=None):\n    # Determine the forward bearing from Point A (start) to Point B (end)\n    fwd_bearing_start_end, _, _ = geodesic.inv(location_df.loc[start_point, \"longitude\"],\n                                               location_df.loc[start_point, \"latitude\"],\n                                               location_df.loc[end_point, \"longitude\"],\n                                               location_df.loc[end_point, \"latitude\"])\n    \n    # Determine the forward bearing (angle) and distance from Point A (start) to new Point C\n    fwd_bearing_start_new, _, distance_m_start_new = geodesic.inv(location_df.loc[start_point, \"longitude\"],\n                                                                  location_df.loc[start_point, \"latitude\"],\n                                                                  location_df.loc[new_point, \"longitude\"],\n                                                                  location_df.loc[new_point, \"latitude\"]) \n\n    # Determine the Angular Distance from Point A to Point C\n    angular_distance_start_new = distance_m_start_new / earth_radius\n    ct_distance = np.arcsin(np.sin(angular_distance_start_new) * np.sin(np.deg2rad(fwd_bearing_start_new - fwd_bearing_start_end))) * earth_radius\n    return ct_distance","key":"o88NT2K1Wa"},{"type":"output","id":"wcdiXWN5uIB8dY1akXWXE","data":[],"key":"ApJEojIEps"}],"key":"vHv9KTWnan"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Along Track Distance","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LsdA6601Ka"}],"identifier":"along-track-distance","label":"Along Track Distance","html_id":"along-track-distance","implicit":true,"key":"CuhrS0I7H4"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Imagine a great circle arc that will appear like: A -------- C -------------------B, where the distance along the great circle arc (created from Point A to B) from Point A to Point C is the along-track distance.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BVtwWkLE2P"}],"key":"fOx9r25pR4"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"This is defined as:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"UTVis4Gub5"}],"key":"xok2f1Ehhv"},{"type":"math","value":"dat = acos(\\frac{cos(δ13)}{cos(δxt)}) * R","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>d</mi><mi>a</mi><mi>t</mi><mo>=</mo><mi>a</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>δ</mi><mn>13</mn><mo stretchy=\"false\">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>δ</mi><mi>x</mi><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">dat = acos(\\frac{cos(δ13)}{cos(δxt)}) * R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mord\">13</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span>","enumerator":"4","key":"Pqp2mAzKAp"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"δ13 (delta_13) is (angular) distance from start point to third point","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"uHjQXmLtpK"}],"key":"kNQ9IxL5sT"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"δxt (delta_xt) is (angular) cross-track distance","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"VbpcWnpyDq"}],"key":"BH6mBHuSoK"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"R is the earth’s radius","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"FVH83W7ka1"}],"key":"aAbwMmg9eg"}],"key":"pH9zEGLmT9"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"So,","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"yjDCyD95PX"}],"key":"u4j2YtUe4N"},{"type":"math","value":"d_at = np.arccos(\\frac{np.cos(delta_13)}{np.cos(d_xt/R)} * R","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>d</mi><mi>a</mi></msub><mi>t</mi><mo>=</mo><mi>n</mi><mi>p</mi><mi mathvariant=\"normal\">.</mi><mi>a</mi><mi>r</mi><mi>c</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>n</mi><mi>p</mi><mi mathvariant=\"normal\">.</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>e</mi><mi>l</mi><mi>t</mi><msub><mi>a</mi><mn>1</mn></msub><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><mrow><mi>n</mi><mi>p</mi><mi mathvariant=\"normal\">.</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>d</mi><mi>x</mi></msub><mi>t</mi><mi mathvariant=\"normal\">/</mi><mi>R</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo>∗</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">d_at = np.arccos(\\frac{np.cos(delta_13)}{np.cos(d_xt/R)} * R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">rccos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">lt</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span>","enumerator":"5","key":"PJ5JVgHx3Y"},{"type":"math","value":"ATD=acos(\\frac{cos(dist_AD)}{cos(XTD)})","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mi>T</mi><mi>D</mi><mo>=</mo><mi>a</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>i</mi><mi>s</mi><msub><mi>t</mi><mi>A</mi></msub><mi>D</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>T</mi><mi>D</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">ATD=acos(\\frac{cos(dist_AD)}{cos(XTD)})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">XT</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"6","key":"X1ibfCKJIm"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"However, for very short distances we can also use a new equation that is less susceptible to rounding errors:","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"piNuzGTslL"}],"key":"TqLCifZyYU"},{"type":"math","value":"ATD=asin(\\sqrt{\\frac{sin(dist_AD))^2 - (sin(XTD))^2 )}{cos(XTD)}}","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mi>T</mi><mi>D</mi><mo>=</mo><mi>a</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><msqrt><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>i</mi><mi>s</mi><msub><mi>t</mi><mi>A</mi></msub><mi>D</mi><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>−</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>T</mi><mi>D</mi><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>T</mi><mi>D</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></msqrt></mrow><annotation encoding=\"application/x-tex\">ATD=asin(\\sqrt{\\frac{sin(dist_AD))^2 - (sin(XTD))^2 )}{cos(XTD)}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.04em;vertical-align:-1.1606em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8794em;\"><span class=\"svg-align\" style=\"top:-5em;\"><span class=\"pstrut\" style=\"height:5em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">XT</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">XT</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.8394em;\"><span class=\"pstrut\" style=\"height:5em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:3.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='3.08em' viewBox='0 0 400000 3240' preserveAspectRatio='xMinYMin slice'><path d='M473,2793\nc339.3,-1799.3,509.3,-2700,510,-2702 l0 -0\nc3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM1001 80h400000v40H1017.7z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1606em;\"><span></span></span></span></span></span></span></span></span></span>","enumerator":"7","key":"oVQwl6aLNi"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":23,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"link","url":"https://edwilliams.org/avform147.htm#XTE","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"See more: Along track distance","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"jJEb6t58br"}],"urlSource":"https://edwilliams.org/avform147.htm#XTE","key":"Rho7ODcFIF"}],"key":"DEVZgghbht"}],"key":"FakXBxGKLD"},{"type":"paragraph","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"To similarly convert into a Python function, we will need to know the total length of the great circle arc from Point A to Point B. We will also measure the distance from the Point A to the new Point C along the great circle arc from Point A to Point B.","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"Eg0zoGnVnV"}],"key":"QSNiGpIRuW"}],"key":"EGDg22oBcr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def along_track_distance(start_point=None, end_point=None, new_point=None):\n    # Determine the cross track distance from Point A to Point B from Point C\n    crosst_distance = cross_track_distance(start_point, end_point, new_point)\n\n    # Determine the total distance of a great circle arc from Point A to Point C\n    _, _, distance_m_start_new = geodesic.inv(location_df.loc[start_point, \"longitude\"],\n                                              location_df.loc[start_point, \"latitude\"],\n                                              location_df.loc[new_point, \"longitude\"],\n                                              location_df.loc[new_point, \"latitude\"])  \n    \n    # Determine the Along-Track Distance using the Cross Track Distance Distance \n    angular_distance_start_new = distance_m_start_new / earth_radius\n    at_distance = np.arccos(np.cos(angular_distance_start_new) / np.cos(crosst_distance / earth_radius)) * earth_radius\n    return at_distance","key":"aOigN7joOR"},{"type":"output","id":"M9lVnwVn_N3fsbiKPPlLn","data":[],"key":"JmRWyt4sez"}],"key":"NTOZKxEqAZ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine Closest Point along Great Circle Arc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"czfSOwqt99"}],"identifier":"determine-closest-point-along-great-circle-arc","label":"Determine Closest Point along Great Circle Arc","html_id":"determine-closest-point-along-great-circle-arc","implicit":true,"key":"tD0vRYyKu3"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To be able to plot a cross track distance we need to find the point on the great circle that is closest to the new Point C. To do this we need to find the closest point from Point C to the arc and measure the along track distance that the intersection lies","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yGYec0YUuY"}],"key":"uWwkoTekLX"}],"key":"Chs1Ql5F85"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Distance point along great circle path\ndef point_along_path(start_point=None, end_point=None, distance_m=None):\n    fwd_bearing, _, _ = geodesic.inv(location_df.loc[start_point, \"longitude\"],\n                                     location_df.loc[start_point, \"latitude\"],\n                                     location_df.loc[end_point, \"longitude\"],\n                                     location_df.loc[end_point, \"latitude\"])  \n    origin = geopy.Point(location_df.loc[start_point, \"latitude\"],\n                         location_df.loc[start_point, \"longitude\"])\n    distance_to_move = geopy.distance.distance(\n                            kilometers=distance_m / 1000)  # distance to move towards the next point\n    final_position = distance_to_move.destination(origin, bearing=fwd_bearing)\n    return (final_position.latitude, final_position.longitude)","key":"Dg2Nd0uO2S"},{"type":"output","id":"ErYN7g2qcDBrb76C3zHH5","data":[],"key":"qP6KnztbGf"}],"key":"qXdqCk5ZFy"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s see how of this looks on a map! Let’s plot!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RxXH9KsQ7A"}],"key":"DYZSzpPJIL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In the previous notebook, we determined how to interpolate points along the great circle arc (","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZGEYnl9mkf"},{"type":"inlineCode","value":"interpolate_points_along_gc","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vibufchWUi"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Zo7ekSwWz7"},{"type":"inlineCode","value":"arc_points","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HSepx6Fcjp"},{"type":"text","value":"). We will repeat the functions below to be able to use them to plot the great circle arc with the new information about cross-track and along-track distances","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PVyhzJBG0A"}],"key":"lRDAbb9nCP"}],"key":"dzRLAuyFSW"},{"type":"block","kind":"notebook-code","data":{"jupyter":{"source_hidden":true}},"children":[{"type":"code","lang":"python","executable":true,"value":"# See Previous Notebook for how these functions were defined\n\ndef interpolate_points_along_gc(lat_start,\n                                lon_start,\n                                lat_end,\n                                lon_end,\n                                distance_between_points_meter): \n    lat_lon_points = [(lat_start, lon_start)]\n    \n    # move to next point when distance between points is less than the equal distance\n    move_to_next_point = True\n    while(move_to_next_point):\n        forward_bearing, reverse_bearing, distance_meters = geodesic.inv(lon_start,\n                                                                         lat_start, \n                                                                         lon_end,\n                                                                         lat_end)\n        if distance_meters < distance_between_points_meter:\n            # ends before overshooting\n            move_to_next_point = False\n        else:\n            start_point = geopy.Point(lat_start, lon_start)\n            distance_to_move = geopy.distance.distance(\n                            kilometers=distance_between_points_meter /\n                            1000)  # distance to move towards the next point\n            final_position = distance_to_move.destination(\n                            start_point, bearing=forward_bearing)\n            lat_lon_points.append((final_position.latitude, final_position.longitude))\n            # new starting position is newly found end position\n            lon_start, lat_start = final_position.longitude, final_position.latitude\n    lat_lon_points.append((lat_end, lon_end))\n    return lat_lon_points\n\ndef arc_points(start_lat=None,\n               start_lon=None,\n               end_lat=None,\n               end_lon=None,\n               n_total_points=10):\n    _, _, distance_meter =  geodesic.inv(start_lon,\n                                        start_lat,\n                                        end_lon,\n                                        end_lat)\n        \n    distance_between_points_meter = distance_meter / (n_total_points + 1)\n\n    \n    new_points_lst = interpolate_points_along_gc(start_lat,\n                                              start_lon,\n                                              end_lat,\n                                              end_lon,\n                                              distance_between_points_meter)\n    return new_points_lst","key":"JfhsuQm06w"},{"type":"output","id":"C04_3rURnFHB_RrrsWvrH","data":[],"key":"by8CeqZYuK"}],"key":"KSFFS7qPyQ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"To begin, we will plot the cross track distance. This will look like a map with two arcs: one from Point A to Point B (the primary great circle arc) and a second that will show the angular distance between the great circle arc and a new point","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Npxc2dWq7M"}],"key":"BkUydF12BO"}],"key":"C7ieyS4mHp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def plot_cross_track(start_point=None, end_point=None, new_point=None,\n                     lon_west=-130, lon_east=-60,\n                     lat_south=20, lat_north=60):\n    # Set up world map plot\n    fig = plt.subplots(figsize=(16, 10))\n    projection_map = ccrs.PlateCarree()\n    ax = plt.axes(projection=projection_map)\n    ax.set_extent([lon_west, lon_east, lat_south, lat_north], crs=projection_map)\n    ax.coastlines(color=\"black\")\n    ax.add_feature(cfeature.BORDERS, edgecolor='grey')\n    ax.add_feature(cfeature.STATES, edgecolor=\"grey\")\n\n    # Cross-Track and Along-Track Distances\n    ct_distance = cross_track_distance(start_point, end_point, new_point)\n    print(f\"Cross Track Distance: \\n{ct_distance} meters ({ct_distance/1000} km)\")\n\n    at_distance = along_track_distance(start_point, end_point, new_point)\n    print(f\"Along Track Distance: \\n{at_distance} meters ({at_distance/1000} km)\\n\")\n\n    closest_point = point_along_path(start_point, end_point, at_distance)\n    print(f\"Closest Point To Point Along Great Circle Path:\\n{closest_point}\") \n\n    # Plot Latitude/Longitude Points of the Great Circle Arc (with 10 interpolate points)\n    great_circle_arc_pts = arc_points(location_df.loc[start_point, \"latitude\"],\n                                      location_df.loc[start_point, \"longitude\"],\n                                      location_df.loc[end_point, \"latitude\"],\n                                      location_df.loc[end_point, \"longitude\"],\n                                      10)\n    longitudes = [x[1] for x in great_circle_arc_pts] # longitude\n    latitudes = [x[0] for x in great_circle_arc_pts] # latitude\n    plt.plot(longitudes, latitudes, c=\"purple\")\n    plt.scatter(longitudes, latitudes, c=\"purple\")\n\n    # Plot the Cross Track Distance as an Arc from Point C to the closest point on the arc (Point D) (with 10 intrpolated points)\n    cross_track_arc = arc_points(closest_point[0],\n                                 closest_point[1],\n                                 location_df.loc[new_point, \"latitude\"],\n                                 location_df.loc[new_point, \"longitude\"],\n                                   10)\n    longitudes = [x[1] for x in cross_track_arc] # longitude\n    latitudes = [x[0] for x in cross_track_arc] # latitude\n    plt.plot(longitudes, latitudes, c=\"green\")\n    plt.scatter(longitudes, latitudes, c=\"green\")\n\n    # Plot the Closest Point on the Arc in Red (to see easier)\n    plt.scatter(closest_point[1], closest_point[0], c=\"red\")\n\n    plt.title(f\"Closest Point {closest_point} from {start_point.title()}->{end_point.title()} to {new_point.title()}, Cross-Track Distance = {ct_distance/1000:4f} km\")\n    plt.show()","key":"FEZ3T3Uf2h"},{"type":"output","id":"6SaAz29wDwVHUbojGShxc","data":[],"key":"Wj7xIDNJlc"}],"key":"T23gagIUhm"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Positive Cross-Track Distance: Point lies in the hemisphere to the left of the great circle","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dQrjbqAjQd"}],"key":"omZWRhdKEB"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Negative Cross-Track Distance: Point lies in the hemiphere to the right of the great circle","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"RqVdUOCRKt"}],"key":"ZKGksl3Eta"}],"key":"acDaHO5k7Y"}],"key":"yPnDLNQmTH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_cross_track(start_point=\"boulder\", end_point=\"boston\", new_point=\"cape canaveral\")","key":"PgalKH8Xyz"},{"type":"output","id":"LCiYNp8L9b6dOSvk1BIhA","data":[{"output_type":"stream","name":"stdout","text":"Cross Track Distance: \n1593669.526094791 meters (1593.669526094791 km)\nAlong Track Distance: \n2076501.5510165778 meters (2076.5015510165777 km)\n\nClosest Point To Point Along Great Circle Path:\n(42.75525245755491, -80.62124342116076)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/50m_physical/ne_50m_coastline.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/50m_cultural/ne_50m_admin_0_boundary_lines_land.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/50m_cultural/ne_50m_admin_1_states_provinces_lakes.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1600x1000 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"f15399eb0fecea44b68ee161991597d3","path":"/great-circle-cookbook/build/f15399eb0fecea44b68ee161991597d3.png"}}}],"key":"vL7TaRQJyk"}],"key":"FJz8HJjibi"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine if a point lies on a great circle arc and path","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"R1e2DJV7jb"}],"identifier":"determine-if-a-point-lies-on-a-great-circle-arc-and-path","label":"Determine if a point lies on a great circle arc and path","html_id":"determine-if-a-point-lies-on-a-great-circle-arc-and-path","implicit":true,"key":"T0gJuDBy78"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Does a given Point C lie on a great circle arc? Does it lie on the great circle path? We can check if a point lies on a great circle path/arc if:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"G0eEsuttGu"}],"key":"MEWfxdaFrS"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Check if the latitude/longtiude matches the expected latitude that the same longitude position would have produced on the great circle path","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NZqbZXzhNE"}],"key":"OuLEQNoWCB"}],"key":"mZOMZyFCHl"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"This is possible with and without tolerances (in meters) to allow for some grace based on your precision.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"IbbjlBSiYL"}],"key":"JOcdSOgAbo"}],"key":"PBXXsBtE6b"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def is_point_on_arc(start_point=None, end_point=None,\n                check_point=None, tolerance=0):\n    # tolerance in meters\n    lon1 = np.deg2rad(location_df.loc[start_point, \"longitude\"])\n    lat1 = np.deg2rad(location_df.loc[start_point, \"latitude\"])\n    lon2 = np.deg2rad(location_df.loc[end_point, \"longitude\"])\n    lat2 = np.deg2rad(location_df.loc[end_point, \"latitude\"])\n    check_lon = np.deg2rad(location_df.loc[check_point, \"longitude\"])\n    check_lat = np.deg2rad(location_df.loc[check_point, \"latitude\"])\n\n    # Verify not meridian (longitude passes through the poles)\n    if np.sin(lon1 - lon2) == 0:\n        print(\"Invalid inputs: start/end points are meridians\")\n        return np.nan\n    \n    # verify not antipodal (diametrically opposite, points)\n    if lat1 + lat2 == 0 and abs(lon1-lon2) == np.pi:\n        print(\"Invalid inputs: start/end points are antipodal\")\n        return np.nan\n\n    # account for tolerance based on cross-track distance from arc\n    ct_distance = cross_track_distance(start_point, end_point, check_point)\n    print(f\"Cross-Track Distance = {ct_distance} meters\")\n    if np.abs(ct_distance) <= tolerance:\n        return True\n\n    # determine expected latitude\n    num = np.sin(lat1)*np.cos(lat2)*np.sin(check_lon-lon2)-np.sin(lat2)*np.cos(lat1)*np.sin(check_lon-lon1)\n    den = np.cos(lat1)*np.cos(lat2)*np.sin(lon1-lon2)\n    new_lat = np.arctan(num/den)\n    expected_lat = np.rad2deg(new_lat)\n    return bool(check_lat == expected_lat)","key":"m6nY3CG9fs"},{"type":"output","id":"v58Szi6f9HT1wbBh8k29o","data":[],"key":"G4yImOzaQV"}],"key":"rdKmj5D1pI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Check if a point lies on a great circle arc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"k8P5eEfGAf"}],"identifier":"check-if-a-point-lies-on-a-great-circle-arc","label":"Check if a point lies on a great circle arc","html_id":"check-if-a-point-lies-on-a-great-circle-arc","implicit":true,"key":"nH0fXlnrLa"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s see this for ourselves. Does the city of Rockford lie on the great circle arc from Boulder to Boston?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"a7hKzaW1yr"}],"key":"gcbKSkcGSi"}],"key":"VPjWaSKrK2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"is_point_on_arc(\"boulder\", \"boston\", \"rockford\", tolerance=0) # with no tolerance (0 meters)","key":"sxGPSrBtiY"},{"type":"output","id":"cT3sVCKz0G1UOy4uap12U","data":[{"output_type":"stream","name":"stdout","text":"Cross-Track Distance = 18201.48035911659 meters\n"},{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/plain":{"content":"False","content_type":"text/plain"}}}],"key":"s1HlzFlBIX"}],"key":"cYo7u15OKQ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rockford is sitting about 18 km away from the great circle arc that is formed by Boulder and Boston. Let’s give it a look on a map:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vQetd9AHUn"}],"key":"XseIskRlAQ"}],"key":"ELNkiq8MwS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_cross_track(start_point=\"boulder\", end_point=\"boston\", new_point=\"rockford\")","key":"Xnu7J763hU"},{"type":"output","id":"6LJl1NAGKhLC8txHnAkhs","data":[{"output_type":"stream","name":"stdout","text":"Cross Track Distance: \n18201.48035911659 meters (18.20148035911659 km)\nAlong Track Distance: \n1378654.5186233742 meters (1378.654518623374 km)\n\nClosest Point To Point Along Great Circle Path:\n(42.434120910748035, -89.11630028269337)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1600x1000 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"fad1dd296abb4d820406fa040aed0bc6","path":"/great-circle-cookbook/build/fad1dd296abb4d820406fa040aed0bc6.png"}}}],"key":"uGoooQlFua"}],"key":"t9iCE6EY1R"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Hard to see, right? Let’s zoom in:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"os4iqfsFsu"}],"key":"uaF3twAxjp"}],"key":"xxxHAtaya8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_cross_track(start_point=\"boulder\", end_point=\"boston\", new_point=\"rockford\", \n                 lon_west=-95, lon_east=-85,\n                 lat_south=40, lat_north=45)","key":"ETYTXA3ZVt"},{"type":"output","id":"J9XHpaxpy52bDtHuw0E13","data":[{"output_type":"stream","name":"stdout","text":"Cross Track Distance: \n18201.48035911659 meters (18.20148035911659 km)\nAlong Track Distance: \n1378654.5186233742 meters (1378.654518623374 km)\n\nClosest Point To Point Along Great Circle Path:\n(42.434120910748035, -89.11630028269337)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/10m_physical/ne_10m_coastline.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/10m_cultural/ne_10m_admin_0_boundary_lines_land.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/10m_cultural/ne_10m_admin_1_states_provinces_lakes.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1600x1000 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"1c10e1622ebf037183ce601ce49f77e0","path":"/great-circle-cookbook/build/1c10e1622ebf037183ce601ce49f77e0.png"}}}],"key":"qrCFXhU4HY"}],"key":"bdxozNnE40"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"18 km is far, but for the sake of clarity, maybe it serves our purposes as “on the arc”. If so, we can increase the tolerance of the function to about 18 km to encompass the town:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pQbV6OKsct"}],"key":"IyGuIeOQyz"}],"key":"AL8tlLoV9v"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# increase tolerance to capture point\nprint(\"tolerance = 0\")\nprint(is_point_on_arc(\"boulder\", \"boston\", \"rockford\", tolerance=0))\nprint(\"\\ntolerance >= cross-track distance\")\nprint(is_point_on_arc(\"boulder\", \"boston\", \"rockford\", tolerance=18202))","key":"r2uhGE8oOX"},{"type":"output","id":"8mSGKOaY0AIIzWEp1mmv3","data":[{"output_type":"stream","name":"stdout","text":"tolerance = 0\nCross-Track Distance = 18201.48035911659 meters\nFalse\n\ntolerance >= cross-track distance\nCross-Track Distance = 18201.48035911659 meters\nTrue\n"}],"key":"SI97ILUsJA"}],"key":"CO0nZccNii"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"(Optional) Additional Python Package: ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m33Htgr6cX"},{"type":"inlineCode","value":"UXarray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kdZ0cwdFsT"}],"identifier":"id-optional-additional-python-package-uxarray","label":"(Optional) Additional Python Package: UXarray","html_id":"id-optional-additional-python-package-uxarray","implicit":true,"key":"LHJsHp4LhG"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"UXarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"h5RL3vVhij"},{"type":"text","value":" acts as an ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MulOKamkW7"},{"type":"inlineCode","value":"Xarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ohauhbX4Xp"},{"type":"text","value":" extension for unstructured data (commonly used in climate and weather analysis). This includes multiple functions for working with ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Lsl5ub3xCP"},{"type":"link","url":"https://uxarray.readthedocs.io/en/latest/api.html#spherical-geometry","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"great circles","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TwIA8KjJU2"}],"urlSource":"https://uxarray.readthedocs.io/en/latest/api.html#spherical-geometry","key":"oxJfZEg4wi"},{"type":"text","value":":","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fIK5VWw6aR"}],"key":"xUJvUmpgCu"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://uxarray.readthedocs.io/en/latest/generated/uxarray.grid.intersections.gca_const_lat_intersection.html#uxarray.grid.intersections.gca_const_lat_intersection","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":"uxarray.grid.intersections.gca_const_lat_intersection","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ImFmAzHiTi"}],"urlSource":"https://uxarray.readthedocs.io/en/latest/generated/uxarray.grid.intersections.gca_const_lat_intersection.html#uxarray.grid.intersections.gca_const_lat_intersection","key":"EJV7P6Pozm"},{"type":"text","value":": Calculate the intersection point(s) of a Great Circle Arc (GCA) and a constant latitude line in a Cartesian coordinate system","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"GpEJjHmpg7"}],"key":"uoL2jTpTlo"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://uxarray.readthedocs.io/en/latest/generated/uxarray.grid.arcs.point_within_gca.html#uxarray.grid.arcs.point_within_gca","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"inlineCode","value":"grid.arcs.point_within_gca","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"lJo0qRd53S"}],"urlSource":"https://uxarray.readthedocs.io/en/latest/generated/uxarray.grid.arcs.point_within_gca.html#uxarray.grid.arcs.point_within_gca","key":"b1a5HzIuEv"},{"type":"text","value":": Check if a point lies on a given Great Circle Arc (GCA) interval, considering the smaller arc of the circle. Handles the anti-meridian case as well","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"IEnPkGlAwd"}],"key":"p2i3UsVLAd"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://uxarray.readthedocs.io/en/latest/generated/uxarray.grid.arcs.extreme_gca_latitude.html#uxarray.grid.arcs.extreme_gca_latitude","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"inlineCode","value":"uxarray.grid.arcs.extreme_gca_latitude","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bYdFyo12p8"}],"urlSource":"https://uxarray.readthedocs.io/en/latest/generated/uxarray.grid.arcs.extreme_gca_latitude.html#uxarray.grid.arcs.extreme_gca_latitude","key":"Z7kRsqzyDY"},{"type":"text","value":": Calculate the maximum or minimum latitude of a great circle arc defined by two 3D points","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xgKk5zbB9T"}],"key":"amvkna37jM"}],"key":"wuxGBToXFT"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"inlineCode","value":"UXarray","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"qTVznJw7aK"},{"type":"text","value":" makes use of Cartesian coordinates and includes a very narrow built-in tolerance, but can be a simple solution if needed.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Os7ZMchf7l"}],"key":"x3AYl0e1lq"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"For example: Let’s check if a point lies on a great circle arc with ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"hl2TXPuN7z"},{"type":"inlineCode","value":"UXarray","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"jcJlPhVcgr"},{"type":"text","value":" (","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"IrMY0P6p16"},{"type":"link","url":"https://ncar.github.io/geocat-applications/ncl/ncl_entries/great_circle.html#gc-onarc","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"see example","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"oRwQZzatgM"}],"urlSource":"https://ncar.github.io/geocat-applications/ncl/ncl_entries/great_circle.html#gc-onarc","key":"Nuek4f6iOJ"},{"type":"text","value":")","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"a2XTeuDzoC"}],"key":"bXHwzcXo7D"}],"key":"qRhtCY3brH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Check if Boulder is on a great circle arc created by a point directly above (+latitude) and below (-latitude)\n\n# Convert latitude and longitude points to Cartesian Points\ndef latlon_to_cart(lat, lon):\n    from astropy.coordinates.representation import UnitSphericalRepresentation\n    from astropy import units\n\n    spherical_coords = UnitSphericalRepresentation(\n        lat=lat * units.deg, lon=lon * units.deg\n    )\n    cart_coords = spherical_coords.to_cartesian()\n    return np.array([cart_coords.x, cart_coords.y, cart_coords.z])\n\n\npt_within = latlon_to_cart(location_df.loc[\"boulder\", \"latitude\"], location_df.loc[\"boulder\", \"longitude\"]) # Boulder\nvertex_a = latlon_to_cart(location_df.loc[\"boulder\", \"latitude\"]+10, location_df.loc[\"boulder\", \"longitude\"])  # Point exactly 10 degrees above Boulder\nvertex_b = latlon_to_cart(location_df.loc[\"boulder\", \"latitude\"]-10, location_df.loc[\"boulder\", \"longitude\"])  # Point exactly 10 degrees below Boulder\n\n# Determine if point lies along great circle arc\nfrom uxarray.grid.arcs import point_within_gca\n\nprint(\n    f\"Boulder lies within the great circle arc = {point_within_gca(pt_within, vertex_a, vertex_b)}\"\n)","key":"xuA9P5V8W9"},{"type":"output","id":"LIWg_0eyb2vTKrBg126CC","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[15]\u001b[39m\u001b[32m, line 20\u001b[39m\n\u001b[32m     17\u001b[39m vertex_b = latlon_to_cart(location_df.loc[\u001b[33m\"\u001b[39m\u001b[33mboulder\u001b[39m\u001b[33m\"\u001b[39m, \u001b[33m\"\u001b[39m\u001b[33mlatitude\u001b[39m\u001b[33m\"\u001b[39m]-\u001b[32m10\u001b[39m, location_df.loc[\u001b[33m\"\u001b[39m\u001b[33mboulder\u001b[39m\u001b[33m\"\u001b[39m, \u001b[33m\"\u001b[39m\u001b[33mlongitude\u001b[39m\u001b[33m\"\u001b[39m])  \u001b[38;5;66;03m# Point exactly 10 degrees below Boulder\u001b[39;00m\n\u001b[32m     19\u001b[39m \u001b[38;5;66;03m# Determine if point lies along great circle arc\u001b[39;00m\n\u001b[32m---> \u001b[39m\u001b[32m20\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01muxarray\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01mgrid\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01marcs\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m point_within_gca\n\u001b[32m     22\u001b[39m \u001b[38;5;28mprint\u001b[39m(\n\u001b[32m     23\u001b[39m     \u001b[33mf\u001b[39m\u001b[33m\"\u001b[39m\u001b[33mBoulder lies within the great circle arc = \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mpoint_within_gca(pt_within,\u001b[38;5;250m \u001b[39mvertex_a,\u001b[38;5;250m \u001b[39mvertex_b)\u001b[38;5;132;01m}\u001b[39;00m\u001b[33m\"\u001b[39m\n\u001b[32m     24\u001b[39m )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/uxarray/__init__.py:1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01m.\u001b[39;00m\u001b[34;01mgrid\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m *\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01m.\u001b[39;00m\u001b[34;01mdataset\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m *\n\u001b[32m      3\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01m.\u001b[39;00m\u001b[34;01mhelpers\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m *\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/uxarray/grid.py:13\u001b[39m\n\u001b[32m     11\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01m.\u001b[39;00m\u001b[34;01m_shapefile\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m _read_shpfile\n\u001b[32m     12\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01m.\u001b[39;00m\u001b[34;01m_scrip\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m _read_scrip\n\u001b[32m---> \u001b[39m\u001b[32m13\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01m.\u001b[39;00m\u001b[34;01mhelpers\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m get_all_face_area_from_coords\n\u001b[32m     16\u001b[39m \u001b[38;5;28;01mclass\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mGrid\u001b[39;00m:\n\u001b[32m     17\u001b[39m \u001b[38;5;250m    \u001b[39m\u001b[33;03m\"\"\"The Uxarray Grid object class that describes an unstructured grid.\u001b[39;00m\n\u001b[32m     18\u001b[39m \n\u001b[32m     19\u001b[39m \u001b[33;03m    Examples\u001b[39;00m\n\u001b[32m   (...)\u001b[39m\u001b[32m     28\u001b[39m \u001b[33;03m    >>> mesh.write(\"outfile.ug\")\u001b[39;00m\n\u001b[32m     29\u001b[39m \u001b[33;03m    \"\"\"\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/uxarray/helpers.py:5\u001b[39m\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxarray\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxr\u001b[39;00m\n\u001b[32m      3\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mpathlib\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m PurePath\n\u001b[32m----> \u001b[39m\u001b[32m5\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01m.\u001b[39;00m\u001b[34;01mget_quadratureDG\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m get_gauss_quadratureDG, get_tri_quadratureDG\n\u001b[32m      6\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnumba\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m njit, config\n\u001b[32m      8\u001b[39m config.DISABLE_JIT = \u001b[38;5;28;01mFalse\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/uxarray/get_quadratureDG.py:2\u001b[39m\n\u001b[32m      1\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnumpy\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnp\u001b[39;00m\n\u001b[32m----> \u001b[39m\u001b[32m2\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnumba\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m njit, config\n\u001b[32m      4\u001b[39m config.DISABLE_JIT = \u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[32m      7\u001b[39m \u001b[38;5;129m@njit\u001b[39m\n\u001b[32m      8\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mget_gauss_quadratureDG\u001b[39m(nCount):\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'numba'","ename":"ModuleNotFoundError","evalue":"No module named 'numba'"}],"key":"c6v7BhUvur"}],"key":"djKvKqQvwB"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QmrSCpJ9zc"}],"key":"tERjcY6yus"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LUsu545U2D"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"gUTHm6CfQR"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In this notebook, we calculated and plotted the cross track and along track distance for points around a great circle arc","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"D2kRSjnikX"}],"key":"o4vomsemsw"},{"type":"heading","depth":3,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"What’s next?","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"pGar1YwleG"}],"identifier":"whats-next","label":"What’s next?","html_id":"whats-next","implicit":true,"key":"wzNQWucKcl"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Next, we will determine when a great circle path crosses a given parallel and the maximum and minimum latitude coordinates of a great circle path.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ijDrgyHzel"}],"key":"TUoe1Mdmn5"}],"key":"NAvTywJrFC"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cLUkhpG5Qc"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"fMCs1STieV"}],"key":"U3WcJPe1f5"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"link","url":"https://edwilliams.org/avform147.htm","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Aviation Formulary V1.47","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u7ntaQ6vig"}],"urlSource":"https://edwilliams.org/avform147.htm","key":"DExa5KzBvb"}],"key":"AT9Uou3M2Y"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"link","url":"https://www.movable-type.co.uk/scripts/latlong.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Moveable Type Script","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mMsc1Cy1SV"}],"urlSource":"https://www.movable-type.co.uk/scripts/latlong.html","key":"P81bZDd8PQ"}],"key":"JzD1Ahz2Fc"}],"key":"CENNc774bM"}],"key":"zBkELQLpWI"}],"key":"Q9gRHCNOat"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Great Circle Arcs and Path","url":"/notebooks/tutorials/arc-path","group":"Tutorials"},"next":{"title":"Great Circles and Parallels","url":"/notebooks/tutorials/parallels-max-min","group":"Tutorials"}}},"domain":"http://localhost:3000"}