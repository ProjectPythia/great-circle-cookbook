{"version":2,"kind":"Notebook","sha256":"2f7d8a415c6673e16c053f1beeb5ac23565727ee8505b759fd3fdd217d9ec8a4","slug":"notebooks.tutorials.arc-to-point","location":"/notebooks/tutorials/2_arc_to_point.ipynb","dependencies":[],"frontmatter":{"title":"Great Circles and a Point","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/great-circle-cookbook","copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/great-circle-cookbook/blob/main/notebooks/tutorials/2_arc_to_point.ipynb","thumbnail":"/great-circle-cookbook/build/undefined","exports":[{"format":"ipynb","filename":"2_arc_to_point.ipynb","url":"/great-circle-cookbook/build/2_arc_to_point-9d02e35580ed4f4fdbf80ec381a2fe1e.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/great-circle-cookbook/build/undefined","alt":"The Earth Polychromatic Imaging Camera, or EPIC, captured this image of smoke from a wildfire in North America on Aug.15, 2018. Credit: NASA Goddard/ Katy Mersmann","key":"XELhgegywy","urlSource":"https://climate.nasa.gov/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbjhxIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4991bee2efb16c12caca6f535e504ce7a99b0f1c/epic_fires_header_0.gif"}],"key":"ygEWILa7rn"}],"key":"NDGNgQ96Wx"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Great Circles and a Point","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ttzP6SKSNS"}],"identifier":"great-circles-and-a-point","label":"Great Circles and a Point","html_id":"great-circles-and-a-point","implicit":true,"key":"oAxPAwzSZg"}],"key":"dcGZdOUxCL"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mpIi8GLiLv"}],"key":"Iou2AtwUIF"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Idjmv0Qx77"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"ow4w8Bd3bf"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"A plane traveling across the country suddenly discovers it is low on fuel! It can no longer make it to the planned airport, instead it has to find the closest airport to its current position that it can make it with its remaining fuel.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"msNceJ2dJe"}],"key":"sMnzxRvXyz"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Determine the distance of a point to a great circle arc (cross-track and along-track distance)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"mGdduZ47KN"}],"key":"G8L1U9jAh3"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Determine if a point lies on a great circle arc and path (with and without tolerances)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NvhxgDHdG1"}],"key":"zlt2sKctGA"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Determine the distance of a point to a great circle path (TODO)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"meypi14wjE"}],"key":"QLx6KPFdk1"}],"key":"g4e0Ks2EXj"}],"key":"hF4eI8Xrxy"}],"key":"FJ2meCpVcX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dI0jbqA3T0"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"rOBGSo9Z6I"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MN1JEz1jf8"}],"key":"RbuYSaNeNy"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jIDHhOCgrA"}],"key":"JeKME7QL2C"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BxFU238wnS"}],"key":"xW8k0QPcOL"}],"key":"qQHW0uO7F0"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/numpy.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Numpy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"PHYHFoAQMX"}],"urlSource":"https://foundations.projectpythia.org/core/numpy.html","key":"T8HVpoBvL4"}],"key":"kcCsr3SunJ"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"O2TpIwMmFD"}],"key":"YWH8Bndbvd"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Used to work with large arrays","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ac5kqa5jz6"}],"key":"KvMDAdMB0m"}],"key":"jwa92niUHT"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/numpy.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Pandas","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"zhVZICwniq"}],"urlSource":"https://foundations.projectpythia.org/core/numpy.html","key":"NIPJyrQDd8"}],"key":"AXfWKisNdN"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"w4pLQtQJ1G"}],"key":"Vj1MH5JO6C"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Used to read in and organize data (in particular dataframes)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"vXUhRCWhaB"}],"key":"zFNJcfyhAW"}],"key":"bcIJDNFSVV"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"t7iVRqdYrQ"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","key":"TONJMrunLt"}],"key":"yFzXkRsego"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bv8Q43KfCD"}],"key":"Wha5Pm16gr"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Will be used for adding maps to plotting","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uJcsSapDhH"}],"key":"FsG4IvB3Ze"}],"key":"ieLtixgrGZ"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/matplotlib.html","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Matplotlib","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"RNViTahELL"}],"urlSource":"https://foundations.projectpythia.org/core/matplotlib.html","key":"lusSQj9rY9"}],"key":"EVZh4hkTlB"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"vWK2gUkzlm"}],"key":"jpeJs1kgbA"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Will be used for plotting","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"QMHzzfihDZ"}],"key":"vMDh7UAM2z"}],"key":"rjO9z83TKI"}],"key":"FuZYtTBstU"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"strong","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"jg3qilX8ub"}],"key":"TkUAwaDoo7"},{"type":"text","value":": 30 Minutes","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"LytdPyLfb6"}],"key":"fRvPxcoATF"}],"key":"sgcUn2Z6nu"}],"key":"E4Uu9fZIx7"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RaaMP69qnX"}],"key":"fs54AUYDXe"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KvFjGqq8Rt"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"YdpOOuIsrC"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Import Packages","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VYP0Rgyeej"}],"key":"ry3S4dX7GS"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Setup location dataframe with coordinates","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"GFLgD5sooI"}],"key":"tZu2b3Mn7W"}],"key":"bxUBZJWMLF"}],"key":"yTIZlpK7K4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import pandas as pd                                    # read in data text file\nimport numpy as np                                     # working with degrees and radians\n\nfrom pyproj import Geod                                # working with the Earth as an ellipsod (WGS-84)\nimport geopy.distance                                  # moving along a known distance on the Earth's ellipsoid surface\n\nimport matplotlib.pyplot as plt                        # plotting a graph\nfrom cartopy import crs as ccrs, feature as cfeature   # plotting a world map","key":"Z6erhePdVb"},{"type":"output","id":"BJ8e_1Z6iwq6W1pp0sKtX","data":[],"key":"yCIPGqkerX"}],"key":"bcHITQu5NX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Get all Coordinates for Locations\nlocation_df = pd.read_csv(\"../location_full_coords.txt\")\nlocation_df = location_df.rename(columns=lambda x: x.strip()) # strip excess white space from column names and values\nlocation_df.index = location_df[\"name\"]\nlocation_df.head()","key":"k7MBhUnNIR"},{"type":"output","id":"QGq0s7AYxYL-9UauCIi3w","data":[{"output_type":"execute_result","execution_count":2,"metadata":{},"data":{"text/plain":{"content":"              name  latitude  longitude        cart_x        cart_y  \\\nname                                                                  \narecibo    arecibo   18.3441   -66.7527  2.389526e+06 -5.562495e+06   \nboulder    boulder   40.0150  -105.2705 -1.286558e+06 -4.712394e+06   \nboston      boston   42.3601   -71.0589  1.529809e+06 -4.457769e+06   \nredwoods  redwoods   41.4017  -124.0417 -2.678169e+06 -3.964322e+06   \nhouston    houston   29.5518   -95.0982 -4.930480e+05 -5.526456e+06   \n\n                cart_z        rho     theta       phi       polar_x  \\\nname                                                                  \narecibo   2.007347e+06  6378137.0 -1.165054  1.250631 -5.562495e+06   \nboulder   4.101066e+06  6378137.0  1.304276  0.872403 -4.712394e+06   \nboston    4.297512e+06  6378137.0 -1.240212  0.831473 -4.457769e+06   \nredwoods  4.218080e+06  6378137.0  0.976657  0.848200 -3.964322e+06   \nhouston   3.145762e+06  6378137.0  1.481816  1.055020 -5.526456e+06   \n\n               polar_y       polar_z  \nname                                  \narecibo   2.389526e+06  2.007347e+06  \nboulder  -1.286558e+06  4.101066e+06  \nboston    1.529809e+06  4.297512e+06  \nredwoods -2.678169e+06  4.218080e+06  \nhouston  -4.930480e+05  3.145762e+06  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>cart_x</th>\n      <th>cart_y</th>\n      <th>cart_z</th>\n      <th>rho</th>\n      <th>theta</th>\n      <th>phi</th>\n      <th>polar_x</th>\n      <th>polar_y</th>\n      <th>polar_z</th>\n    </tr>\n    <tr>\n      <th>name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>arecibo</th>\n      <td>arecibo</td>\n      <td>18.3441</td>\n      <td>-66.7527</td>\n      <td>2.389526e+06</td>\n      <td>-5.562495e+06</td>\n      <td>2.007347e+06</td>\n      <td>6378137.0</td>\n      <td>-1.165054</td>\n      <td>1.250631</td>\n      <td>-5.562495e+06</td>\n      <td>2.389526e+06</td>\n      <td>2.007347e+06</td>\n    </tr>\n    <tr>\n      <th>boulder</th>\n      <td>boulder</td>\n      <td>40.0150</td>\n      <td>-105.2705</td>\n      <td>-1.286558e+06</td>\n      <td>-4.712394e+06</td>\n      <td>4.101066e+06</td>\n      <td>6378137.0</td>\n      <td>1.304276</td>\n      <td>0.872403</td>\n      <td>-4.712394e+06</td>\n      <td>-1.286558e+06</td>\n      <td>4.101066e+06</td>\n    </tr>\n    <tr>\n      <th>boston</th>\n      <td>boston</td>\n      <td>42.3601</td>\n      <td>-71.0589</td>\n      <td>1.529809e+06</td>\n      <td>-4.457769e+06</td>\n      <td>4.297512e+06</td>\n      <td>6378137.0</td>\n      <td>-1.240212</td>\n      <td>0.831473</td>\n      <td>-4.457769e+06</td>\n      <td>1.529809e+06</td>\n      <td>4.297512e+06</td>\n    </tr>\n    <tr>\n      <th>redwoods</th>\n      <td>redwoods</td>\n      <td>41.4017</td>\n      <td>-124.0417</td>\n      <td>-2.678169e+06</td>\n      <td>-3.964322e+06</td>\n      <td>4.218080e+06</td>\n      <td>6378137.0</td>\n      <td>0.976657</td>\n      <td>0.848200</td>\n      <td>-3.964322e+06</td>\n      <td>-2.678169e+06</td>\n      <td>4.218080e+06</td>\n    </tr>\n    <tr>\n      <th>houston</th>\n      <td>houston</td>\n      <td>29.5518</td>\n      <td>-95.0982</td>\n      <td>-4.930480e+05</td>\n      <td>-5.526456e+06</td>\n      <td>3.145762e+06</td>\n      <td>6378137.0</td>\n      <td>1.481816</td>\n      <td>1.055020</td>\n      <td>-5.526456e+06</td>\n      <td>-4.930480e+05</td>\n      <td>3.145762e+06</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"Vckja1rLSP"}],"key":"DW9M2tUVUH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine the distance of a point to a great circle arc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"akLT5CtcU2"}],"identifier":"determine-the-distance-of-a-point-to-a-great-circle-arc","label":"Determine the distance of a point to a great circle arc","html_id":"determine-the-distance-of-a-point-to-a-great-circle-arc","implicit":true,"key":"C4nbhtSiJp"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The cross-track distance, sometimes known as cross track error, determines the distance from a point to a great circle arc and can be determined with vectors (typically simpler too).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lFZY0tuA28"}],"key":"UFERwPttVK"}],"key":"upTBXK3sX0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"geodesic = Geod(ellps=\"WGS84\")\nearth_radius = 6378137  # meters","key":"KvudkNca6e"},{"type":"output","id":"FZtRTMqeLF7oLB-0t2kUm","data":[],"key":"CdsB1V95Bm"}],"key":"X79GjYGyz7"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Cross track distance: angular distance from point P to great circle path","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eonctO1X17"}],"key":"Zizs7BLLsy"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Along track distance: angular distance along the great circle path from A to B before hitting a point that is closest to point P","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"G8LBAJwm9i"}],"key":"SY0IpNFBEI"}],"key":"kfZvAUqclV"}],"key":"SrkTEwofbp"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Cross Track Distance","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ieHOySAOT8"}],"identifier":"cross-track-distance","label":"Cross Track Distance","html_id":"cross-track-distance","implicit":true,"key":"gJtrOnCdHR"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Distance of a point to a great circle arc is defined as:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"OBhQlPGHTx"}],"key":"MUPypmt0bb"},{"type":"math","value":"dxt = asin( sin(δ13) ⋅ sin(θ13 − θ12) ) * R","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>d</mi><mi>x</mi><mi>t</mi><mo>=</mo><mi>a</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>δ</mi><mn>13</mn><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mn>13</mn><mo>−</mo><mi>θ</mi><mn>12</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">dxt = asin( sin(δ13) ⋅ sin(θ13 − θ12) ) * R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mord\">13</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord\">13</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord\">12</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span>","enumerator":"1","key":"hzTErz2SVt"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"δ13 (delta_13) is (angular) distance from start point to third point","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"PL8On0Sp7e"}],"key":"gXWrbMYAy8"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"θ13 (theta_13) is (initial) bearing from start point to third point","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"OAYE1eWQd1"}],"key":"oG1i7NqE1L"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"θ12 (theta_12) is (initial) bearing from start point to end point","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"k8rQrUtm6L"}],"key":"yuVttwoTJ4"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"R is the earth’s radius","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"H51POAKBWS"}],"key":"DJ2qvnISTA"}],"key":"bKao5wYLzh"},{"type":"math","value":"d_xt = np.arcsin(np.sin(delta_13)*np.sin(theta_13 - theta_12)) * R","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>d</mi><mi>x</mi></msub><mi>t</mi><mo>=</mo><mi>n</mi><mi>p</mi><mi mathvariant=\"normal\">.</mi><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>p</mi><mi mathvariant=\"normal\">.</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>e</mi><mi>l</mi><mi>t</mi><msub><mi>a</mi><mn>1</mn></msub><mn>3</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>n</mi><mi>p</mi><mi mathvariant=\"normal\">.</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msub><mi>a</mi><mn>1</mn></msub><mn>3</mn><mo>−</mo><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msub><mi>a</mi><mn>1</mn></msub><mn>2</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">d_xt = np.arcsin(np.sin(delta_13)*np.sin(theta_13 - theta_12)) * R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">rcs</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">lt</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">2</span><span class=\"mclose\">))</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span>","enumerator":"2","key":"Dj5QJ973uB"},{"type":"math","value":"XTD =asin(sin(dist_AD)*sin(crs_AD-crs_AB))","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>X</mi><mi>T</mi><mi>D</mi><mo>=</mo><mi>a</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>i</mi><mi>s</mi><msub><mi>t</mi><mi>A</mi></msub><mi>D</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mi>r</mi><msub><mi>s</mi><mi>A</mi></msub><mi>D</mi><mo>−</mo><mi>c</mi><mi>r</mi><msub><mi>s</mi><mi>A</mi></msub><mi>B</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">XTD =asin(sin(dist_AD)*sin(crs_AD-crs_AB))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">XT</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">cr</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">cr</span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">))</span></span></span></span></span>","enumerator":"3","key":"dPrB3x411N"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":15,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Positive Cross-Track Distance: Point lies in the hemisphere to the left of the great circle","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"q9F42zmsIO"}],"key":"kutGCv5TU4"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Negative Cross-Track Distance: Point lies in the hemiphere to the right of the great circle","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"AFc65dxH4L"}],"key":"QxpcAzSIID"}],"key":"w2eR1g0qEJ"},{"type":"blockquote","position":{"start":{"line":18,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"If the point A is the N. or S. Pole replace crs_AD-crs_AB with\nlon_D-lon_B or lon_B-lon_D, respectively","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"xJ5OXBJaM2"}],"key":"ywXG8SBXES"}],"key":"BLMx1w7O47"}],"key":"ZyHi6zwoze"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def cross_track_distance(start_point=None, end_point=None, new_point=None):\n    fwd_bearing_start_end, _, _ = geodesic.inv(location_df.loc[start_point, \"longitude\"],\n                                               location_df.loc[start_point, \"latitude\"],\n                                               location_df.loc[end_point, \"longitude\"],\n                                               location_df.loc[end_point, \"latitude\"])\n    fwd_bearing_start_new, _, distance_m_start_new = geodesic.inv(location_df.loc[start_point, \"longitude\"],\n                                                                  location_df.loc[start_point, \"latitude\"],\n                                                                  location_df.loc[new_point, \"longitude\"],\n                                                                  location_df.loc[new_point, \"latitude\"]) \n\n    angular_distance_start_new = distance_m_start_new / earth_radius\n    ct_distance = np.arcsin(np.sin(angular_distance_start_new) * np.sin(np.deg2rad(fwd_bearing_start_new - fwd_bearing_start_end))) * earth_radius\n    return ct_distance","key":"CmZfVU3WBC"},{"type":"output","id":"ZQ0SXYozEe11A9q7sjH-a","data":[],"key":"wEhmruVDTO"}],"key":"dk7DvC9ICM"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Along Track Distance","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KKbxFBwZcd"}],"identifier":"along-track-distance","label":"Along Track Distance","html_id":"along-track-distance","implicit":true,"key":"iB1FERZkVn"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Distance along a great circle arc, closest to a point is defined as:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hpHDLncUXA"}],"key":"Zw9Pd5UGB7"},{"type":"math","value":"dat = acos(\\frac{cos(δ13)}{cos(δxt)}) * R","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>d</mi><mi>a</mi><mi>t</mi><mo>=</mo><mi>a</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>δ</mi><mn>13</mn><mo stretchy=\"false\">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>δ</mi><mi>x</mi><mi>t</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">dat = acos(\\frac{cos(δ13)}{cos(δxt)}) * R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mord\">13</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span>","enumerator":"4","key":"YwW8u4wzwT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"δ13 (delta_13) is (angular) distance from start point to third point","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"B0Our6fOdi"}],"key":"qOB6M1v4UL"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"δxt (delta_xt) is (angular) cross-track distance","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"n1iBVQXIrs"}],"key":"nbiTzJBMvp"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"R is the earth’s radius","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"haYDaKDPoj"}],"key":"NFV2tArKP3"}],"key":"b1b5ZccBgj"},{"type":"math","value":"d_at = np.arccos(\\frac{np.cos(delta_13)}{np.cos(d_xt/R)} * R","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>d</mi><mi>a</mi></msub><mi>t</mi><mo>=</mo><mi>n</mi><mi>p</mi><mi mathvariant=\"normal\">.</mi><mi>a</mi><mi>r</mi><mi>c</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>n</mi><mi>p</mi><mi mathvariant=\"normal\">.</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>e</mi><mi>l</mi><mi>t</mi><msub><mi>a</mi><mn>1</mn></msub><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><mrow><mi>n</mi><mi>p</mi><mi mathvariant=\"normal\">.</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>d</mi><mi>x</mi></msub><mi>t</mi><mi mathvariant=\"normal\">/</mi><mi>R</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo>∗</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">d_at = np.arccos(\\frac{np.cos(delta_13)}{np.cos(d_xt/R)} * R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">rccos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">lt</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span>","enumerator":"5","key":"lWiA8gWmi6"},{"type":"math","value":"ATD=acos(\\frac{cos(dist_AD)}{cos(XTD)})","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mi>T</mi><mi>D</mi><mo>=</mo><mi>a</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>i</mi><mi>s</mi><msub><mi>t</mi><mi>A</mi></msub><mi>D</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>T</mi><mi>D</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">ATD=acos(\\frac{cos(dist_AD)}{cos(XTD)})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">XT</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"6","key":"WKNWne4McU"},{"type":"blockquote","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"For very short distances (is less susceptible to rounding error):","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"kbvpFa8LEk"}],"key":"jVC2Qulfk9"}],"key":"bkCMS136ru"},{"type":"math","value":"ATD=asin(\\sqrt{\\frac{sin(dist_AD))^2 - (sin(XTD))^2 )}{cos(XTD)}}","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mi>T</mi><mi>D</mi><mo>=</mo><mi>a</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><msqrt><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>i</mi><mi>s</mi><msub><mi>t</mi><mi>A</mi></msub><mi>D</mi><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>−</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>T</mi><mi>D</mi><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi>T</mi><mi>D</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></msqrt></mrow><annotation encoding=\"application/x-tex\">ATD=asin(\\sqrt{\\frac{sin(dist_AD))^2 - (sin(XTD))^2 )}{cos(XTD)}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.04em;vertical-align:-1.1606em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8794em;\"><span class=\"svg-align\" style=\"top:-5em;\"><span class=\"pstrut\" style=\"height:5em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">XT</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">XT</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.8394em;\"><span class=\"pstrut\" style=\"height:5em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:3.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='3.08em' viewBox='0 0 400000 3240' preserveAspectRatio='xMinYMin slice'><path d='M473,2793\nc339.3,-1799.3,509.3,-2700,510,-2702 l0 -0\nc3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM1001 80h400000v40H1017.7z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1606em;\"><span></span></span></span></span></span></span></span></span></span>","enumerator":"7","key":"AQWKhZQmlf"}],"key":"x2Z76pk0A0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def along_track_distance(start_point=None, end_point=None, new_point=None):\n    crosst_distance = cross_track_distance(start_point, end_point, new_point)\n\n    _, _, distance_m_start_new = geodesic.inv(location_df.loc[start_point, \"longitude\"],\n                                              location_df.loc[start_point, \"latitude\"],\n                                              location_df.loc[new_point, \"longitude\"],\n                                              location_df.loc[new_point, \"latitude\"])  \n    angular_distance_start_new = distance_m_start_new / earth_radius\n    at_distance = np.arccos(np.cos(angular_distance_start_new) / np.cos(crosst_distance / earth_radius)) * earth_radius\n    return at_distance","key":"Tc8LL6CjQE"},{"type":"output","id":"ofjy-MyEhuCJQWe_OlkRd","data":[],"key":"KXuwCpjn8v"}],"key":"ugbc5WJPqb"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Generate Points at Intermediate Points along an Arc/Path","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Un5sokC4Uh"}],"identifier":"generate-points-at-intermediate-points-along-an-arc-path","label":"Generate Points at Intermediate Points along an Arc/Path","html_id":"generate-points-at-intermediate-points-along-an-arc-path","implicit":true,"key":"LEFJOJyTCj"}],"key":"e4nKFVqUIX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Distance point along great circle path\ndef point_along_path(start_point=None, end_point=None, distance_m=None):\n    fwd_bearing, _, _ = geodesic.inv(location_df.loc[start_point, \"longitude\"],\n                                     location_df.loc[start_point, \"latitude\"],\n                                     location_df.loc[end_point, \"longitude\"],\n                                     location_df.loc[end_point, \"latitude\"])  \n    origin = geopy.Point(location_df.loc[start_point, \"latitude\"],\n                         location_df.loc[start_point, \"longitude\"])\n    distance_to_move = geopy.distance.distance(\n                            kilometers=distance_m / 1000)  # distance to move towards the next point\n    final_position = distance_to_move.destination(origin, bearing=fwd_bearing)\n    return (final_position.latitude, final_position.longitude)","key":"AHFA5jNGuP"},{"type":"output","id":"LBEjYaJEHFrE78TUWFO4M","data":[],"key":"GrnK7zXfEq"}],"key":"HIbUmJcDHT"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def interpolate_points_along_gc(lat_start,\n                                lon_start,\n                                lat_end,\n                                lon_end,\n                                distance_between_points_meter): \n    lat_lon_points = [(lat_start, lon_start)]\n    \n    # move to next point when distance between points is less than the equal distance\n    move_to_next_point = True\n    while(move_to_next_point):\n        forward_bearing, reverse_bearing, distance_meters = geodesic.inv(lon_start,\n                                                                         lat_start, \n                                                                         lon_end,\n                                                                         lat_end)\n        if distance_meters < distance_between_points_meter:\n            # ends before overshooting\n            move_to_next_point = False\n        else:\n            start_point = geopy.Point(lat_start, lon_start)\n            distance_to_move = geopy.distance.distance(\n                            kilometers=distance_between_points_meter /\n                            1000)  # distance to move towards the next point\n            final_position = distance_to_move.destination(\n                            start_point, bearing=forward_bearing)\n            lat_lon_points.append((final_position.latitude, final_position.longitude))\n            # new starting position is newly found end position\n            lon_start, lat_start = final_position.longitude, final_position.latitude\n    lat_lon_points.append((lat_end, lon_end))\n    return lat_lon_points\n\ndef arc_points(start_lat=None,\n               start_lon=None,\n               end_lat=None,\n               end_lon=None,\n               n_total_points=10):\n    _, _, distance_meter =  geodesic.inv(start_lon,\n                                        start_lat,\n                                        end_lon,\n                                        end_lat)\n        \n    distance_between_points_meter = distance_meter / (n_total_points + 1)\n\n    \n    new_points_lst = interpolate_points_along_gc(start_lat,\n                                              start_lon,\n                                              end_lat,\n                                              end_lon,\n                                              distance_between_points_meter)\n    return new_points_lst","key":"hrv0rJBokq"},{"type":"output","id":"IhFBDzbh76FDwcGo8Gh7U","data":[],"key":"yZia8RsEuY"}],"key":"XvSpBndCu6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def plot_cross_track(start_point=None, end_point=None, new_point=None,\n                     lon_west=-130, lon_east=-60,\n                     lat_south=20, lat_north=60):\n    # Set up world map plot\n    fig = plt.subplots(figsize=(16, 10))\n    projection_map = ccrs.PlateCarree()\n    ax = plt.axes(projection=projection_map)\n    ax.set_extent([lon_west, lon_east, lat_south, lat_north], crs=projection_map)\n    ax.coastlines(color=\"black\")\n    ax.add_feature(cfeature.BORDERS, edgecolor='grey')\n    ax.add_feature(cfeature.STATES, edgecolor=\"grey\")\n\n    # Cross-Track and Along-Track Distances\n    ct_distance = cross_track_distance(start_point, end_point, new_point)\n    print(f\"Cross Track Distance: \\n{ct_distance} meters ({ct_distance/1000} km)\")\n\n    at_distance = along_track_distance(start_point, end_point, new_point)\n    print(f\"Along Track Distance: \\n{at_distance} meters ({at_distance/1000} km)\\n\")\n\n    closest_point = point_along_path(start_point, end_point, at_distance)\n    print(f\"Closest Point To Point Along Great Circle Path:\\n{closest_point}\") \n\n    # Plot Latitude/Longitude Location\n    great_circle_arc_pts = arc_points(location_df.loc[start_point, \"latitude\"],\n                                      location_df.loc[start_point, \"longitude\"],\n                                      location_df.loc[end_point, \"latitude\"],\n                                      location_df.loc[end_point, \"longitude\"],\n                                      10)\n    longitudes = [x[1] for x in great_circle_arc_pts] # longitude\n    latitudes = [x[0] for x in great_circle_arc_pts] # latitude\n    plt.plot(longitudes, latitudes, c=\"purple\")\n    plt.scatter(longitudes, latitudes, c=\"purple\")\n\n    cross_track_arc = arc_points(closest_point[0],\n                                 closest_point[1],\n                                 location_df.loc[new_point, \"latitude\"],\n                                 location_df.loc[new_point, \"longitude\"],\n                                   10)\n    longitudes = [x[1] for x in cross_track_arc] # longitude\n    latitudes = [x[0] for x in cross_track_arc] # latitude\n    plt.plot(longitudes, latitudes, c=\"green\")\n    plt.scatter(longitudes, latitudes, c=\"green\")\n\n    # plot closest_point in red\n    plt.scatter(closest_point[1], closest_point[0], c=\"red\")\n\n    plt.title(f\"Closest Point {closest_point} from {start_point.title()}->{end_point.title()} to {new_point.title()}, Cross-Track Distance = {ct_distance/1000:4f} km\")\n    plt.show()","key":"IVUts7pjEe"},{"type":"output","id":"mQXCy14eRJwr97h1RyMoj","data":[],"key":"TtbIYoPxXP"}],"key":"Lt53PcY8e8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Positive Cross-Track Distance: Point lies in the hemisphere to the left of the great circle","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Aem4kkpyTf"}],"identifier":"positive-cross-track-distance-point-lies-in-the-hemisphere-to-the-left-of-the-great-circle","label":"Positive Cross-Track Distance: Point lies in the hemisphere to the left of the great circle","html_id":"positive-cross-track-distance-point-lies-in-the-hemisphere-to-the-left-of-the-great-circle","implicit":true,"key":"EHbwV9MU1u"}],"key":"sZToDTxIKO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_cross_track(start_point=\"boulder\", end_point=\"greenwich\", new_point=\"greenwich\")","key":"OiSnL3XHPw"},{"type":"output","id":"v4zTnI1oKXnzgdlQNGQBy","data":[{"output_type":"stream","name":"stdout","text":"Cross Track Distance: \n0.0 meters (0.0 km)\nAlong Track Distance: \n7561763.794332366 meters (7561.763794332366 km)\n\nClosest Point To Point Along Great Circle Path:\n(51.49340000000001, 0.009800000000012687)\n"},{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31merror\u001b[39m                                     Traceback (most recent call last)\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/IPython/core/formatters.py:402\u001b[39m, in \u001b[36mBaseFormatter.__call__\u001b[39m\u001b[34m(self, obj)\u001b[39m\n\u001b[32m    400\u001b[39m     \u001b[38;5;28;01mpass\u001b[39;00m\n\u001b[32m    401\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m402\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mprinter\u001b[49m\u001b[43m(\u001b[49m\u001b[43mobj\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    403\u001b[39m \u001b[38;5;66;03m# Finally look for special method names\u001b[39;00m\n\u001b[32m    404\u001b[39m method = get_real_method(obj, \u001b[38;5;28mself\u001b[39m.print_method)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/IPython/core/pylabtools.py:170\u001b[39m, in \u001b[36mprint_figure\u001b[39m\u001b[34m(fig, fmt, bbox_inches, base64, **kwargs)\u001b[39m\n\u001b[32m    167\u001b[39m     \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mmatplotlib\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01mbackend_bases\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m FigureCanvasBase\n\u001b[32m    168\u001b[39m     FigureCanvasBase(fig)\n\u001b[32m--> \u001b[39m\u001b[32m170\u001b[39m \u001b[43mfig\u001b[49m\u001b[43m.\u001b[49m\u001b[43mcanvas\u001b[49m\u001b[43m.\u001b[49m\u001b[43mprint_figure\u001b[49m\u001b[43m(\u001b[49m\u001b[43mbytes_io\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkw\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    171\u001b[39m data = bytes_io.getvalue()\n\u001b[32m    172\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m fmt == \u001b[33m'\u001b[39m\u001b[33msvg\u001b[39m\u001b[33m'\u001b[39m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/backend_bases.py:2155\u001b[39m, in \u001b[36mFigureCanvasBase.print_figure\u001b[39m\u001b[34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)\u001b[39m\n\u001b[32m   2152\u001b[39m     \u001b[38;5;66;03m# we do this instead of `self.figure.draw_without_rendering`\u001b[39;00m\n\u001b[32m   2153\u001b[39m     \u001b[38;5;66;03m# so that we can inject the orientation\u001b[39;00m\n\u001b[32m   2154\u001b[39m     \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28mgetattr\u001b[39m(renderer, \u001b[33m\"\u001b[39m\u001b[33m_draw_disabled\u001b[39m\u001b[33m\"\u001b[39m, nullcontext)():\n\u001b[32m-> \u001b[39m\u001b[32m2155\u001b[39m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mfigure\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   2156\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m bbox_inches:\n\u001b[32m   2157\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m bbox_inches == \u001b[33m\"\u001b[39m\u001b[33mtight\u001b[39m\u001b[33m\"\u001b[39m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/artist.py:94\u001b[39m, in \u001b[36m_finalize_rasterization.<locals>.draw_wrapper\u001b[39m\u001b[34m(artist, renderer, *args, **kwargs)\u001b[39m\n\u001b[32m     92\u001b[39m \u001b[38;5;129m@wraps\u001b[39m(draw)\n\u001b[32m     93\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mdraw_wrapper\u001b[39m(artist, renderer, *args, **kwargs):\n\u001b[32m---> \u001b[39m\u001b[32m94\u001b[39m     result = \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     95\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m renderer._rasterizing:\n\u001b[32m     96\u001b[39m         renderer.stop_rasterizing()\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/artist.py:71\u001b[39m, in \u001b[36mallow_rasterization.<locals>.draw_wrapper\u001b[39m\u001b[34m(artist, renderer)\u001b[39m\n\u001b[32m     68\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m     69\u001b[39m         renderer.start_filter()\n\u001b[32m---> \u001b[39m\u001b[32m71\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     72\u001b[39m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[32m     73\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/figure.py:3257\u001b[39m, in \u001b[36mFigure.draw\u001b[39m\u001b[34m(self, renderer)\u001b[39m\n\u001b[32m   3254\u001b[39m             \u001b[38;5;66;03m# ValueError can occur when resizing a window.\u001b[39;00m\n\u001b[32m   3256\u001b[39m     \u001b[38;5;28mself\u001b[39m.patch.draw(renderer)\n\u001b[32m-> \u001b[39m\u001b[32m3257\u001b[39m     \u001b[43mmimage\u001b[49m\u001b[43m.\u001b[49m\u001b[43m_draw_list_compositing_images\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m   3258\u001b[39m \u001b[43m        \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43martists\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43msuppressComposite\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   3260\u001b[39m     renderer.close_group(\u001b[33m'\u001b[39m\u001b[33mfigure\u001b[39m\u001b[33m'\u001b[39m)\n\u001b[32m   3261\u001b[39m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/image.py:134\u001b[39m, in \u001b[36m_draw_list_compositing_images\u001b[39m\u001b[34m(renderer, parent, artists, suppress_composite)\u001b[39m\n\u001b[32m    132\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m not_composite \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m has_images:\n\u001b[32m    133\u001b[39m     \u001b[38;5;28;01mfor\u001b[39;00m a \u001b[38;5;129;01min\u001b[39;00m artists:\n\u001b[32m--> \u001b[39m\u001b[32m134\u001b[39m         \u001b[43ma\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    135\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    136\u001b[39m     \u001b[38;5;66;03m# Composite any adjacent images together\u001b[39;00m\n\u001b[32m    137\u001b[39m     image_group = []\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/artist.py:71\u001b[39m, in \u001b[36mallow_rasterization.<locals>.draw_wrapper\u001b[39m\u001b[34m(artist, renderer)\u001b[39m\n\u001b[32m     68\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m     69\u001b[39m         renderer.start_filter()\n\u001b[32m---> \u001b[39m\u001b[32m71\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     72\u001b[39m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[32m     73\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/mpl/geoaxes.py:524\u001b[39m, in \u001b[36mGeoAxes.draw\u001b[39m\u001b[34m(self, renderer, **kwargs)\u001b[39m\n\u001b[32m    519\u001b[39m         \u001b[38;5;28mself\u001b[39m.imshow(img, extent=extent, origin=origin,\n\u001b[32m    520\u001b[39m                     transform=factory.crs, *factory_args[\u001b[32m1\u001b[39m:],\n\u001b[32m    521\u001b[39m                     **factory_kwargs)\n\u001b[32m    522\u001b[39m \u001b[38;5;28mself\u001b[39m._done_img_factory = \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m524\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m=\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/artist.py:71\u001b[39m, in \u001b[36mallow_rasterization.<locals>.draw_wrapper\u001b[39m\u001b[34m(artist, renderer)\u001b[39m\n\u001b[32m     68\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m     69\u001b[39m         renderer.start_filter()\n\u001b[32m---> \u001b[39m\u001b[32m71\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     72\u001b[39m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[32m     73\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/axes/_base.py:3216\u001b[39m, in \u001b[36m_AxesBase.draw\u001b[39m\u001b[34m(self, renderer)\u001b[39m\n\u001b[32m   3213\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m artists_rasterized:\n\u001b[32m   3214\u001b[39m     _draw_rasterized(\u001b[38;5;28mself\u001b[39m.get_figure(root=\u001b[38;5;28;01mTrue\u001b[39;00m), artists_rasterized, renderer)\n\u001b[32m-> \u001b[39m\u001b[32m3216\u001b[39m \u001b[43mmimage\u001b[49m\u001b[43m.\u001b[49m\u001b[43m_draw_list_compositing_images\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m   3217\u001b[39m \u001b[43m    \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43martists\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mget_figure\u001b[49m\u001b[43m(\u001b[49m\u001b[43mroot\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m.\u001b[49m\u001b[43msuppressComposite\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   3219\u001b[39m renderer.close_group(\u001b[33m'\u001b[39m\u001b[33maxes\u001b[39m\u001b[33m'\u001b[39m)\n\u001b[32m   3220\u001b[39m \u001b[38;5;28mself\u001b[39m.stale = \u001b[38;5;28;01mFalse\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/image.py:134\u001b[39m, in \u001b[36m_draw_list_compositing_images\u001b[39m\u001b[34m(renderer, parent, artists, suppress_composite)\u001b[39m\n\u001b[32m    132\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m not_composite \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m has_images:\n\u001b[32m    133\u001b[39m     \u001b[38;5;28;01mfor\u001b[39;00m a \u001b[38;5;129;01min\u001b[39;00m artists:\n\u001b[32m--> \u001b[39m\u001b[32m134\u001b[39m         \u001b[43ma\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    135\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    136\u001b[39m     \u001b[38;5;66;03m# Composite any adjacent images together\u001b[39;00m\n\u001b[32m    137\u001b[39m     image_group = []\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/artist.py:71\u001b[39m, in \u001b[36mallow_rasterization.<locals>.draw_wrapper\u001b[39m\u001b[34m(artist, renderer)\u001b[39m\n\u001b[32m     68\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m     69\u001b[39m         renderer.start_filter()\n\u001b[32m---> \u001b[39m\u001b[32m71\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     72\u001b[39m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[32m     73\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/mpl/feature_artist.py:185\u001b[39m, in \u001b[36mFeatureArtist.draw\u001b[39m\u001b[34m(self, renderer)\u001b[39m\n\u001b[32m    180\u001b[39m     geoms = \u001b[38;5;28mself\u001b[39m._feature.geometries()\n\u001b[32m    181\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    182\u001b[39m     \u001b[38;5;66;03m# For efficiency on local maps with high resolution features (e.g\u001b[39;00m\n\u001b[32m    183\u001b[39m     \u001b[38;5;66;03m# from Natural Earth), only create paths for geometries that are\u001b[39;00m\n\u001b[32m    184\u001b[39m     \u001b[38;5;66;03m# in view.\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m185\u001b[39m     geoms = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_feature\u001b[49m\u001b[43m.\u001b[49m\u001b[43mintersecting_geometries\u001b[49m\u001b[43m(\u001b[49m\u001b[43mextent\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    187\u001b[39m stylised_paths = {}\n\u001b[32m    188\u001b[39m \u001b[38;5;66;03m# Make an empty placeholder style dictionary for when styler is not\u001b[39;00m\n\u001b[32m    189\u001b[39m \u001b[38;5;66;03m# used.  Freeze it so that we can use it as a dict key.  We will need\u001b[39;00m\n\u001b[32m    190\u001b[39m \u001b[38;5;66;03m# to unfreeze all style dicts with dict(frozen) before passing to mpl.\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/feature/__init__.py:309\u001b[39m, in \u001b[36mNaturalEarthFeature.intersecting_geometries\u001b[39m\u001b[34m(self, extent)\u001b[39m\n\u001b[32m    302\u001b[39m \u001b[38;5;250m\u001b[39m\u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    303\u001b[39m \u001b[33;03mReturns an iterator of shapely geometries that intersect with\u001b[39;00m\n\u001b[32m    304\u001b[39m \u001b[33;03mthe given extent.\u001b[39;00m\n\u001b[32m    305\u001b[39m \u001b[33;03mThe extent is assumed to be in the CRS of the feature.\u001b[39;00m\n\u001b[32m    306\u001b[39m \u001b[33;03mIf extent is None, the method returns all geometries for this dataset.\u001b[39;00m\n\u001b[32m    307\u001b[39m \u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    308\u001b[39m \u001b[38;5;28mself\u001b[39m.scaler.scale_from_extent(extent)\n\u001b[32m--> \u001b[39m\u001b[32m309\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m.\u001b[49m\u001b[43mintersecting_geometries\u001b[49m\u001b[43m(\u001b[49m\u001b[43mextent\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/feature/__init__.py:112\u001b[39m, in \u001b[36mFeature.intersecting_geometries\u001b[39m\u001b[34m(self, extent)\u001b[39m\n\u001b[32m    109\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m extent \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m np.isnan(extent[\u001b[32m0\u001b[39m]):\n\u001b[32m    110\u001b[39m     extent_geom = sgeom.box(extent[\u001b[32m0\u001b[39m], extent[\u001b[32m2\u001b[39m],\n\u001b[32m    111\u001b[39m                             extent[\u001b[32m1\u001b[39m], extent[\u001b[32m3\u001b[39m])\n\u001b[32m--> \u001b[39m\u001b[32m112\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m (geom \u001b[38;5;28;01mfor\u001b[39;00m geom \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mgeometries\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m \u001b[38;5;28;01mif\u001b[39;00m\n\u001b[32m    113\u001b[39m             geom \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;129;01mand\u001b[39;00m extent_geom.intersects(geom))\n\u001b[32m    114\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    115\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m.geometries()\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/feature/__init__.py:294\u001b[39m, in \u001b[36mNaturalEarthFeature.geometries\u001b[39m\u001b[34m(self)\u001b[39m\n\u001b[32m    290\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m key \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m _NATURAL_EARTH_GEOM_CACHE:\n\u001b[32m    291\u001b[39m     path = shapereader.natural_earth(resolution=\u001b[38;5;28mself\u001b[39m.scale,\n\u001b[32m    292\u001b[39m                                      category=\u001b[38;5;28mself\u001b[39m.category,\n\u001b[32m    293\u001b[39m                                      name=\u001b[38;5;28mself\u001b[39m.name)\n\u001b[32m--> \u001b[39m\u001b[32m294\u001b[39m     geometries = \u001b[38;5;28mtuple\u001b[39m(\u001b[43mshapereader\u001b[49m\u001b[43m.\u001b[49m\u001b[43mReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43mpath\u001b[49m\u001b[43m)\u001b[49m.geometries())\n\u001b[32m    295\u001b[39m     _NATURAL_EARTH_GEOM_CACHE[key] = geometries\n\u001b[32m    296\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/shapereader.py:138\u001b[39m, in \u001b[36mBasicReader.__init__\u001b[39m\u001b[34m(self, filename, bbox, **kwargs)\u001b[39m\n\u001b[32m    136\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34m__init__\u001b[39m(\u001b[38;5;28mself\u001b[39m, filename, bbox=\u001b[38;5;28;01mNone\u001b[39;00m, **kwargs):\n\u001b[32m    137\u001b[39m     \u001b[38;5;66;03m# Validate the filename/shapefile\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m138\u001b[39m     \u001b[38;5;28mself\u001b[39m._reader = reader = \u001b[43mshapefile\u001b[49m\u001b[43m.\u001b[49m\u001b[43mReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilename\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    139\u001b[39m     \u001b[38;5;28mself\u001b[39m._bbox = bbox\n\u001b[32m    140\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m reader.shp \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;129;01mor\u001b[39;00m reader.shx \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;129;01mor\u001b[39;00m reader.dbf \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/shapefile.py:1048\u001b[39m, in \u001b[36mReader.__init__\u001b[39m\u001b[34m(self, *args, **kwargs)\u001b[39m\n\u001b[32m   1043\u001b[39m                 \u001b[38;5;28;01mraise\u001b[39;00m ShapefileException(\u001b[33m\"\u001b[39m\u001b[33mNo shp or dbf file found at url: \u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[33m\"\u001b[39m % path)\n\u001b[32m   1045\u001b[39m         \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m   1046\u001b[39m             \u001b[38;5;66;03m# Local file path to a shapefile\u001b[39;00m\n\u001b[32m   1047\u001b[39m             \u001b[38;5;66;03m# Load and exit early\u001b[39;00m\n\u001b[32m-> \u001b[39m\u001b[32m1048\u001b[39m             \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mload\u001b[49m\u001b[43m(\u001b[49m\u001b[43mpath\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   1049\u001b[39m             \u001b[38;5;28;01mreturn\u001b[39;00m\n\u001b[32m   1051\u001b[39m \u001b[38;5;66;03m# Otherwise, load from separate shp/shx/dbf args (must be path or file-like)\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/shapefile.py:1195\u001b[39m, in \u001b[36mReader.load\u001b[39m\u001b[34m(self, shapefile)\u001b[39m\n\u001b[32m   1193\u001b[39m         \u001b[38;5;28;01mraise\u001b[39;00m ShapefileException(\u001b[33m\"\u001b[39m\u001b[33mUnable to open \u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[33m.dbf or \u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[33m.shp.\u001b[39m\u001b[33m\"\u001b[39m % (shapeName, shapeName))\n\u001b[32m   1194\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m.shp:\n\u001b[32m-> \u001b[39m\u001b[32m1195\u001b[39m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m__shpHeader\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   1196\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m.dbf:\n\u001b[32m   1197\u001b[39m     \u001b[38;5;28mself\u001b[39m.__dbfHeader()\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/shapefile.py:1287\u001b[39m, in \u001b[36mReader.__shpHeader\u001b[39m\u001b[34m(self)\u001b[39m\n\u001b[32m   1285\u001b[39m \u001b[38;5;66;03m# File length (16-bit word * 2 = bytes)\u001b[39;00m\n\u001b[32m   1286\u001b[39m shp.seek(\u001b[32m24\u001b[39m)\n\u001b[32m-> \u001b[39m\u001b[32m1287\u001b[39m \u001b[38;5;28mself\u001b[39m.shpLength = \u001b[43munpack\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43m>i\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mshp\u001b[49m\u001b[43m.\u001b[49m\u001b[43mread\u001b[49m\u001b[43m(\u001b[49m\u001b[32;43m4\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m[\u001b[32m0\u001b[39m] * \u001b[32m2\u001b[39m\n\u001b[32m   1288\u001b[39m \u001b[38;5;66;03m# Shape type\u001b[39;00m\n\u001b[32m   1289\u001b[39m shp.seek(\u001b[32m32\u001b[39m)\n\n\u001b[31merror\u001b[39m: unpack requires a buffer of 4 bytes","ename":"error","evalue":"unpack requires a buffer of 4 bytes"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1600x1000 with 2 Axes>","content_type":"text/plain"}}}],"key":"cmosEZZP71"}],"key":"wtyXZWErgo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_cross_track(start_point=\"boulder\", end_point=\"boston\", new_point=\"cape canaveral\")","key":"rc7OYUFny4"},{"type":"output","id":"DJEF0tBxmsik4i4161e2d","data":[{"output_type":"stream","name":"stdout","text":"Cross Track Distance: \n1593669.526094791 meters (1593.669526094791 km)\nAlong Track Distance: \n2076501.5510165778 meters (2076.5015510165777 km)\n\nClosest Point To Point Along Great Circle Path:\n(42.75525245755491, -80.62124342116076)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:241: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/50m_cultural/ne_50m_admin_0_boundary_lines_land.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1600x1000 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"2bf6b7fa2c3f8b62f39c609dae916bd7","path":"/great-circle-cookbook/build/2bf6b7fa2c3f8b62f39c609dae916bd7.png"}}}],"key":"GdArWsntWl"}],"key":"hEGdkVSHun"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_cross_track(start_point=\"boulder\", end_point=\"boston\", new_point=\"arecibo\",\n                lat_south=15)","key":"oPMJH5NPBM"},{"type":"output","id":"UxsDLR8P4QccyvYoCMtlW","data":[{"output_type":"stream","name":"stdout","text":"Cross Track Distance: \n2577081.0417989404 meters (2577.0810417989405 km)\nAlong Track Distance: \n3669432.5407487787 meters (3669.4325407487786 km)\n\nClosest Point To Point Along Great Circle Path:\n(41.142677689865174, -61.4898025092551)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1600x1000 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"1518c8079e4bf72a6e2d65556836061c","path":"/great-circle-cookbook/build/1518c8079e4bf72a6e2d65556836061c.png"}}}],"key":"SptdoBFY8c"}],"key":"d1tXkgbGRp"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Negative Cross-Track Distance: Point lies in the hemiphere to the right of the great circle","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UmAIZZnIyo"}],"identifier":"negative-cross-track-distance-point-lies-in-the-hemiphere-to-the-right-of-the-great-circle","label":"Negative Cross-Track Distance: Point lies in the hemiphere to the right of the great circle","html_id":"negative-cross-track-distance-point-lies-in-the-hemiphere-to-the-right-of-the-great-circle","implicit":true,"key":"bN7IJnu2hE"}],"key":"eGeTL5rRMg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_cross_track(start_point=\"boulder\", end_point=\"boston\", new_point=\"redwoods\")","key":"pLfgD8DTuQ"},{"type":"output","id":"4PHjGdl-lxP-2MBQg-SgK","data":[{"output_type":"stream","name":"stdout","text":"Cross Track Distance: \n-744048.9243466797 meters (-744.0489243466797 km)\nAlong Track Distance: \n1409025.1954944504 meters (1409.0251954944504 km)\n\nClosest Point To Point Along Great Circle Path:\n(42.46116756301668, -88.74894120764374)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1600x1000 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"cca860e0afd997e7c75659eb6d6ecdd2","path":"/great-circle-cookbook/build/cca860e0afd997e7c75659eb6d6ecdd2.png"}}}],"key":"wzzL3UrWFE"}],"key":"buWl30URKp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_cross_track(start_point=\"boulder\", end_point=\"boston\", new_point=\"greenwich\",\n                lon_east=15)","key":"ul8O1CnxkB"},{"type":"output","id":"d3GjfWXxkl87IQzOsbcMQ","data":[{"output_type":"stream","name":"stdout","text":"Cross Track Distance: \n-3381043.8402817464 meters (-3381.0438402817463 km)\nAlong Track Distance: \n7144535.346708467 meters (7144.535346708467 km)\n\nClosest Point To Point Along Great Circle Path:\n(28.39735920969611, -26.451361846821584)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1600x1000 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"5ea5081e11438d1fcc1da555ecb2e321","path":"/great-circle-cookbook/build/5ea5081e11438d1fcc1da555ecb2e321.png"}}}],"key":"pXlfCQMHMP"}],"key":"cdMvLpN2kN"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine if a point lies on a great circle arc and path","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LvIQgSqwg4"}],"identifier":"determine-if-a-point-lies-on-a-great-circle-arc-and-path","label":"Determine if a point lies on a great circle arc and path","html_id":"determine-if-a-point-lies-on-a-great-circle-arc-and-path","implicit":true,"key":"SdkaA0GALy"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"With and without tolerances (in meters):","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lWKk2z2h7V"}],"key":"EavHPoBNT5"}],"key":"snbReGqusz"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def is_point_on_arc(start_point=None, end_point=None,\n                check_point=None, tolerance=0):\n    # tolerance in meters\n    lon1 = np.deg2rad(location_df.loc[start_point, \"longitude\"])\n    lat1 = np.deg2rad(location_df.loc[start_point, \"latitude\"])\n    lon2 = np.deg2rad(location_df.loc[end_point, \"longitude\"])\n    lat2 = np.deg2rad(location_df.loc[end_point, \"latitude\"])\n    check_lon = np.deg2rad(location_df.loc[check_point, \"longitude\"])\n    check_lat = np.deg2rad(location_df.loc[check_point, \"latitude\"])\n\n    # Verify not meridian (longitude passes through the poles)\n    if np.sin(lon1 - lon2) == 0:\n        print(\"Invalid inputs: start/end points are meridians\")\n        return np.nan\n    \n    # verify not anitpodal (diametrically opposite, points)\n    if lat1 + lat2 == 0 and abs(lon1-lon2) == np.pi:\n        print(\"Invalid inputs: start/end points are antipodal\")\n        return np.nan\n    # account for tolerance based on cross-track distance from arc\n    ct_distance = cross_track_distance(start_point, end_point, check_point)\n    print(f\"Cross-Track Distance = {ct_distance} meters\")\n    if np.abs(ct_distance) <= tolerance:\n        return True\n\n    # determine expected latitude\n    num = np.sin(lat1)*np.cos(lat2)*np.sin(check_lon-lon2)-np.sin(lat2)*np.cos(lat1)*np.sin(check_lon-lon1)\n    den = np.cos(lat1)*np.cos(lat2)*np.sin(lon1-lon2)\n    new_lat = np.arctan(num/den)\n    expected_lat = np.rad2deg(new_lat)\n    return check_lat == expected_lat","key":"ci1nPBUns7"},{"type":"output","id":"NQM8m6nv2Yarrb0lyFRi3","data":[],"key":"OulggUyIM7"}],"key":"BXhPO78jIs"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Check if a point lies on a great circle arc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fEChtMRmJW"}],"identifier":"check-if-a-point-lies-on-a-great-circle-arc","label":"Check if a point lies on a great circle arc","html_id":"check-if-a-point-lies-on-a-great-circle-arc","implicit":true,"key":"W7ZGLWJhkM"}],"key":"MsSHqGC9rQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"is_point_on_arc(\"boulder\", \"boston\", \"rockford\", tolerance=0)","key":"Sik5GlZfeX"},{"type":"output","id":"0RXRKDzQ05bVeeBlgTMGr","data":[{"output_type":"stream","name":"stdout","text":"Cross-Track Distance = 18201.48035911659 meters\n"},{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/plain":{"content":"np.False_","content_type":"text/plain"}}}],"key":"mQVhcMLe3o"}],"key":"VErSA80EZe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_cross_track(start_point=\"boulder\", end_point=\"boston\", new_point=\"rockford\")","key":"HmqhQeFt0j"},{"type":"output","id":"g3NakEnG2gvGlkJsIvB47","data":[{"output_type":"stream","name":"stdout","text":"Cross Track Distance: \n18201.48035911659 meters (18.20148035911659 km)\nAlong Track Distance: \n1378654.5186233742 meters (1378.654518623374 km)\n\nClosest Point To Point Along Great Circle Path:\n(42.434120910748035, -89.11630028269337)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1600x1000 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"0544379b35423ca21d1e9de193a66e3a","path":"/great-circle-cookbook/build/0544379b35423ca21d1e9de193a66e3a.png"}}}],"key":"ihjf6u67lW"}],"key":"r287CQjJ3F"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_cross_track(start_point=\"boulder\", end_point=\"boston\", new_point=\"rockford\", \n                 lon_west=-95, lon_east=-85,\n                 lat_south=40, lat_north=45)","key":"qasCWMAeHJ"},{"type":"output","id":"_vOPgYrMEQWhVI4Ez2R7Y","data":[{"output_type":"stream","name":"stdout","text":"Cross Track Distance: \n18201.48035911659 meters (18.20148035911659 km)\nAlong Track Distance: \n1378654.5186233742 meters (1378.654518623374 km)\n\nClosest Point To Point Along Great Circle Path:\n(42.434120910748035, -89.11630028269337)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:241: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/10m_physical/ne_10m_coastline.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:241: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/10m_cultural/ne_10m_admin_0_boundary_lines_land.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:241: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/10m_cultural/ne_10m_admin_1_states_provinces_lakes.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1600x1000 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"f9d3d5b3c5cc4ceaa83fc7ac632b572e","path":"/great-circle-cookbook/build/f9d3d5b3c5cc4ceaa83fc7ac632b572e.png"}}}],"key":"bxuRRE4Rnw"}],"key":"LgWEaeicAU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# increase tolerance to capture point\nprint(\"tolerance = 0\")\nprint(is_point_on_arc(\"boulder\", \"boston\", \"rockford\", tolerance=0))\nprint(\"\\ntolerance >= cross-track distance\")\nprint(is_point_on_arc(\"boulder\", \"boston\", \"rockford\", tolerance=18202))","key":"zuOOvOvAA4"},{"type":"output","id":"9niI-T_du54_pGvJs6H5V","data":[{"output_type":"stream","name":"stdout","text":"tolerance = 0\nCross-Track Distance = 18201.48035911659 meters\nFalse\n\ntolerance >= cross-track distance\nCross-Track Distance = 18201.48035911659 meters\nTrue\n"}],"key":"u090hcA9yS"}],"key":"DiGNSxHk94"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yFSh357vVE"}],"key":"Puu1fLth9G"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vgjE8O88Cq"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"Z7n5C0PAwb"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Calculating and plotting the cross-track and along-trackd distance of a great circle arc/path and a point.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UrigHkoEq2"}],"key":"hijQJDbb1V"},{"type":"heading","depth":3,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"What’s next?","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"nZZF7HMjPm"}],"identifier":"whats-next","label":"What’s next?","html_id":"whats-next","implicit":true,"key":"WTs8Blwo5x"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Determine when a great circle path crosses a given parallel and the maximum and minimum latitude coordinates of a great circle path.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"WS2m0lhyIa"}],"key":"o2ux0j4Kn7"}],"key":"KTeV9tNhRL"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ebsAUeU9vc"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"letWLEd8t4"}],"key":"VOnxuNfZup"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"link","url":"https://edwilliams.org/avform147.htm","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Aviation Formulary V1.47","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JsgB7jZq1R"}],"urlSource":"https://edwilliams.org/avform147.htm","key":"C4hDLEvrK3"}],"key":"ylSwOOtG0B"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"link","url":"https://www.movable-type.co.uk/scripts/latlong.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Moveable Type Script","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"SWZud2JcIa"}],"urlSource":"https://www.movable-type.co.uk/scripts/latlong.html","key":"zMnBRm0Q6w"}],"key":"vrmhpzrS1f"}],"key":"xJw7GfL18m"}],"key":"hg4LHjQqC5"}],"key":"sY4uDVGrIK"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Great Circle Arcs and Path","url":"/notebooks/tutorials/arc-path","group":"Tutorials"},"next":{"title":"Great Circles and Parallels","url":"/notebooks/tutorials/parallels-max-min","group":"Tutorials"}}},"domain":"http://localhost:3000"}