{"version":2,"kind":"Notebook","sha256":"1b2fb97005ade9a848d470e9adbd186be2f12f660e36a59fd057dcf527d76949","slug":"notebooks.foundations.coordinates","location":"/notebooks/foundations/2_coordinates.ipynb","dependencies":[],"frontmatter":{"title":"Coordinate Types","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/great-circle-cookbook","copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/great-circle-cookbook/blob/main/notebooks/foundations/2_coordinates.ipynb","thumbnail":"/great-circle-cookbook/build/cfedd7deca55d1d2727942529f3baa20.gif","exports":[{"format":"ipynb","filename":"2_coordinates.ipynb","url":"/great-circle-cookbook/build/2_coordinates-b8a172d711540933daf6e1aff553a836.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"editable":true,"slideshow":{"slide_type":""},"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/great-circle-cookbook/build/cfedd7deca55d1d2727942529f3baa20.gif","alt":"From Earth, a geostationary satellite looks like it is always in the same place, because it moves in the same direction and at the same rate the Earth spins. Image credit: NASA Solar System Exploration","key":"lF8RgORvDb","urlSource":"https://spaceplace.nasa.gov/satellite/en/geostationary-orbit.en.gif"}],"key":"FXL9Bw3zpp"}],"visibility":"show","key":"t43W7MUvOk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Coordinate Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"S5Q8zB7fOS"}],"identifier":"coordinate-types","label":"Coordinate Types","html_id":"coordinate-types","implicit":true,"key":"biMWjVOt8C"}],"key":"AfCnU5OGNt"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ETVW9hWWFy"}],"key":"LpSojElS1O"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IzEVWHOGIW"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"rb9U4YmBBs"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Great circles use different types of coordinates when working with unit spheres and ellipsoids. This notebook will cover the different types of coordinates and how to convert between them.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZmyZXsbJx9"}],"key":"vblNgsvea7"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Types of Coordinates","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"bN4MnlWnjb"}],"key":"vpbYYzEgq8"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Convert Coordinates to All Coordinate Types","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"nr8E2jmuYv"}],"key":"sLugdM2A2n"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Plot Coordinates on a World Map","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JAMMKZFXjf"}],"key":"PExQXCIwfP"}],"key":"es6etpqZuc"}],"key":"xFEKsnFKBc"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XgTmf2vPwi"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"b5RdZJDLr4"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZrO2RsvZlp"}],"key":"nvAXfjCaN1"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aL1onv0xLf"}],"key":"OPYBGPzSdU"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RqsGwm28Ez"}],"key":"x5eA2b8H45"}],"key":"izNpeqJSQM"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/numpy.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Numpy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Qdz0v7tdt0"}],"urlSource":"https://foundations.projectpythia.org/core/numpy.html","key":"RyMnmNwKyl"}],"key":"a3CbHsXb6u"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Y7h3rbV4kO"}],"key":"ZMvJdSLSs3"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Used to work with large arrays","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"oaMyrlafNY"}],"key":"gwv74FZqJX"}],"key":"YyigjVOmPr"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/numpy.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Pandas","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"rwekhwfTzZ"}],"urlSource":"https://foundations.projectpythia.org/core/numpy.html","key":"aWkEWrz653"}],"key":"SD3NU9Laqd"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"AsKzSDlXbF"}],"key":"EVZou5fyd7"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Used to read in and organize data (in particular dataframes)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Okg7Zwjtxe"}],"key":"ZHUfDnbR2y"}],"key":"bgCAMtG8ak"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"zPrr7HBhIn"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","key":"SJy6LlVanA"}],"key":"bUI5eHzwJu"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ecQErgC0U4"}],"key":"aVmV2UM8wW"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Will be used for adding maps to plotting","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"WkMFoKdffQ"}],"key":"TIc7xdXh9S"}],"key":"djZ0e89trZ"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/matplotlib.html","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Matplotlib","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"gNIxqBBP6g"}],"urlSource":"https://foundations.projectpythia.org/core/matplotlib.html","key":"LC1FFrEPm0"}],"key":"eJ98dlS64E"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"SlJ5nr6oZH"}],"key":"K5AGiZC2B1"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Will be used for plotting","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"d5mjHQ1itG"}],"key":"KTGdNC2cM8"}],"key":"vV8JXFWsLw"}],"key":"ZNyuzo4XFA"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"YV6mBtwC5w"}],"key":"FsBzXGeMFO"},{"type":"text","value":": 20 minutes","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"LWIWJSV6qt"}],"key":"Nn6kz6bFtS"}],"key":"KzZau3Jocw"}],"key":"YsArE7V29B"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Go5AFAGlJI"}],"key":"eYpQeJ7J7y"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AzYr81C9Ze"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"D873R6TY4z"}],"key":"S7F0tzXo1y"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np                                     # working with degrees and radians\n\nimport matplotlib.pyplot as plt                        # plotting a graph\nfrom cartopy import crs as ccrs, feature as cfeature   # plotting a world map","key":"RXWVfk9qV8"},{"type":"output","id":"amPxIjpRHkGCbH7a4aIvg","data":[],"key":"KI0RFd1aQG"}],"key":"HnyYIXiGfo"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Types of Coordinates","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nyvGavKZLb"}],"identifier":"types-of-coordinates","label":"Types of Coordinates","html_id":"types-of-coordinates","implicit":true,"key":"rVzcYTSJQZ"}],"key":"ivsr33946v"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Geodesic Coordinates","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"M0eJJ7fNT1"}],"identifier":"geodesic-coordinates","label":"Geodesic Coordinates","html_id":"geodesic-coordinates","implicit":true,"key":"I63C7kMzVN"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Geodesic coordinates are latitude and longtiude and are measured from -90° South to 90° North and -180° East to 180° West measured from Greenwich.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uZwwjimSSu"}],"key":"VjiGnnwRPW"},{"type":"paragraph","children":[{"type":"image","url":"/great-circle-cookbook/build/0fc0d708be8e621c88aeb36715c38ec4.png","alt":"Longitude lines are perpendicular to and latitude lines are parallel to the Equator from Wikipedia","width":400,"key":"XitHHznJ6A","urlSource":"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/FedStats_Lat_long.svg/1024px-FedStats_Lat_long.svg.png"}],"key":"AUlpfnfKte"}],"key":"PGNFe92O2H"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Cartesian Coordinates","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zCsse5KG7e"}],"identifier":"cartesian-coordinates","label":"Cartesian Coordinates","html_id":"cartesian-coordinates","implicit":true,"key":"U8SHP2rLxy"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Cartesian coordinates describe points in space based on perpendicular axis lines that meet at a single point of origin, where any point’s position is described based on the distance to the origin along xyz axis.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oOi9FAFOs0"}],"key":"XNkCWj5oW0"},{"type":"paragraph","children":[{"type":"image","url":"/great-circle-cookbook/build/28dd1024d372651fe1133b7cff4d16f8.png","alt":"A three dimensional Cartesian coordinate system, with origin O and axis lines X, Y and Z, oriented as shown by the arrows. The tick marks on the axes are one length unit apart. The black dot shows the point with coordinates x = 2, y = 3, and z = 4, or (2, 3, 4) from Wikipedia","width":400,"key":"vfqvqjtcHm","urlSource":"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/Coord_system_CA_0.svg/1024px-Coord_system_CA_0.svg.png"}],"key":"RtgN5ZT5XS"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Image Source: ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ClToA4bS1S"},{"type":"link","url":"https://en.wikipedia.org/wiki/Cartesian_coordinate_system","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Three Dimensional Cartesian Coordinate System","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"bkmqPUr6Op"}],"urlSource":"https://en.wikipedia.org/wiki/Cartesian_coordinate_system","data":{"page":"Cartesian_coordinate_system","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"jWe6889KGn"}],"key":"DtB41l0laD"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"strong","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Geodesic to Cartesian Coordinates","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"IR6qoEF01B"}],"key":"WT0cDnvC5h"}],"key":"QmLCJV6s3A"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Assuming the Earth’s radius is 6378137 meters then:","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"LduKUeLKmp"}],"key":"b3G0kiDdql"},{"type":"math","value":"x = radius * cos(latitude) * cos(longitude)","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>x</mi><mo>=</mo><mi>r</mi><mi>a</mi><mi>d</mi><mi>i</mi><mi>u</mi><mi>s</mi><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>g</mi><mi>i</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x = radius * cos(latitude) * cos(longitude)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"1","key":"XdGKZ6Hs2A"},{"type":"math","value":"y = radius * cos(latitude) * sin(longitude)","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>r</mi><mi>a</mi><mi>d</mi><mi>i</mi><mi>u</mi><mi>s</mi><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>g</mi><mi>i</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y = radius * cos(latitude) * sin(longitude)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"2","key":"Jt63Rybsli"},{"type":"math","value":"z = radius * sin(latitude)","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>z</mi><mo>=</mo><mi>r</mi><mi>a</mi><mi>d</mi><mi>i</mi><mi>u</mi><mi>s</mi><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">z = radius * sin(latitude)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"3","key":"Ei6nHhZTGZ"}],"key":"xAA27Sj3yy"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def cartesian_coordinates(latitude=None, longitude=None):\n    earth_radius = 6378137  # meters\n    latitude = np.deg2rad(latitude)\n    longitude = np.deg2rad(longitude)\n    cart_x = earth_radius * np.cos(latitude) * np.cos(longitude)\n    cart_y = earth_radius * np.cos(latitude) * np.sin(longitude)\n    cart_z = earth_radius * np.sin(latitude)\n    return cart_x, cart_y, cart_z","key":"RyH1oyOuzS"},{"type":"output","id":"tITiVjMUB9KFreXTbZlP7","data":[],"key":"JMCw7gh03w"}],"key":"KK32vPtD8z"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Spherical Coordinates","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZnG43XmoZa"}],"identifier":"spherical-coordinates","label":"Spherical Coordinates","html_id":"spherical-coordinates","implicit":true,"key":"hGRSdbZCvT"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Spherical coordinates describe points in space based on three values: radial distance (rho, r) along the radial line between point and the origin, polar angle (theta, θ) between the radial line and the polar axis, and azimuth angle (phi, φ) which is the angle of rotation of the radial line around the polar axis. With a fixed radius, the 3-point coordinates (r, θ, φ) provide a coordinate along a sphere.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"h3Rz4tzV0I"}],"key":"mMgtb1W3xr"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Radial distance: distance from center to surface of sphere","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"KEVtnDb2j6"}],"key":"r9izbJaDqT"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Polar angle: angle between radial line and polar axis","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KL8Y3vzGik"}],"key":"GlRMZXTZVf"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Azimuth angle: angle around polar axis","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"nQWDDWFp2D"}],"key":"HbjURT0rUk"}],"key":"Sc4seYuqYe"},{"type":"paragraph","children":[{"type":"image","url":"/great-circle-cookbook/build/c588c8060638fa8322717f1cc674dff7.png","alt":"Spherical Coordinate Description from Wikipedia","width":400,"key":"MJRlgRhTdt","urlSource":"https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Sphericalcoordinates.svg/1024px-Sphericalcoordinates.svg.png"}],"key":"GJtQ2zaehN"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Image Source: ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"sc2gnmaIS9"},{"type":"link","url":"https://simple.wikipedia.org/wiki/Spherical_coordinate_system","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Wikipedia - Spherical Coordinate System","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"g2yHeXYL0D"}],"urlSource":"https://simple.wikipedia.org/wiki/Spherical_coordinate_system","data":{"page":"Spherical_coordinate_system","wiki":"https://simple.wikipedia.org/","lang":"simple"},"internal":false,"protocol":"wiki","key":"ej55AW3iFu"}],"key":"d5kCsVZN0O"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Convert from cartesian (rectangular) coordinates spherical coordinates","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"RnHilRh8nU"}],"key":"yhV5lkKOOV"},{"type":"math","value":"ρ^2 = x^2 + y^2 + z^2","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>ρ</mi><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><msup><mi>z</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">ρ^2 = x^2 + y^2 + z^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0585em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ρ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0585em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>","enumerator":"4","key":"BBhPVQ2tb0"},{"type":"math","value":"tan(θ) = \\frac{y}{x}","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mi>y</mi><mi>x</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">tan(θ) = \\frac{y}{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">an</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7936em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>","enumerator":"5","key":"Z7C9EmlOL5"},{"type":"math","value":"φ = arccos(\\frac{x}{\\sqrt{x^2 + y^2 + z^2}})","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>φ</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mi>x</mi><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><msup><mi>z</mi><mn>2</mn></msup></mrow></msqrt></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">φ = arccos(\\frac{x}{\\sqrt{x^2 + y^2 + z^2}})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">φ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.2376em;vertical-align:-1.13em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">rccos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.1522em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9578em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9178em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2822em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.13em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"6","key":"Upsr4TvNBi"},{"type":"paragraph","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Where, rho (ρ), theta (θ), phi (φ):","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"TM9InbwOLn"}],"key":"HQpkQe9BZa"},{"type":"math","value":"ρ = \\sqrt{x^2 + y^2 + z^2}","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>ρ</mi><mo>=</mo><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><msup><mi>z</mi><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">ρ = \\sqrt{x^2 + y^2 + z^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.2333em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0067em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9667em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2333em;\"><span></span></span></span></span></span></span></span></span></span>","enumerator":"7","key":"tPHNr1oSbu"},{"type":"math","value":"θ = arctan(\\frac{y}{x})","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>θ</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mfrac><mi>y</mi><mi>x</mi></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">θ = arctan(\\frac{y}{x})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7936em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">rc</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">an</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"8","key":"XBZiYEAZB0"},{"type":"math","value":"φ = arccos(\\frac{x}{ρ})","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>φ</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mi>x</mi><mi>ρ</mi></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">φ = arccos(\\frac{x}{ρ})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">φ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.988em;vertical-align:-0.8804em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">rccos</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ρ</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"9","key":"cv9zxaVKGH"}],"key":"l6gNoSUstu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def cartesian_to_spherical_coordinates(cart_x=None, cart_y=None, cart_z=None):\n    rho = np.sqrt(cart_x**2 + cart_y**2 + cart_z**2)\n    theta = np.arctan(cart_y/cart_x)\n    phi = np.arccos(cart_z / rho)\n    return rho, theta, phi ","key":"duPyxIyLP4"},{"type":"output","id":"CigMb6XQBk6gESubcpa19","data":[],"key":"dcyIczJ5Hl"}],"key":"u2s0K7KS2b"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Polar Coordinates","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ji9MT7WMkU"}],"identifier":"polar-coordinates","label":"Polar Coordinates","html_id":"polar-coordinates","implicit":true,"key":"iF9799zNVO"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Polar coordinates are a combination of latitude, longitude, and altitude from the center of the sphere (based on the radius).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Y3v2V7fdLK"}],"key":"J1ybKTR0CM"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Assuming the Earth’s radius is 6378137 meters then:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xyncbDlkQU"}],"key":"EdDIAPXnMU"},{"type":"math","value":"x = cos(latitude) * cos(longitude) * radius","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>x</mi><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>g</mi><mi>i</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>r</mi><mi>a</mi><mi>d</mi><mi>i</mi><mi>u</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">x = cos(latitude) * cos(longitude) * radius</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">s</span></span></span></span></span>","enumerator":"10","key":"zCom9xq3j0"},{"type":"math","value":"y = cos(latitude) * sin(longitude) * radius","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>g</mi><mi>i</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>r</mi><mi>a</mi><mi>d</mi><mi>i</mi><mi>u</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">y = cos(latitude) * sin(longitude) * radius</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">s</span></span></span></span></span>","enumerator":"11","key":"MYsuv6nOZZ"},{"type":"math","value":"z = sin(latitude) * radius","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>z</mi><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>r</mi><mi>a</mi><mi>d</mi><mi>i</mi><mi>u</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">z = sin(latitude) * radius</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">s</span></span></span></span></span>","enumerator":"12","key":"oICUeZTdDV"}],"key":"WmvadspR41"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def polar_coordinates(latitude=None, longitude=None):\n    earth_radius = 6378137  # meters\n    latitude = np.deg2rad(latitude)\n    longitude = np.deg2rad(longitude)\n    polar_x = np.cos(latitude) * np.sin(longitude) * earth_radius\n    polar_y = np.cos(latitude) * np.cos(longitude) * earth_radius\n    polar_z = np.sin(latitude) * earth_radius\n    return polar_x, polar_y, polar_z","key":"MgenioQWzx"},{"type":"output","id":"VvMie-x1gxNLiMEwEyOBh","data":[],"key":"QSteTsgr1j"}],"key":"Q5f5CJ38Xb"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert City Coordinates to All Coordinate Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ywA434lB1X"}],"identifier":"convert-city-coordinates-to-all-coordinate-types","label":"Convert City Coordinates to All Coordinate Types","html_id":"convert-city-coordinates-to-all-coordinate-types","implicit":true,"key":"BU2M3lKh2y"}],"key":"BJpOFuzQJe"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Display Coordinates of Cities","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"og7RsOnszT"}],"identifier":"display-coordinates-of-cities","label":"Display Coordinates of Cities","html_id":"display-coordinates-of-cities","implicit":true,"key":"KFaIeETizi"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"First, we will read in the latitude and longitude coordinates from locations csv:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PXU89mTD5n"}],"key":"WxsOTlRojl"}],"key":"rcz2QPE3co"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import pandas as pd\n\nlocation_df = pd.read_csv(\"../location_coords.txt\")\nlocation_df = location_df.rename(columns=lambda x: x.strip()) # strip excess white space from column names and values\nlocation_df","key":"DV2HY3482M"},{"type":"output","id":"bjp01bVVOWAxggb4Nl0gK","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"              name  latitude  longitude\n0          arecibo   18.3441   -66.7527\n1          boulder   40.0150  -105.2705\n2           boston   42.3601   -71.0589\n3         redwoods   41.4017  -124.0417\n4          houston   29.5518   -95.0982\n5        greenwich   51.4934     0.0098\n6         svalbard   77.8750    20.9752\n7          mcmurdo  -77.5000   165.0000\n8            cairo   30.0444    31.2357\n9     johannesburg  -26.2056    28.0337\n10      stonehedge   51.1789    -1.8262\n11    machu picchu  -13.1632   -72.5453\n12  cape canaveral   28.3922   -80.6077\n13           uluru  -25.3444   131.0369\n14  tunguska event   60.5411   101.5435\n15           hanle   32.7908    79.0002\n16       reykjavík   64.1470   -21.9408\n17   al-qarawiyyin   34.0649    -4.9734\n18         zambezi  -18.3414    36.2813\n19        timbuktu   16.7666    -3.0026\n20        rockford   42.2711   -89.0940","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>latitude</th>\n      <th>longitude</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>arecibo</td>\n      <td>18.3441</td>\n      <td>-66.7527</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>boulder</td>\n      <td>40.0150</td>\n      <td>-105.2705</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>boston</td>\n      <td>42.3601</td>\n      <td>-71.0589</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>redwoods</td>\n      <td>41.4017</td>\n      <td>-124.0417</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>houston</td>\n      <td>29.5518</td>\n      <td>-95.0982</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>greenwich</td>\n      <td>51.4934</td>\n      <td>0.0098</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>svalbard</td>\n      <td>77.8750</td>\n      <td>20.9752</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>mcmurdo</td>\n      <td>-77.5000</td>\n      <td>165.0000</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>cairo</td>\n      <td>30.0444</td>\n      <td>31.2357</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>johannesburg</td>\n      <td>-26.2056</td>\n      <td>28.0337</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>stonehedge</td>\n      <td>51.1789</td>\n      <td>-1.8262</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>machu picchu</td>\n      <td>-13.1632</td>\n      <td>-72.5453</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>cape canaveral</td>\n      <td>28.3922</td>\n      <td>-80.6077</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>uluru</td>\n      <td>-25.3444</td>\n      <td>131.0369</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>tunguska event</td>\n      <td>60.5411</td>\n      <td>101.5435</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>hanle</td>\n      <td>32.7908</td>\n      <td>79.0002</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>reykjavík</td>\n      <td>64.1470</td>\n      <td>-21.9408</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>al-qarawiyyin</td>\n      <td>34.0649</td>\n      <td>-4.9734</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>zambezi</td>\n      <td>-18.3414</td>\n      <td>36.2813</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>timbuktu</td>\n      <td>16.7666</td>\n      <td>-3.0026</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>rockford</td>\n      <td>42.2711</td>\n      <td>-89.0940</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"aqyj9ovPit"}],"key":"MhOlx1S9TP"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Add Columns for Additional Coordinate Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Tui25svwRN"}],"identifier":"add-columns-for-additional-coordinate-types","label":"Add Columns for Additional Coordinate Types","html_id":"add-columns-for-additional-coordinate-types","implicit":true,"key":"cNBuO0aIMp"}],"key":"xEihkLV16N"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"location_df[\"cart_x\"], location_df[\"cart_y\"], location_df[\"cart_z\"] = cartesian_coordinates(location_df[\"latitude\"],\n                                                                                            location_df[\"longitude\"])\nlocation_df[\"rho\"], location_df[\"theta\"], location_df[\"phi\"] = cartesian_to_spherical_coordinates(location_df[\"cart_x\"],\n                                                                                                  location_df[\"cart_y\"],\n                                                                                                  location_df[\"cart_z\"])\nlocation_df[\"polar_x\"], location_df[\"polar_y\"], location_df[\"polar_z\"] = polar_coordinates(location_df[\"latitude\"],\n                                                                                           location_df[\"longitude\"])\n\nlocation_df","key":"IVBsD5jwt8"},{"type":"output","id":"AUkZFl6wLzexiSk0EGoGc","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"              name  latitude  longitude        cart_x        cart_y  \\\n0          arecibo   18.3441   -66.7527  2.389526e+06 -5.562495e+06   \n1          boulder   40.0150  -105.2705 -1.286558e+06 -4.712394e+06   \n2           boston   42.3601   -71.0589  1.529809e+06 -4.457769e+06   \n3         redwoods   41.4017  -124.0417 -2.678169e+06 -3.964322e+06   \n4          houston   29.5518   -95.0982 -4.930480e+05 -5.526456e+06   \n5        greenwich   51.4934     0.0098  3.971059e+06  6.792189e+02   \n6         svalbard   77.8750    20.9752  1.250923e+06  4.795630e+05   \n7          mcmurdo  -77.5000   165.0000 -1.333443e+06  3.572949e+05   \n8            cairo   30.0444    31.2357  4.720816e+06  2.863050e+06   \n9     johannesburg  -26.2056    28.0337  5.051141e+06  2.689551e+06   \n10      stonehedge   51.1789    -1.8262  3.996364e+06 -1.274201e+05   \n11    machu picchu  -13.1632   -72.5453  1.862866e+06 -5.924585e+06   \n12  cape canaveral   28.3922   -80.6077  9.156669e+05 -5.535712e+06   \n13           uluru  -25.3444   131.0369 -3.784488e+06  4.347897e+06   \n14  tunguska event   60.5411   101.5435 -6.277033e+05  3.073315e+06   \n15           hanle   32.7908    79.0002  1.023062e+06  5.263296e+06   \n16       reykjavík   64.1470   -21.9408  2.579828e+06 -1.039219e+06   \n17   al-qarawiyyin   34.0649    -4.9734  5.263779e+06 -4.580586e+05   \n18         zambezi  -18.3414    36.2813  4.880354e+06  3.582524e+06   \n19        timbuktu   16.7666    -3.0026  6.098605e+06 -3.198918e+05   \n20        rockford   42.2711   -89.0940  7.462695e+04 -4.719043e+06   \n\n          cart_z        rho     theta       phi       polar_x       polar_y  \\\n0   2.007347e+06  6378137.0 -1.165054  1.250631 -5.562495e+06  2.389526e+06   \n1   4.101066e+06  6378137.0  1.304276  0.872403 -4.712394e+06 -1.286558e+06   \n2   4.297512e+06  6378137.0 -1.240212  0.831473 -4.457769e+06  1.529809e+06   \n3   4.218080e+06  6378137.0  0.976657  0.848200 -3.964322e+06 -2.678169e+06   \n4   3.145762e+06  6378137.0  1.481816  1.055020 -5.526456e+06 -4.930480e+05   \n5   4.991125e+06  6378137.0  0.000171  0.672067  6.792189e+02  3.971059e+06   \n6   6.235851e+06  6378137.0  0.366086  0.211621  4.795630e+05  1.250923e+06   \n7  -6.226950e+06  6378137.0 -0.261799  2.923426  3.572949e+05 -1.333443e+06   \n8   3.193348e+06  6378137.0  0.545166  1.046423  2.863050e+06  4.720816e+06   \n9  -2.816544e+06  6378137.0  0.489280  2.028170  2.689551e+06  5.051141e+06   \n10  4.969252e+06  6378137.0 -0.031873  0.677556 -1.274201e+05  3.996364e+06   \n11 -1.452465e+06  6378137.0 -1.266154  1.800538 -5.924585e+06  1.862866e+06   \n12  3.032833e+06  6378137.0 -1.406870  1.075259 -5.535712e+06  9.156669e+05   \n13 -2.730215e+06  6378137.0 -0.854567  2.013140  4.347897e+06 -3.784488e+06   \n14  5.553499e+06  6378137.0 -1.369324  0.514155  3.073315e+06 -6.277033e+05   \n15  3.454228e+06  6378137.0  1.378814  0.998489  5.263296e+06  1.023062e+06   \n16  5.739786e+06  6378137.0 -0.382939  0.451220 -1.039219e+06  2.579828e+06   \n17  3.572596e+06  6378137.0 -0.086802  0.976252 -4.580586e+05  5.263779e+06   \n18 -2.007062e+06  6378137.0  0.633228  1.890914  3.582524e+06  4.880354e+06   \n19  1.839925e+06  6378137.0 -0.052405  1.278164 -3.198918e+05  6.098605e+06   \n20  4.290186e+06  6378137.0 -1.554984  0.833026 -4.719043e+06  7.462695e+04   \n\n         polar_z  \n0   2.007347e+06  \n1   4.101066e+06  \n2   4.297512e+06  \n3   4.218080e+06  \n4   3.145762e+06  \n5   4.991125e+06  \n6   6.235851e+06  \n7  -6.226950e+06  \n8   3.193348e+06  \n9  -2.816544e+06  \n10  4.969252e+06  \n11 -1.452465e+06  \n12  3.032833e+06  \n13 -2.730215e+06  \n14  5.553499e+06  \n15  3.454228e+06  \n16  5.739786e+06  \n17  3.572596e+06  \n18 -2.007062e+06  \n19  1.839925e+06  \n20  4.290186e+06  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>cart_x</th>\n      <th>cart_y</th>\n      <th>cart_z</th>\n      <th>rho</th>\n      <th>theta</th>\n      <th>phi</th>\n      <th>polar_x</th>\n      <th>polar_y</th>\n      <th>polar_z</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>arecibo</td>\n      <td>18.3441</td>\n      <td>-66.7527</td>\n      <td>2.389526e+06</td>\n      <td>-5.562495e+06</td>\n      <td>2.007347e+06</td>\n      <td>6378137.0</td>\n      <td>-1.165054</td>\n      <td>1.250631</td>\n      <td>-5.562495e+06</td>\n      <td>2.389526e+06</td>\n      <td>2.007347e+06</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>boulder</td>\n      <td>40.0150</td>\n      <td>-105.2705</td>\n      <td>-1.286558e+06</td>\n      <td>-4.712394e+06</td>\n      <td>4.101066e+06</td>\n      <td>6378137.0</td>\n      <td>1.304276</td>\n      <td>0.872403</td>\n      <td>-4.712394e+06</td>\n      <td>-1.286558e+06</td>\n      <td>4.101066e+06</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>boston</td>\n      <td>42.3601</td>\n      <td>-71.0589</td>\n      <td>1.529809e+06</td>\n      <td>-4.457769e+06</td>\n      <td>4.297512e+06</td>\n      <td>6378137.0</td>\n      <td>-1.240212</td>\n      <td>0.831473</td>\n      <td>-4.457769e+06</td>\n      <td>1.529809e+06</td>\n      <td>4.297512e+06</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>redwoods</td>\n      <td>41.4017</td>\n      <td>-124.0417</td>\n      <td>-2.678169e+06</td>\n      <td>-3.964322e+06</td>\n      <td>4.218080e+06</td>\n      <td>6378137.0</td>\n      <td>0.976657</td>\n      <td>0.848200</td>\n      <td>-3.964322e+06</td>\n      <td>-2.678169e+06</td>\n      <td>4.218080e+06</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>houston</td>\n      <td>29.5518</td>\n      <td>-95.0982</td>\n      <td>-4.930480e+05</td>\n      <td>-5.526456e+06</td>\n      <td>3.145762e+06</td>\n      <td>6378137.0</td>\n      <td>1.481816</td>\n      <td>1.055020</td>\n      <td>-5.526456e+06</td>\n      <td>-4.930480e+05</td>\n      <td>3.145762e+06</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>greenwich</td>\n      <td>51.4934</td>\n      <td>0.0098</td>\n      <td>3.971059e+06</td>\n      <td>6.792189e+02</td>\n      <td>4.991125e+06</td>\n      <td>6378137.0</td>\n      <td>0.000171</td>\n      <td>0.672067</td>\n      <td>6.792189e+02</td>\n      <td>3.971059e+06</td>\n      <td>4.991125e+06</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>svalbard</td>\n      <td>77.8750</td>\n      <td>20.9752</td>\n      <td>1.250923e+06</td>\n      <td>4.795630e+05</td>\n      <td>6.235851e+06</td>\n      <td>6378137.0</td>\n      <td>0.366086</td>\n      <td>0.211621</td>\n      <td>4.795630e+05</td>\n      <td>1.250923e+06</td>\n      <td>6.235851e+06</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>mcmurdo</td>\n      <td>-77.5000</td>\n      <td>165.0000</td>\n      <td>-1.333443e+06</td>\n      <td>3.572949e+05</td>\n      <td>-6.226950e+06</td>\n      <td>6378137.0</td>\n      <td>-0.261799</td>\n      <td>2.923426</td>\n      <td>3.572949e+05</td>\n      <td>-1.333443e+06</td>\n      <td>-6.226950e+06</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>cairo</td>\n      <td>30.0444</td>\n      <td>31.2357</td>\n      <td>4.720816e+06</td>\n      <td>2.863050e+06</td>\n      <td>3.193348e+06</td>\n      <td>6378137.0</td>\n      <td>0.545166</td>\n      <td>1.046423</td>\n      <td>2.863050e+06</td>\n      <td>4.720816e+06</td>\n      <td>3.193348e+06</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>johannesburg</td>\n      <td>-26.2056</td>\n      <td>28.0337</td>\n      <td>5.051141e+06</td>\n      <td>2.689551e+06</td>\n      <td>-2.816544e+06</td>\n      <td>6378137.0</td>\n      <td>0.489280</td>\n      <td>2.028170</td>\n      <td>2.689551e+06</td>\n      <td>5.051141e+06</td>\n      <td>-2.816544e+06</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>stonehedge</td>\n      <td>51.1789</td>\n      <td>-1.8262</td>\n      <td>3.996364e+06</td>\n      <td>-1.274201e+05</td>\n      <td>4.969252e+06</td>\n      <td>6378137.0</td>\n      <td>-0.031873</td>\n      <td>0.677556</td>\n      <td>-1.274201e+05</td>\n      <td>3.996364e+06</td>\n      <td>4.969252e+06</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>machu picchu</td>\n      <td>-13.1632</td>\n      <td>-72.5453</td>\n      <td>1.862866e+06</td>\n      <td>-5.924585e+06</td>\n      <td>-1.452465e+06</td>\n      <td>6378137.0</td>\n      <td>-1.266154</td>\n      <td>1.800538</td>\n      <td>-5.924585e+06</td>\n      <td>1.862866e+06</td>\n      <td>-1.452465e+06</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>cape canaveral</td>\n      <td>28.3922</td>\n      <td>-80.6077</td>\n      <td>9.156669e+05</td>\n      <td>-5.535712e+06</td>\n      <td>3.032833e+06</td>\n      <td>6378137.0</td>\n      <td>-1.406870</td>\n      <td>1.075259</td>\n      <td>-5.535712e+06</td>\n      <td>9.156669e+05</td>\n      <td>3.032833e+06</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>uluru</td>\n      <td>-25.3444</td>\n      <td>131.0369</td>\n      <td>-3.784488e+06</td>\n      <td>4.347897e+06</td>\n      <td>-2.730215e+06</td>\n      <td>6378137.0</td>\n      <td>-0.854567</td>\n      <td>2.013140</td>\n      <td>4.347897e+06</td>\n      <td>-3.784488e+06</td>\n      <td>-2.730215e+06</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>tunguska event</td>\n      <td>60.5411</td>\n      <td>101.5435</td>\n      <td>-6.277033e+05</td>\n      <td>3.073315e+06</td>\n      <td>5.553499e+06</td>\n      <td>6378137.0</td>\n      <td>-1.369324</td>\n      <td>0.514155</td>\n      <td>3.073315e+06</td>\n      <td>-6.277033e+05</td>\n      <td>5.553499e+06</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>hanle</td>\n      <td>32.7908</td>\n      <td>79.0002</td>\n      <td>1.023062e+06</td>\n      <td>5.263296e+06</td>\n      <td>3.454228e+06</td>\n      <td>6378137.0</td>\n      <td>1.378814</td>\n      <td>0.998489</td>\n      <td>5.263296e+06</td>\n      <td>1.023062e+06</td>\n      <td>3.454228e+06</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>reykjavík</td>\n      <td>64.1470</td>\n      <td>-21.9408</td>\n      <td>2.579828e+06</td>\n      <td>-1.039219e+06</td>\n      <td>5.739786e+06</td>\n      <td>6378137.0</td>\n      <td>-0.382939</td>\n      <td>0.451220</td>\n      <td>-1.039219e+06</td>\n      <td>2.579828e+06</td>\n      <td>5.739786e+06</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>al-qarawiyyin</td>\n      <td>34.0649</td>\n      <td>-4.9734</td>\n      <td>5.263779e+06</td>\n      <td>-4.580586e+05</td>\n      <td>3.572596e+06</td>\n      <td>6378137.0</td>\n      <td>-0.086802</td>\n      <td>0.976252</td>\n      <td>-4.580586e+05</td>\n      <td>5.263779e+06</td>\n      <td>3.572596e+06</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>zambezi</td>\n      <td>-18.3414</td>\n      <td>36.2813</td>\n      <td>4.880354e+06</td>\n      <td>3.582524e+06</td>\n      <td>-2.007062e+06</td>\n      <td>6378137.0</td>\n      <td>0.633228</td>\n      <td>1.890914</td>\n      <td>3.582524e+06</td>\n      <td>4.880354e+06</td>\n      <td>-2.007062e+06</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>timbuktu</td>\n      <td>16.7666</td>\n      <td>-3.0026</td>\n      <td>6.098605e+06</td>\n      <td>-3.198918e+05</td>\n      <td>1.839925e+06</td>\n      <td>6378137.0</td>\n      <td>-0.052405</td>\n      <td>1.278164</td>\n      <td>-3.198918e+05</td>\n      <td>6.098605e+06</td>\n      <td>1.839925e+06</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>rockford</td>\n      <td>42.2711</td>\n      <td>-89.0940</td>\n      <td>7.462695e+04</td>\n      <td>-4.719043e+06</td>\n      <td>4.290186e+06</td>\n      <td>6378137.0</td>\n      <td>-1.554984</td>\n      <td>0.833026</td>\n      <td>-4.719043e+06</td>\n      <td>7.462695e+04</td>\n      <td>4.290186e+06</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"b622E9SD1c"}],"key":"kkpHQPSEFK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Save Output to a New Text File\nlocation_df.to_csv(\"../location_full_coords.txt\", index=False)","key":"XXf34KWsmU"},{"type":"output","id":"K3jd2SNxmwnsy-Cx1AJl-","data":[],"key":"ueE4quw1XX"}],"key":"HR6ACO08qW"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Coordinates","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mdyd0XKIWX"}],"identifier":"plot-coordinates","label":"Plot Coordinates","html_id":"plot-coordinates","implicit":true,"key":"oXl4zVsq3B"}],"key":"XKZyVGyfad"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"World Map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ASUiArw0se"}],"identifier":"world-map","label":"World Map","html_id":"world-map","implicit":true,"key":"ZF5aoDOTZR"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Full world map from -180-180 and -90-90:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VkRl3bwWKo"}],"key":"zFxzi41jhY"},{"type":"code","lang":"","value":"longitude east = 180\n\nlongitude west = -180\n\nlatitude north = 90\n\nlatitude south = -90","position":{"start":{"line":4,"column":1},"end":{"line":12,"column":1}},"key":"E8WEhm1RMc"}],"key":"ydI3R9zaaF"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Set up world map plot\nfig = plt.subplots(figsize=(15, 10))\nprojection_map = ccrs.PlateCarree()\nax = plt.axes(projection=projection_map)\nlon_west, lon_east, lat_south, lat_north = -180, 180, -90, 90\nax.set_extent([lon_west, lon_east, lat_south, lat_north], crs=projection_map)\nax.coastlines(color=\"black\")\nax.add_feature(cfeature.BORDERS, edgecolor='grey')\nax.add_feature(cfeature.STATES, edgecolor=\"grey\")\n    \n# Plot Latitude/Longitude Location\nlongitudes = location_df[\"longitude\"] # longitude\nlatitudes = location_df[\"latitude\"]   # latitude\nplt.scatter(longitudes, latitudes, c=\"red\")\n\nplt.title(\"World Map with Locations\")\nplt.show()","key":"hnHHZtX6sq"},{"type":"output","id":"ZVEbK9IoFZ1i-K7TKxXWN","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:241: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/110m_physical/ne_110m_coastline.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:241: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/110m_cultural/ne_110m_admin_0_boundary_lines_land.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31merror\u001b[39m                                     Traceback (most recent call last)\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/IPython/core/formatters.py:402\u001b[39m, in \u001b[36mBaseFormatter.__call__\u001b[39m\u001b[34m(self, obj)\u001b[39m\n\u001b[32m    400\u001b[39m     \u001b[38;5;28;01mpass\u001b[39;00m\n\u001b[32m    401\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m402\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mprinter\u001b[49m\u001b[43m(\u001b[49m\u001b[43mobj\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    403\u001b[39m \u001b[38;5;66;03m# Finally look for special method names\u001b[39;00m\n\u001b[32m    404\u001b[39m method = get_real_method(obj, \u001b[38;5;28mself\u001b[39m.print_method)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/IPython/core/pylabtools.py:170\u001b[39m, in \u001b[36mprint_figure\u001b[39m\u001b[34m(fig, fmt, bbox_inches, base64, **kwargs)\u001b[39m\n\u001b[32m    167\u001b[39m     \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mmatplotlib\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01mbackend_bases\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m FigureCanvasBase\n\u001b[32m    168\u001b[39m     FigureCanvasBase(fig)\n\u001b[32m--> \u001b[39m\u001b[32m170\u001b[39m \u001b[43mfig\u001b[49m\u001b[43m.\u001b[49m\u001b[43mcanvas\u001b[49m\u001b[43m.\u001b[49m\u001b[43mprint_figure\u001b[49m\u001b[43m(\u001b[49m\u001b[43mbytes_io\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkw\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    171\u001b[39m data = bytes_io.getvalue()\n\u001b[32m    172\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m fmt == \u001b[33m'\u001b[39m\u001b[33msvg\u001b[39m\u001b[33m'\u001b[39m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/backend_bases.py:2155\u001b[39m, in \u001b[36mFigureCanvasBase.print_figure\u001b[39m\u001b[34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)\u001b[39m\n\u001b[32m   2152\u001b[39m     \u001b[38;5;66;03m# we do this instead of `self.figure.draw_without_rendering`\u001b[39;00m\n\u001b[32m   2153\u001b[39m     \u001b[38;5;66;03m# so that we can inject the orientation\u001b[39;00m\n\u001b[32m   2154\u001b[39m     \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28mgetattr\u001b[39m(renderer, \u001b[33m\"\u001b[39m\u001b[33m_draw_disabled\u001b[39m\u001b[33m\"\u001b[39m, nullcontext)():\n\u001b[32m-> \u001b[39m\u001b[32m2155\u001b[39m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mfigure\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   2156\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m bbox_inches:\n\u001b[32m   2157\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m bbox_inches == \u001b[33m\"\u001b[39m\u001b[33mtight\u001b[39m\u001b[33m\"\u001b[39m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/artist.py:94\u001b[39m, in \u001b[36m_finalize_rasterization.<locals>.draw_wrapper\u001b[39m\u001b[34m(artist, renderer, *args, **kwargs)\u001b[39m\n\u001b[32m     92\u001b[39m \u001b[38;5;129m@wraps\u001b[39m(draw)\n\u001b[32m     93\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mdraw_wrapper\u001b[39m(artist, renderer, *args, **kwargs):\n\u001b[32m---> \u001b[39m\u001b[32m94\u001b[39m     result = \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     95\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m renderer._rasterizing:\n\u001b[32m     96\u001b[39m         renderer.stop_rasterizing()\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/artist.py:71\u001b[39m, in \u001b[36mallow_rasterization.<locals>.draw_wrapper\u001b[39m\u001b[34m(artist, renderer)\u001b[39m\n\u001b[32m     68\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m     69\u001b[39m         renderer.start_filter()\n\u001b[32m---> \u001b[39m\u001b[32m71\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     72\u001b[39m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[32m     73\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/figure.py:3257\u001b[39m, in \u001b[36mFigure.draw\u001b[39m\u001b[34m(self, renderer)\u001b[39m\n\u001b[32m   3254\u001b[39m             \u001b[38;5;66;03m# ValueError can occur when resizing a window.\u001b[39;00m\n\u001b[32m   3256\u001b[39m     \u001b[38;5;28mself\u001b[39m.patch.draw(renderer)\n\u001b[32m-> \u001b[39m\u001b[32m3257\u001b[39m     \u001b[43mmimage\u001b[49m\u001b[43m.\u001b[49m\u001b[43m_draw_list_compositing_images\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m   3258\u001b[39m \u001b[43m        \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43martists\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43msuppressComposite\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   3260\u001b[39m     renderer.close_group(\u001b[33m'\u001b[39m\u001b[33mfigure\u001b[39m\u001b[33m'\u001b[39m)\n\u001b[32m   3261\u001b[39m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/image.py:134\u001b[39m, in \u001b[36m_draw_list_compositing_images\u001b[39m\u001b[34m(renderer, parent, artists, suppress_composite)\u001b[39m\n\u001b[32m    132\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m not_composite \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m has_images:\n\u001b[32m    133\u001b[39m     \u001b[38;5;28;01mfor\u001b[39;00m a \u001b[38;5;129;01min\u001b[39;00m artists:\n\u001b[32m--> \u001b[39m\u001b[32m134\u001b[39m         \u001b[43ma\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    135\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    136\u001b[39m     \u001b[38;5;66;03m# Composite any adjacent images together\u001b[39;00m\n\u001b[32m    137\u001b[39m     image_group = []\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/artist.py:71\u001b[39m, in \u001b[36mallow_rasterization.<locals>.draw_wrapper\u001b[39m\u001b[34m(artist, renderer)\u001b[39m\n\u001b[32m     68\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m     69\u001b[39m         renderer.start_filter()\n\u001b[32m---> \u001b[39m\u001b[32m71\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     72\u001b[39m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[32m     73\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/mpl/geoaxes.py:524\u001b[39m, in \u001b[36mGeoAxes.draw\u001b[39m\u001b[34m(self, renderer, **kwargs)\u001b[39m\n\u001b[32m    519\u001b[39m         \u001b[38;5;28mself\u001b[39m.imshow(img, extent=extent, origin=origin,\n\u001b[32m    520\u001b[39m                     transform=factory.crs, *factory_args[\u001b[32m1\u001b[39m:],\n\u001b[32m    521\u001b[39m                     **factory_kwargs)\n\u001b[32m    522\u001b[39m \u001b[38;5;28mself\u001b[39m._done_img_factory = \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m524\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m=\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/artist.py:71\u001b[39m, in \u001b[36mallow_rasterization.<locals>.draw_wrapper\u001b[39m\u001b[34m(artist, renderer)\u001b[39m\n\u001b[32m     68\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m     69\u001b[39m         renderer.start_filter()\n\u001b[32m---> \u001b[39m\u001b[32m71\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     72\u001b[39m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[32m     73\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/axes/_base.py:3216\u001b[39m, in \u001b[36m_AxesBase.draw\u001b[39m\u001b[34m(self, renderer)\u001b[39m\n\u001b[32m   3213\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m artists_rasterized:\n\u001b[32m   3214\u001b[39m     _draw_rasterized(\u001b[38;5;28mself\u001b[39m.get_figure(root=\u001b[38;5;28;01mTrue\u001b[39;00m), artists_rasterized, renderer)\n\u001b[32m-> \u001b[39m\u001b[32m3216\u001b[39m \u001b[43mmimage\u001b[49m\u001b[43m.\u001b[49m\u001b[43m_draw_list_compositing_images\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m   3217\u001b[39m \u001b[43m    \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43martists\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mget_figure\u001b[49m\u001b[43m(\u001b[49m\u001b[43mroot\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m.\u001b[49m\u001b[43msuppressComposite\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   3219\u001b[39m renderer.close_group(\u001b[33m'\u001b[39m\u001b[33maxes\u001b[39m\u001b[33m'\u001b[39m)\n\u001b[32m   3220\u001b[39m \u001b[38;5;28mself\u001b[39m.stale = \u001b[38;5;28;01mFalse\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/image.py:134\u001b[39m, in \u001b[36m_draw_list_compositing_images\u001b[39m\u001b[34m(renderer, parent, artists, suppress_composite)\u001b[39m\n\u001b[32m    132\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m not_composite \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m has_images:\n\u001b[32m    133\u001b[39m     \u001b[38;5;28;01mfor\u001b[39;00m a \u001b[38;5;129;01min\u001b[39;00m artists:\n\u001b[32m--> \u001b[39m\u001b[32m134\u001b[39m         \u001b[43ma\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    135\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    136\u001b[39m     \u001b[38;5;66;03m# Composite any adjacent images together\u001b[39;00m\n\u001b[32m    137\u001b[39m     image_group = []\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/matplotlib/artist.py:71\u001b[39m, in \u001b[36mallow_rasterization.<locals>.draw_wrapper\u001b[39m\u001b[34m(artist, renderer)\u001b[39m\n\u001b[32m     68\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m     69\u001b[39m         renderer.start_filter()\n\u001b[32m---> \u001b[39m\u001b[32m71\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mdraw\u001b[49m\u001b[43m(\u001b[49m\u001b[43martist\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrenderer\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     72\u001b[39m \u001b[38;5;28;01mfinally\u001b[39;00m:\n\u001b[32m     73\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m artist.get_agg_filter() \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/mpl/feature_artist.py:185\u001b[39m, in \u001b[36mFeatureArtist.draw\u001b[39m\u001b[34m(self, renderer)\u001b[39m\n\u001b[32m    180\u001b[39m     geoms = \u001b[38;5;28mself\u001b[39m._feature.geometries()\n\u001b[32m    181\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    182\u001b[39m     \u001b[38;5;66;03m# For efficiency on local maps with high resolution features (e.g\u001b[39;00m\n\u001b[32m    183\u001b[39m     \u001b[38;5;66;03m# from Natural Earth), only create paths for geometries that are\u001b[39;00m\n\u001b[32m    184\u001b[39m     \u001b[38;5;66;03m# in view.\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m185\u001b[39m     geoms = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_feature\u001b[49m\u001b[43m.\u001b[49m\u001b[43mintersecting_geometries\u001b[49m\u001b[43m(\u001b[49m\u001b[43mextent\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    187\u001b[39m stylised_paths = {}\n\u001b[32m    188\u001b[39m \u001b[38;5;66;03m# Make an empty placeholder style dictionary for when styler is not\u001b[39;00m\n\u001b[32m    189\u001b[39m \u001b[38;5;66;03m# used.  Freeze it so that we can use it as a dict key.  We will need\u001b[39;00m\n\u001b[32m    190\u001b[39m \u001b[38;5;66;03m# to unfreeze all style dicts with dict(frozen) before passing to mpl.\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/feature/__init__.py:309\u001b[39m, in \u001b[36mNaturalEarthFeature.intersecting_geometries\u001b[39m\u001b[34m(self, extent)\u001b[39m\n\u001b[32m    302\u001b[39m \u001b[38;5;250m\u001b[39m\u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    303\u001b[39m \u001b[33;03mReturns an iterator of shapely geometries that intersect with\u001b[39;00m\n\u001b[32m    304\u001b[39m \u001b[33;03mthe given extent.\u001b[39;00m\n\u001b[32m    305\u001b[39m \u001b[33;03mThe extent is assumed to be in the CRS of the feature.\u001b[39;00m\n\u001b[32m    306\u001b[39m \u001b[33;03mIf extent is None, the method returns all geometries for this dataset.\u001b[39;00m\n\u001b[32m    307\u001b[39m \u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    308\u001b[39m \u001b[38;5;28mself\u001b[39m.scaler.scale_from_extent(extent)\n\u001b[32m--> \u001b[39m\u001b[32m309\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m.\u001b[49m\u001b[43mintersecting_geometries\u001b[49m\u001b[43m(\u001b[49m\u001b[43mextent\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/feature/__init__.py:112\u001b[39m, in \u001b[36mFeature.intersecting_geometries\u001b[39m\u001b[34m(self, extent)\u001b[39m\n\u001b[32m    109\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m extent \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m np.isnan(extent[\u001b[32m0\u001b[39m]):\n\u001b[32m    110\u001b[39m     extent_geom = sgeom.box(extent[\u001b[32m0\u001b[39m], extent[\u001b[32m2\u001b[39m],\n\u001b[32m    111\u001b[39m                             extent[\u001b[32m1\u001b[39m], extent[\u001b[32m3\u001b[39m])\n\u001b[32m--> \u001b[39m\u001b[32m112\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m (geom \u001b[38;5;28;01mfor\u001b[39;00m geom \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mgeometries\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m \u001b[38;5;28;01mif\u001b[39;00m\n\u001b[32m    113\u001b[39m             geom \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;129;01mand\u001b[39;00m extent_geom.intersects(geom))\n\u001b[32m    114\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    115\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m.geometries()\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/feature/__init__.py:294\u001b[39m, in \u001b[36mNaturalEarthFeature.geometries\u001b[39m\u001b[34m(self)\u001b[39m\n\u001b[32m    290\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m key \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m _NATURAL_EARTH_GEOM_CACHE:\n\u001b[32m    291\u001b[39m     path = shapereader.natural_earth(resolution=\u001b[38;5;28mself\u001b[39m.scale,\n\u001b[32m    292\u001b[39m                                      category=\u001b[38;5;28mself\u001b[39m.category,\n\u001b[32m    293\u001b[39m                                      name=\u001b[38;5;28mself\u001b[39m.name)\n\u001b[32m--> \u001b[39m\u001b[32m294\u001b[39m     geometries = \u001b[38;5;28;43mtuple\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mshapereader\u001b[49m\u001b[43m.\u001b[49m\u001b[43mReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43mpath\u001b[49m\u001b[43m)\u001b[49m\u001b[43m.\u001b[49m\u001b[43mgeometries\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    295\u001b[39m     _NATURAL_EARTH_GEOM_CACHE[key] = geometries\n\u001b[32m    296\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/shapereader.py:164\u001b[39m, in \u001b[36mBasicReader.geometries\u001b[39m\u001b[34m(self)\u001b[39m\n\u001b[32m    152\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mgeometries\u001b[39m(\u001b[38;5;28mself\u001b[39m):\n\u001b[32m    153\u001b[39m \u001b[38;5;250m    \u001b[39m\u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    154\u001b[39m \u001b[33;03m    Return an iterator of shapely geometries from the shapefile.\u001b[39;00m\n\u001b[32m    155\u001b[39m \n\u001b[32m   (...)\u001b[39m\u001b[32m    162\u001b[39m \n\u001b[32m    163\u001b[39m \u001b[33;03m    \"\"\"\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m164\u001b[39m \u001b[43m    \u001b[49m\u001b[38;5;28;43;01mfor\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mshape\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_reader\u001b[49m\u001b[43m.\u001b[49m\u001b[43miterShapes\u001b[49m\u001b[43m(\u001b[49m\u001b[43mbbox\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_bbox\u001b[49m\u001b[43m)\u001b[49m\u001b[43m:\u001b[49m\n\u001b[32m    165\u001b[39m \u001b[43m        \u001b[49m\u001b[38;5;66;43;03m# Skip the shape that can not be represented as geometry.\u001b[39;49;00m\n\u001b[32m    166\u001b[39m \u001b[43m        \u001b[49m\u001b[38;5;28;43;01mif\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mshape\u001b[49m\u001b[43m.\u001b[49m\u001b[43mshapeType\u001b[49m\u001b[43m \u001b[49m\u001b[43m!=\u001b[49m\u001b[43m \u001b[49m\u001b[43mshapefile\u001b[49m\u001b[43m.\u001b[49m\u001b[43mNULL\u001b[49m\u001b[43m:\u001b[49m\n\u001b[32m    167\u001b[39m \u001b[43m            \u001b[49m\u001b[38;5;28;43;01myield\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43msgeom\u001b[49m\u001b[43m.\u001b[49m\u001b[43mshape\u001b[49m\u001b[43m(\u001b[49m\u001b[43mshape\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/shapefile.py:1483\u001b[39m, in \u001b[36mReader.iterShapes\u001b[39m\u001b[34m(self, bbox)\u001b[39m\n\u001b[32m   1479\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m.numShapes:\n\u001b[32m   1480\u001b[39m     \u001b[38;5;66;03m# Iterate exactly the number of shapes from shx header\u001b[39;00m\n\u001b[32m   1481\u001b[39m     \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m xrange(\u001b[38;5;28mself\u001b[39m.numShapes):\n\u001b[32m   1482\u001b[39m         \u001b[38;5;66;03m# MAYBE: check if more left of file or exit early? \u001b[39;00m\n\u001b[32m-> \u001b[39m\u001b[32m1483\u001b[39m         shape = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m__shape\u001b[49m\u001b[43m(\u001b[49m\u001b[43moid\u001b[49m\u001b[43m=\u001b[49m\u001b[43mi\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mbbox\u001b[49m\u001b[43m=\u001b[49m\u001b[43mbbox\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   1484\u001b[39m         \u001b[38;5;28;01mif\u001b[39;00m shape:\n\u001b[32m   1485\u001b[39m             \u001b[38;5;28;01myield\u001b[39;00m shape\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/shapefile.py:1319\u001b[39m, in \u001b[36mReader.__shape\u001b[39m\u001b[34m(self, oid, bbox)\u001b[39m\n\u001b[32m   1317\u001b[39m \u001b[38;5;66;03m# All shape types capable of having a bounding box\u001b[39;00m\n\u001b[32m   1318\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m shapeType \u001b[38;5;129;01min\u001b[39;00m (\u001b[32m3\u001b[39m,\u001b[32m5\u001b[39m,\u001b[32m8\u001b[39m,\u001b[32m13\u001b[39m,\u001b[32m15\u001b[39m,\u001b[32m18\u001b[39m,\u001b[32m23\u001b[39m,\u001b[32m25\u001b[39m,\u001b[32m28\u001b[39m,\u001b[32m31\u001b[39m):\n\u001b[32m-> \u001b[39m\u001b[32m1319\u001b[39m     record.bbox = _Array(\u001b[33m'\u001b[39m\u001b[33md\u001b[39m\u001b[33m'\u001b[39m, \u001b[43munpack\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43m<4d\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mf\u001b[49m\u001b[43m.\u001b[49m\u001b[43mread\u001b[49m\u001b[43m(\u001b[49m\u001b[32;43m32\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m)\n\u001b[32m   1320\u001b[39m     \u001b[38;5;66;03m# if bbox specified and no overlap, skip this shape\u001b[39;00m\n\u001b[32m   1321\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m bbox \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m bbox_overlap(bbox, record.bbox):\n\u001b[32m   1322\u001b[39m         \u001b[38;5;66;03m# because we stop parsing this shape, skip to beginning of\u001b[39;00m\n\u001b[32m   1323\u001b[39m         \u001b[38;5;66;03m# next shape before we return\u001b[39;00m\n\n\u001b[31merror\u001b[39m: unpack requires a buffer of 32 bytes","ename":"error","evalue":"unpack requires a buffer of 32 bytes"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x1000 with 2 Axes>","content_type":"text/plain"}}}],"key":"j78pExATLX"}],"key":"EB2447Dowo"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"United States Map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZJGvxNU4c5"}],"identifier":"united-states-map","label":"United States Map","html_id":"united-states-map","implicit":true,"key":"HkDjPMXGI5"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Map of the United States roughly from -130 to -60 and 20 to 60:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QpPgLk89lE"}],"key":"QWLlnrAUju"},{"type":"code","lang":"","value":"longitude east = -60\n\nlongitude west = -130\n\nlatitude north = 60\n\nlatitude south = 20","position":{"start":{"line":4,"column":1},"end":{"line":12,"column":1}},"key":"k4tRo9Fkty"}],"key":"E28kkxlrcO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Set up United States map plot\nfig = plt.subplots(figsize=(15, 10))\nprojection_map = ccrs.PlateCarree()\nax = plt.axes(projection=projection_map)\nlon_west, lon_east, lat_south, lat_north = -130, -60, 20, 60\nax.set_extent([lon_west, lon_east, lat_south, lat_north], crs=projection_map)\nax.coastlines(color=\"black\")\nax.add_feature(cfeature.BORDERS, edgecolor='grey')\nax.add_feature(cfeature.STATES, edgecolor=\"grey\")\n    \n# Plot Latitude/Longitude Location\nlongitudes = location_df[\"longitude\"] # longitude\nlatitudes = location_df[\"latitude\"]   # latitude\nplt.scatter(longitudes, latitudes, c=\"red\")\n\nplt.title(\"United States Map with Locations\")\nplt.show()","key":"wfFlB3UbDK"},{"type":"output","id":"KYRwpM7-f2JWkwDrOKlrX","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/cookbook-gc/lib/python3.13/site-packages/cartopy/io/__init__.py:241: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/50m_cultural/ne_50m_admin_0_boundary_lines_land.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x1000 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"0cb8342fcc2a0a7a3a2b8dc0b8a6be65","path":"/great-circle-cookbook/build/0cb8342fcc2a0a7a3a2b8dc0b8a6be65.png"}}}],"key":"gy9SmezJ7S"}],"key":"AhP9dzQ09U"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OxxrH4Oto4"}],"key":"WWPVncP3Wu"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DMkopgDOsX"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"epsBFrpGY5"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Coordinates on the Earth are measured in many different types of coordinate systems: Geodesic (latitude/longitude), cartesian, spherical, and polar. These coordinates will make future calculations simpler by converting a 2D coordinate like latitude/longitude into a 3D space that can be used for vector calculations.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EkfFNtdnYH"}],"key":"q68JLX9UTZ"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"In Python, coordinates can be mapped on to a world map via ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"F0VvCE0gu5"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"CIBHvUKbfh"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"TWyJl8AWt1"},{"type":"inlineCode","value":"cartopy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hpJ1O6ufCR"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"E305OQvtwQ"}],"key":"Vhon7L95cA"},{"type":"heading","depth":3,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"What’s next?","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"WJ1UekRIOK"}],"identifier":"whats-next","label":"What’s next?","html_id":"whats-next","implicit":true,"key":"aCbUR8FGVV"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Great Circle arcs and paths","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"w7oc2MjtzG"}],"key":"V3qGJbRbow"}],"key":"DaMIomp2Hk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zAibNIEdDJ"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"tRxy7vD7PX"}],"key":"u9axky7LV7"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"link","url":"https://edwilliams.org/avform147.htm","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Ed Williams “Avitation Formulary”","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"s8EBiSzUNp"}],"urlSource":"https://edwilliams.org/avform147.htm","key":"PndVzLjy1S"}],"key":"gOOwMLP6sZ"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"link","url":"https://www.movable-type.co.uk/scripts/latlong.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Movable Type Scripts","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ug25gVFQr6"}],"urlSource":"https://www.movable-type.co.uk/scripts/latlong.html","key":"QqhRUDywzi"}],"key":"jDPAjDCySt"}],"key":"QRdpW6s06W"}],"key":"NSzyA7ZcSX"}],"key":"WkwN5nvu9i"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Great Circle Terminology","url":"/notebooks/foundations/terminology","group":"Foundations"},"next":{"title":"Great Circle Arcs and Path","url":"/notebooks/tutorials/arc-path","group":"Tutorials"}}},"domain":"http://localhost:3000"}