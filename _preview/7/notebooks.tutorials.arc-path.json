{"version":2,"kind":"Notebook","sha256":"3898872fb5ff3b82246bf7c163e89981554abfe065d8e69cbf8e3fa762d45a7c","slug":"notebooks.tutorials.arc-path","location":"/notebooks/tutorials/1_arc_path.ipynb","dependencies":[],"frontmatter":{"title":"Great Circle Arcs and Path","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Cora Schneck","given":"Cora","family":"Schneck"},"name":"Cora Schneck","orcid":"0009-0009-1415-5170","affiliations":["NSF National Center for Atmospheric Research"],"id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-1"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/great-circle-cookbook","copyright":"2025","affiliations":[{"id":"NSF National Center for Atmospheric Research","name":"NSF National Center for Atmospheric Research"},{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/great-circle-cookbook/blob/HEAD/notebooks/tutorials/1_arc_path.ipynb","thumbnail":"/great-circle-cookbook/_preview/7/build/17b783c8f9a45f5f402dc3edacb2de26.gif","exports":[{"format":"ipynb","filename":"1_arc_path.ipynb","url":"/great-circle-cookbook/_preview/7/build/1_arc_path-cb2ec0ea04808a0b058eba76efa05ffb.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/great-circle-cookbook/_preview/7/build/17b783c8f9a45f5f402dc3edacb2de26.gif","alt":"Indiana Jones Plane Flying Gif","key":"vT8KPVfL0U","urlSource":"https://j.gifs.com/vO2k6P.gif"}],"key":"GoqSrgNxtk"}],"key":"xePYx1r7Bw"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Great Circle Arcs and Path","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"C39hQ6IQ4Z"}],"identifier":"great-circle-arcs-and-path","label":"Great Circle Arcs and Path","html_id":"great-circle-arcs-and-path","implicit":true,"key":"PK2PvJxo8J"}],"key":"swneFNiB3V"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uBFlOkE8nO"}],"key":"uETu6zLJCA"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"radxc7zqjz"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"kr2TCC1Moc"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Imagine you are on a plane flying from Cario to Hong Kong. As a passenger, the plane appears to travel a straight path from one airport to the next. However, in reality, as the plane travels it actually curves along the surface of Earth held down by the gravity of the planet.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jJAsOgdaW0"}],"key":"Fb9RxuEMIX"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The “straight line” has become an arc connecting Cario and Hong Kong on a map. This arc is a great circle arc, just one small subsection of the great circle path.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Jt9GBTv8oc"}],"key":"kYQyrs5kKY"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Distance between Points on a Great Circle Arc","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"yX6Mm0UxBt"}],"key":"IYpAFeUGkw"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Convert Spherical Distance to Degrees","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"aJuBMKKmkc"}],"key":"jqLFcTVAx5"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Determine the Bearing of a Great Circle Arc","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"eR05T7BlpB"}],"key":"kgK4QzbIR8"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Generate a Great Circle Arc with Intermediate Points","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"hbGkyfSH1Q"}],"key":"u72cHmm77J"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Determine the Midpoint of a Great Circle Arc","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Gf44BIyNU9"}],"key":"I982JD9dR1"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Generate a Great Circle Path","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"UauYSfIv7K"}],"key":"kTZvF5gyaF"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Determine an Antipodal Point","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"auJjn5Rdxn"}],"key":"bMjUh7knsf"}],"key":"FLNuzQsqGD"}],"key":"KHcOvUJRwB"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lKWaXNF3i0"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"b1d2zQqQ9m"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ox9wXAoGIC"}],"key":"mBaJ6vhXo2"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ToKdKO7P30"}],"key":"oAsRwEB49L"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"a23orEznAd"}],"key":"v6GqfvNwZc"}],"key":"FHnAs3aHUH"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/numpy/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Numpy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"iNpQnppqbw"}],"urlSource":"https://foundations.projectpythia.org/core/numpy/","key":"Kj0o6k7dp4"}],"key":"ifJGx4yY1j"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"wcpAdZJi8Z"}],"key":"dGS2ttED3x"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Used to work with large arrays","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"oDDHFzrQUQ"}],"key":"GMGPhtGmpF"}],"key":"CSdIvThyf9"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/pandas","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Pandas","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xZ28oMi9Qh"}],"urlSource":"https://foundations.projectpythia.org/core/pandas","key":"GI1T3wc1di"}],"key":"BgfQ67hKXT"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"nlCdjYlqWm"}],"key":"dYENr7XvyG"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Used to read in and organize data (in particular dataframes)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"LRwKCn8mpq"}],"key":"iS3TNIB4G4"}],"key":"TgEAa80WcN"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"cPCPXXlDQB"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy","key":"mt04kquvam"}],"key":"gqT4Owxgsg"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"dz5witLKDK"}],"key":"TXKiOpGsX7"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Will be used for adding maps to plotting","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"VTjUMjB5me"}],"key":"u633dkP6ow"}],"key":"vFKBhGfh7e"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/matplotlib/","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Matplotlib","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"UxGF94tTyw"}],"urlSource":"https://foundations.projectpythia.org/core/matplotlib/","key":"L7PG2FYxF1"}],"key":"PXlG9YDJ5J"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"R2YZY3KIwz"}],"key":"xowU8PwAo2"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Will be used for plotting","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"LzzX5hJYbx"}],"key":"RoG99rsmgn"}],"key":"asycsBVfwq"}],"key":"YCVqMtKtwd"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"KKtPmq7P5A"}],"key":"dBLg1l521O"},{"type":"text","value":": 40 minutes","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"oDMUKVNMca"}],"key":"r4KsjB8d0T"}],"key":"b92mLtbBCz"}],"key":"E6rE7a7nhu"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ohEp9Dp5Z5"}],"key":"BCw3DAGANl"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DD9N9bTojy"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"WQ5LtK0l0c"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To begin, let’s import the packages we will need in this notebook and collect the list of locations coordinates","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"W3EHUNGQ4H"}],"key":"nC1GkyiMTl"}],"key":"qKu9XVTykl"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import pandas as pd       # reading in data for location information from text file\nimport numpy as np        # working with arrays, vectors, cross/dot products, and radians\n\nfrom pyproj import Geod   # working with the Earth as an ellipsod (WGS-84)\nimport geopy.distance     # working with the Earth as an ellipsod (WGS-84)\n\nimport matplotlib.pyplot as plt    # Plotting a figure\nfrom cartopy import crs as ccrs, feature as cfeature  # Add World Map to Plot","key":"goEC8t0zwa"},{"type":"output","id":"ihut2ctnnUOJIUzUvCIn9","data":[],"key":"LGzrfwVHdL"}],"key":"mUE78RzSe7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Get the coordinates for locations with all coordinates\nlocation_df = pd.read_csv(\"../location_full_coords.txt\")\nlocation_df = location_df.rename(columns=lambda x: x.strip()) # strip excess white space from column names and values\nlocation_df.head()","key":"epuOWjINFa"},{"type":"output","id":"EU17qFq1-l81VI3l-nUtX","data":[{"output_type":"execute_result","execution_count":2,"metadata":{},"data":{"text/plain":{"content":"       name  latitude  longitude    cart_x    cart_y    cart_z  rho     theta  \\\n0   arecibo   18.3441   -66.7527  0.374643 -0.872119  0.314723  1.0 -1.165054   \n1   boulder   40.0150  -105.2705 -0.201714 -0.738835  0.642988  1.0  1.304276   \n2    boston   42.3601   -71.0589  0.239852 -0.698914  0.673788  1.0 -1.240212   \n3  redwoods   41.4017  -124.0417 -0.419898 -0.621549  0.661334  1.0  0.976657   \n4   houston   29.5518   -95.0982 -0.077303 -0.866469  0.493210  1.0  1.481816   \n\n        phi       polar_x       polar_y       polar_z  \n0  1.250631 -5.562495e+06  2.389526e+06  2.007347e+06  \n1  0.872403 -4.712394e+06 -1.286558e+06  4.101066e+06  \n2  0.831473 -4.457769e+06  1.529809e+06  4.297512e+06  \n3  0.848200 -3.964322e+06 -2.678169e+06  4.218080e+06  \n4  1.055020 -5.526456e+06 -4.930480e+05  3.145762e+06  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>cart_x</th>\n      <th>cart_y</th>\n      <th>cart_z</th>\n      <th>rho</th>\n      <th>theta</th>\n      <th>phi</th>\n      <th>polar_x</th>\n      <th>polar_y</th>\n      <th>polar_z</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>arecibo</td>\n      <td>18.3441</td>\n      <td>-66.7527</td>\n      <td>0.374643</td>\n      <td>-0.872119</td>\n      <td>0.314723</td>\n      <td>1.0</td>\n      <td>-1.165054</td>\n      <td>1.250631</td>\n      <td>-5.562495e+06</td>\n      <td>2.389526e+06</td>\n      <td>2.007347e+06</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>boulder</td>\n      <td>40.0150</td>\n      <td>-105.2705</td>\n      <td>-0.201714</td>\n      <td>-0.738835</td>\n      <td>0.642988</td>\n      <td>1.0</td>\n      <td>1.304276</td>\n      <td>0.872403</td>\n      <td>-4.712394e+06</td>\n      <td>-1.286558e+06</td>\n      <td>4.101066e+06</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>boston</td>\n      <td>42.3601</td>\n      <td>-71.0589</td>\n      <td>0.239852</td>\n      <td>-0.698914</td>\n      <td>0.673788</td>\n      <td>1.0</td>\n      <td>-1.240212</td>\n      <td>0.831473</td>\n      <td>-4.457769e+06</td>\n      <td>1.529809e+06</td>\n      <td>4.297512e+06</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>redwoods</td>\n      <td>41.4017</td>\n      <td>-124.0417</td>\n      <td>-0.419898</td>\n      <td>-0.621549</td>\n      <td>0.661334</td>\n      <td>1.0</td>\n      <td>0.976657</td>\n      <td>0.848200</td>\n      <td>-3.964322e+06</td>\n      <td>-2.678169e+06</td>\n      <td>4.218080e+06</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>houston</td>\n      <td>29.5518</td>\n      <td>-95.0982</td>\n      <td>-0.077303</td>\n      <td>-0.866469</td>\n      <td>0.493210</td>\n      <td>1.0</td>\n      <td>1.481816</td>\n      <td>1.055020</td>\n      <td>-5.526456e+06</td>\n      <td>-4.930480e+05</td>\n      <td>3.145762e+06</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"Qo6yNXxDfq"}],"key":"wfrUO1bGnq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Set index to the name column, this will make it easier to access each row\nlocation_df.index = location_df[\"name\"]\nlocation_df.head()","key":"PmitGROviC"},{"type":"output","id":"DYq7y9JSYZQhyawzqRWTi","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"              name  latitude  longitude    cart_x    cart_y    cart_z  rho  \\\nname                                                                         \narecibo    arecibo   18.3441   -66.7527  0.374643 -0.872119  0.314723  1.0   \nboulder    boulder   40.0150  -105.2705 -0.201714 -0.738835  0.642988  1.0   \nboston      boston   42.3601   -71.0589  0.239852 -0.698914  0.673788  1.0   \nredwoods  redwoods   41.4017  -124.0417 -0.419898 -0.621549  0.661334  1.0   \nhouston    houston   29.5518   -95.0982 -0.077303 -0.866469  0.493210  1.0   \n\n             theta       phi       polar_x       polar_y       polar_z  \nname                                                                    \narecibo  -1.165054  1.250631 -5.562495e+06  2.389526e+06  2.007347e+06  \nboulder   1.304276  0.872403 -4.712394e+06 -1.286558e+06  4.101066e+06  \nboston   -1.240212  0.831473 -4.457769e+06  1.529809e+06  4.297512e+06  \nredwoods  0.976657  0.848200 -3.964322e+06 -2.678169e+06  4.218080e+06  \nhouston   1.481816  1.055020 -5.526456e+06 -4.930480e+05  3.145762e+06  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>cart_x</th>\n      <th>cart_y</th>\n      <th>cart_z</th>\n      <th>rho</th>\n      <th>theta</th>\n      <th>phi</th>\n      <th>polar_x</th>\n      <th>polar_y</th>\n      <th>polar_z</th>\n    </tr>\n    <tr>\n      <th>name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>arecibo</th>\n      <td>arecibo</td>\n      <td>18.3441</td>\n      <td>-66.7527</td>\n      <td>0.374643</td>\n      <td>-0.872119</td>\n      <td>0.314723</td>\n      <td>1.0</td>\n      <td>-1.165054</td>\n      <td>1.250631</td>\n      <td>-5.562495e+06</td>\n      <td>2.389526e+06</td>\n      <td>2.007347e+06</td>\n    </tr>\n    <tr>\n      <th>boulder</th>\n      <td>boulder</td>\n      <td>40.0150</td>\n      <td>-105.2705</td>\n      <td>-0.201714</td>\n      <td>-0.738835</td>\n      <td>0.642988</td>\n      <td>1.0</td>\n      <td>1.304276</td>\n      <td>0.872403</td>\n      <td>-4.712394e+06</td>\n      <td>-1.286558e+06</td>\n      <td>4.101066e+06</td>\n    </tr>\n    <tr>\n      <th>boston</th>\n      <td>boston</td>\n      <td>42.3601</td>\n      <td>-71.0589</td>\n      <td>0.239852</td>\n      <td>-0.698914</td>\n      <td>0.673788</td>\n      <td>1.0</td>\n      <td>-1.240212</td>\n      <td>0.831473</td>\n      <td>-4.457769e+06</td>\n      <td>1.529809e+06</td>\n      <td>4.297512e+06</td>\n    </tr>\n    <tr>\n      <th>redwoods</th>\n      <td>redwoods</td>\n      <td>41.4017</td>\n      <td>-124.0417</td>\n      <td>-0.419898</td>\n      <td>-0.621549</td>\n      <td>0.661334</td>\n      <td>1.0</td>\n      <td>0.976657</td>\n      <td>0.848200</td>\n      <td>-3.964322e+06</td>\n      <td>-2.678169e+06</td>\n      <td>4.218080e+06</td>\n    </tr>\n    <tr>\n      <th>houston</th>\n      <td>houston</td>\n      <td>29.5518</td>\n      <td>-95.0982</td>\n      <td>-0.077303</td>\n      <td>-0.866469</td>\n      <td>0.493210</td>\n      <td>1.0</td>\n      <td>1.481816</td>\n      <td>1.055020</td>\n      <td>-5.526456e+06</td>\n      <td>-4.930480e+05</td>\n      <td>3.145762e+06</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"BIFMFcvMSN"}],"key":"bTfS4zxABB"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Distance Between Points on a Great Circle Arc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"peQp2vphQP"}],"identifier":"distance-between-points-on-a-great-circle-arc","label":"Distance Between Points on a Great Circle Arc","html_id":"distance-between-points-on-a-great-circle-arc","implicit":true,"key":"z5fRRoGyxb"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We can determine the distance between two points A and B (for example, Cario and Hong Kong) both by hand mathematically and with Python packages like ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"r4GfdMMnDB"},{"type":"inlineCode","value":"pyproj","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TP39JW8S0E"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NhkOzDVsCV"},{"type":"inlineCode","value":"geopy","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YjsuHKt9TD"}],"key":"kt6p0pVOLJ"}],"key":"gboKPlw6B1"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine Distance Between Points Mathematically via Unit Sphere","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YtaT3WOcQf"}],"identifier":"determine-distance-between-points-mathematically-via-unit-sphere","label":"Determine Distance Between Points Mathematically via Unit Sphere","html_id":"determine-distance-between-points-mathematically-via-unit-sphere","implicit":true,"key":"dzdXrFROvO"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Unit sphere refers to a sphere with a radius of 1, for the purpose of this cookbook, when we are using a unit sphere to represent Earth, it is a perfect sphere that has been multiplied by 6378137 meters","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GXnrLGFpjd"}],"key":"VUZDct16qF"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"First, to measure the distance between point A (latA, lonA) and point B (latB, lonB) on a unit sphere (radius = 1)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BDLNJHrkal"}],"key":"dXKQcqWqKK"},{"type":"math","value":"d=acos(sin(latA)*sin(latB)+cos(latA)*cos(latB)*cos(lonA-lonB))","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>d</mi><mo>=</mo><mi>a</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>A</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">d=acos(sin(latA)*sin(latB)+cos(latA)*cos(latB)*cos(lonA-lonB))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">))</span></span></span></span></span>","enumerator":"1","key":"II4ZzkujWG"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Because of the translation when working with radians and degrees, there is a mathematically equivalent formula that works better when working with shorter distances (to produce less rounding errors):","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"DIG83pLvAA"}],"key":"ckFW5WkQ97"},{"type":"math","value":"d=2*asin(\\sqrt{sin(\\frac{latA-latB}{2})^2 + cos(latA)*cos(latB)*sin(\\frac{lonA-lonB}{2})^2})","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>d</mi><mo>=</mo><mn>2</mn><mo>∗</mo><mi>a</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><msqrt><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo>−</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi></mrow><mn>2</mn></mfrac><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>l</mi><mi>o</mi><mi>n</mi><mi>A</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>B</mi></mrow><mn>2</mn></mfrac><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">d=2*asin(\\sqrt{sin(\\frac{latA-latB}{2})^2 + cos(latA)*cos(latB)*sin(\\frac{lonA-lonB}{2})^2})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.44em;vertical-align:-0.7634em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6766em;\"><span class=\"svg-align\" style=\"top:-4.4em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.6366em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:2.48em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl0 -0c4,-6.7,10,-10,18,-10 H400000\nv40H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M1001 80\nh400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7634em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"2","key":"ENNCWWd3Lw"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"link","url":"https://edwilliams.org/avform147.htm#Dist","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"See more: Distance Between Points","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"oG54b5Hepu"}],"urlSource":"https://edwilliams.org/avform147.htm#Dist","key":"NmJK87eQMu"}],"key":"MOsHxpsoRd"}],"key":"sDo4y0t4fJ"}],"key":"bmuNaZkjg5"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can now translate these equations for measuring the distance between two points (the great circle arc distance) into Python and multiply the result by the Earth’s radius.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oqdrrOwGMr"}],"key":"f4m6XdRlMu"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"These equations use a locations’s latitude/longtiude coordinates, which we can access in a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Oh0T3fjIct"},{"type":"inlineCode","value":"pandas","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LZDl8xlm8N"},{"type":"text","value":" dataframe with the name of the location and which coordinate type we would like, for example:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CRU97EHJHK"}],"key":"t4toJewQSK"}],"key":"LSOmwdalwi"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(f\"Boulder latitude: {location_df.loc[\"boulder\", \"latitude\"]}\")\nprint(f\"Boulder longitude: {location_df.loc[\"boulder\", \"longitude\"]}\")","key":"MCMmf6fX8g"},{"type":"output","id":"1khShGBpYJ5Vq4xlX2JNq","data":[{"output_type":"stream","name":"stdout","text":"Boulder latitude: 40.015\nBoulder longitude: -105.2705\n"}],"key":"J6ghqiK4Fe"}],"key":"yOax8XJoCG"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Below, Equation 1 has become ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dy0pwuEaRd"},{"type":"inlineCode","value":"distance_between_points_default","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gEphILqJMt"},{"type":"text","value":" since this is the equation we will use for most equations, but Equation 2 has become ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xPUOF037b9"},{"type":"inlineCode","value":"distance_between_points_small","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rWjkRirz3U"},{"type":"text","value":" for working with small distances that are less prone to rounding errors. We can call both equations to compare outputs to see how they are mathematically equivalent. By hand, Equation 1 is a faster calculation than Equation 2, but when working with Python both of these functions will run nearly as quickly.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XV4WL04fQu"}],"key":"pWqkDXbI8b"}],"key":"ARI76Dc1aw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def distance_between_points_default(start_point=None, end_point=None):\n    earth_radius = 6378137  # meters\n    latA = np.deg2rad(location_df.loc[start_point, \"latitude\"])\n    lonA = np.deg2rad(location_df.loc[start_point, \"longitude\"])\n    latB = np.deg2rad(location_df.loc[end_point, \"latitude\"])\n    lonB = np.deg2rad(location_df.loc[end_point, \"longitude\"])\n\n    distance_default = np.arccos(np.sin(latA)*np.sin(latB)+np.cos(latA)*np.cos(latB)*np.cos(lonA-lonB))\n    return distance_default * earth_radius","key":"iUlOyrDYBA"},{"type":"output","id":"TtY_HX740iQQgHSoCV-Sw","data":[],"key":"LIm3HMOuOw"}],"key":"iFVNFoXMOx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def distance_between_points_small(start_point=None, end_point=None):\n    earth_radius = 6378137  # meters\n    latA = np.deg2rad(location_df.loc[start_point, \"latitude\"])\n    lonA = np.deg2rad(location_df.loc[start_point, \"longitude\"])\n    latB = np.deg2rad(location_df.loc[end_point, \"latitude\"])\n    lonB = np.deg2rad(location_df.loc[end_point, \"longitude\"])\n\n    distance_small = 2 * np.arcsin(np.sqrt((np.sin((latA-latB)/2))**2 + np.cos(latA)*np.cos(latB)*(np.sin((lonA-lonB)/2))**2))\n    return distance_small * earth_radius","key":"iVU2AM7SL9"},{"type":"output","id":"OSAOZRTNJNW2oR_DMK-kZ","data":[],"key":"bNlnuWqYuk"}],"key":"IjucpFflM7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Sidenote: Additional Formulas","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YZeCw5AgpL"}],"identifier":"sidenote-additional-formulas","label":"Sidenote: Additional Formulas","html_id":"sidenote-additional-formulas","implicit":true,"key":"UB4bXAfxF1"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"While we will be focusing on Equation 1 and Equation 2 for our calculations in the future, there are even more methods to calculate the distance between points on a sphere. Each formula has different degrees of precision based on which ellipsoid or sphere is used:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QoN3Pg14sI"}],"key":"pBNJinxfOZ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://en.wikipedia.org/wiki/Haversine_formula","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Haversine Formula","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ONzdEJ44iy"}],"urlSource":"https://en.wikipedia.org/wiki/Haversine_formula","data":{"page":"Haversine_formula","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"snCVstjTtx"}],"key":"NPItNdhC63"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://en.wikipedia.org/wiki/Vincenty%27s_formulae","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Vincenty’s Formula","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"FrRCo3DQ7b"}],"urlSource":"https://en.wikipedia.org/wiki/Vincenty%27s_formulae","data":{"page":"Vincenty%27s_formulae","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"VItMySvBmG"}],"key":"Bm7YJCI6As"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://search.r-project.org/CRAN/refmans/geosphere/html/distMeeus.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Meeus Great Circle Distance","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bMAXaZctr5"}],"urlSource":"https://search.r-project.org/CRAN/refmans/geosphere/html/distMeeus.html","key":"PxmJ8PSkSi"}],"key":"DrO5qO3V0w"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://www.rdocumentation.org/packages/geosphere/versions/1.5-20/topics/distCosine","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Law of Cosines Great Circle Distance","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"qMkCrtAeXN"}],"urlSource":"https://www.rdocumentation.org/packages/geosphere/versions/1.5-20/topics/distCosine","key":"g8GOo7gm9l"}],"key":"N333EBLuTC"}],"key":"vdqA2tSP9v"}],"key":"pp05Acmbeq"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine Distance Points via Python Package ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oU4ELrSNZj"},{"type":"inlineCode","value":"pyproj","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TydDTH1fUA"}],"identifier":"determine-distance-points-via-python-package-pyproj","label":"Determine Distance Points via Python Package pyproj","html_id":"determine-distance-points-via-python-package-pyproj","implicit":true,"key":"SX8p79UuQv"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"While great circle distances can be determine mathematically, there are some Python packages that account for the fact that the Earth is not a perfect sphere that will be easier to work than relying entirely on the equations derived above. For example, ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QIiu377lSB"},{"type":"inlineCode","value":"pyproj","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Xjq72sxzh9"},{"type":"text","value":" treats the Earth as an ellipsoid, by default specifically ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PJgPJbtCec"},{"type":"inlineCode","value":"WGS-84","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lrWy0H2WuA"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iilloK2ZYr"}],"key":"rFnDTxrIhE"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://en.wikipedia.org/wiki/World_Geodetic_System","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"WGS-84 is the World Geodetic System","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"tGxVnMcev8"}],"urlSource":"https://en.wikipedia.org/wiki/World_Geodetic_System","data":{"page":"World_Geodetic_System","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"wKOGHUw8Uw"},{"type":"text","value":" and considered to be the current standard for geodesy and working with satellite. It is an geocentric and is consistent to within 1 meter around the globe.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"aFrf8Je8kA"}],"key":"wbuQcpM5pF"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"To begin, let use use ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"WcBUzdZpkY"},{"type":"inlineCode","value":"pyproj","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GLS2x2qMBY"},{"type":"text","value":" to set up an ellipsoid (","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Ju6JyUGRHB"},{"type":"inlineCode","value":"WGS-84","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GBy6BVOjln"},{"type":"text","value":") that will represent the Earth.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ILByCFcwAW"}],"key":"aLPRe5ym2K"}],"key":"cmVZiZU3We"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def distance_pyproj(start_pt=None, end_pt=None):\n    geodesic = Geod(ellps=\"WGS84\") # setup ellipsoid\n\n    # Return the distance between two points (for example, Boulder and Boston)\n    _, _, distance_meter =  geodesic.inv(location_df.loc[start_pt, \"longitude\"],\n                                         location_df.loc[start_pt, \"latitude\"],\n                                         location_df.loc[end_pt, \"longitude\"],\n                                         location_df.loc[end_pt, \"latitude\"])\n    \n    return distance_meter","key":"mmnogwUTmV"},{"type":"output","id":"wN-xuReaf4AdkN6l5dvhq","data":[],"key":"sgM3IlYK2g"}],"key":"HGl3NaGWXH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Find the distance between Boulder and Boston\ndistance_meter = distance_pyproj(\"boulder\", \"boston\")\nprint(f\"Distance between coordinates (ellipsoid)   = {distance_meter/1000} km\")","key":"mK3YQdwilk"},{"type":"output","id":"05VHQBR_oTBMBmKa_b92l","data":[{"output_type":"stream","name":"stdout","text":"Distance between coordinates (ellipsoid)   = 2862.5974799145215 km\n"}],"key":"FaiVXB9aRM"}],"key":"UqJPyOxO51"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"That is much easier! We can compare ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RgfKwk052z"},{"type":"inlineCode","value":"pyproj","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WbIjhR0dUT"},{"type":"text","value":" to the output from the equations (1 and 2) that we calculated above:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XuG3Hd0Il4"}],"key":"nv2M0dYB9E"}],"key":"Ox7ataPh6Y"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"distance_unit_sphere_default = distance_between_points_default(\"boulder\", \"boston\")\nprint(f\"Distance between coordinates (unit sphere) = {distance_unit_sphere_default/1000} km\")\ndistance_unit_sphere_small = distance_between_points_small(\"boulder\", \"boston\")\nprint(f\"Distance between coordinates (unit sphere) = {distance_unit_sphere_small/1000} km\")","key":"G7JmuaPF1y"},{"type":"output","id":"6Xk2-uZJuDizg_vVLnW3b","data":[{"output_type":"stream","name":"stdout","text":"Distance between coordinates (unit sphere) = 2858.532213639344 km\nDistance between coordinates (unit sphere) = 2858.5322136393447 km\n"}],"key":"ZeyP02bjvB"}],"key":"cdOpjYrYSY"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Both equations we calculated above slightly underestimate the distance between Boston and Boulder because they assume the Earth is a perfect sphere, ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UJ568qVEeG"},{"type":"inlineCode","value":"pyproj","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RN0hN0wek1"},{"type":"text","value":" accounts for ellipse.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"axyAGCKDY9"}],"key":"EarsNZrw5d"}],"key":"wukjtg0t7Y"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert Spherical Distance to Degrees","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Jss4EJWT7F"}],"identifier":"convert-spherical-distance-to-degrees","label":"Convert Spherical Distance to Degrees","html_id":"convert-spherical-distance-to-degrees","implicit":true,"key":"XZTvtmVbQI"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Sometimes when you are working with a map, you don’t always just need a distance in meters or kilometers. We can also convert the distances calculated back into degrees as needed. To convert a distance from meters to degrees, we will assume that the great circle is on a unit sphere with a constant spherical radius of ~6371 km (mean radius of Earth).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GiUPJnz2m2"}],"key":"c8riRNB01B"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Side note: The Python library ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"XSIDDUFo3b"},{"type":"inlineCode","value":"ObsPy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"OI5Xu1MNG8"},{"type":"text","value":" has a similar function built-in: ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZScf1Fd4TS"},{"type":"link","url":"https://docs.obspy.org/packages/autogen/obspy.geodetics.base.kilometer2degrees.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"ObsPy ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"E8LwZ64VID"},{"type":"inlineCode","value":"kilometer2degrees()","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"zUwPHeNXj7"}],"urlSource":"https://docs.obspy.org/packages/autogen/obspy.geodetics.base.kilometer2degrees.html","key":"CmG0uYYKtx"}],"key":"x1iuA9aaZC"}],"key":"b5u2j6os5G"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"earth_radius = 6378.137 # km\n\ndef km_to_degree_distance(distance_km=None):\n    return distance_km / (2 * earth_radius * np.pi / 360)\n\ndef degree_to_km_distance(distance_degree=None):\n    return distance_degree * (2 * earth_radius * np.pi / 360)","key":"Bu6R55qmJj"},{"type":"output","id":"6SM21AL7cP_RCVoetnh2B","data":[],"key":"xv18XwiHEC"}],"key":"wEQqmxAQxE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# We can convert back and form between kilometers and degrees\nprint(f\"300 km to degrees = {km_to_degree_distance(300)} degrees\")\nprint(f\"2.6949458523585643 degree to km = {degree_to_km_distance(2.6949458523585643)} km\")","key":"vPAU0KSwTw"},{"type":"output","id":"hnkbb4XEuhJDKqqISiMf2","data":[{"output_type":"stream","name":"stdout","text":"300 km to degrees = 2.6949458523585643 degrees\n2.6949458523585643 degree to km = 300.0 km\n"}],"key":"iaGJc2SZW9"}],"key":"weJmwVUdUj"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine the Bearing of a Great Circle Arc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lUTi5XQOId"}],"identifier":"determine-the-bearing-of-a-great-circle-arc","label":"Determine the Bearing of a Great Circle Arc","html_id":"determine-the-bearing-of-a-great-circle-arc","implicit":true,"key":"rvJLbEokFm"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Arcs are not just a distance, but a direction. Now, we can calculate the direction that an arc takes as it moves from Point A to Point B also known as the bearing.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eZn8EsSggA"}],"key":"EfBoOO42lm"}],"key":"PgYLUPhhBb"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine the Bearing Mathematically via Unit Sphere","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aZQte46zCQ"}],"identifier":"determine-the-bearing-mathematically-via-unit-sphere","label":"Determine the Bearing Mathematically via Unit Sphere","html_id":"determine-the-bearing-mathematically-via-unit-sphere","implicit":true,"key":"f2eQr6uwzl"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The bearing between between Point A (latA, lonA) and Point B (latB, lonB) on a unit sphere can be calculated as:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sOpMMpvahN"}],"key":"uQPefIy425"},{"type":"math","value":"x = cos(latA) * sin(latB) - sin(latA) * cos(latB) * cos(lonB - lonA)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>x</mi><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>B</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x = cos(latA) * sin(latB) - sin(latA) * cos(latB) * cos(lonB - lonA)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"3","key":"EqHYpCHUQd"},{"type":"math","value":"y = sin(lonB - lonA) * cos(latB)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>B</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y = sin(lonB - lonA) * cos(latB)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"4","key":"G8bQghNMkG"},{"type":"math","value":"θ = atan2(y, x)","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>θ</mi><mo>=</mo><mi>a</mi><mi>t</mi><mi>a</mi><mi>n</mi><mn>2</mn><mo stretchy=\"false\">(</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">θ = atan2(y, x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">an</span><span class=\"mord\">2</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"5","key":"wxEAeFj4jO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"link","url":"https://www.movable-type.co.uk/scripts/latlong.html#bearing","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Movable Type: Bearing","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"VuSwmNQqIq"}],"urlSource":"https://www.movable-type.co.uk/scripts/latlong.html#bearing","key":"pH5Z4yxbeL"}],"key":"aTvEMlterh"}],"key":"dMRXkJegd9"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"This can be similarly converted to Python as:","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"wdf7Frv2Yh"}],"key":"X1pgm2Ezj8"}],"key":"ETPSgPYj7p"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def bearing_between_points_unit_sphere(start_point=None, end_point=None):\n    latA = np.deg2rad(location_df.loc[start_point, \"latitude\"])\n    lonA = np.deg2rad(location_df.loc[start_point, \"longitude\"])\n    latB = np.deg2rad(location_df.loc[end_point, \"latitude\"])\n    lonB = np.deg2rad(location_df.loc[end_point, \"longitude\"])\n\n    x = np.cos(latA) * np.sin(latB) - np.sin(latA) * np.cos(latB) * np.cos(lonB - lonA)\n    y = np.sin(lonB - lonA) * np.cos(latB)\n    bearing = np.arctan2(y, x)\n    return np.rad2deg(bearing) % 360","key":"zVyRJHaKtO"},{"type":"output","id":"Z9GZeqQSeYUJTMF2AY8MH","data":[],"key":"mEwNWQcInX"}],"key":"n7esLZSc94"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine the Bearing via Python Package ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D2fqSrvJWc"},{"type":"inlineCode","value":"pyproj","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OaznQZFp1R"}],"identifier":"determine-the-bearing-via-python-package-pyproj","label":"Determine the Bearing via Python Package pyproj","html_id":"determine-the-bearing-via-python-package-pyproj","implicit":true,"key":"RyY9otSxUg"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"pyproj","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OM1KnYWAOL"},{"type":"text","value":" can also use the same ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rFPQIMiJvI"},{"type":"inlineCode","value":"geodesic.inv()","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"s2qmbYMrn3"},{"type":"text","value":" function to calculate bearing. However, ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hCxjeS4RJ2"},{"type":"inlineCode","value":"pyproj","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gwoipgK7KX"},{"type":"text","value":" includes both the foward and reverse bearing. Foward bearing refers to the bearing from Point A to Point B, while the reverse bearing is the bearing from Point B to Point A. The reverse bearing is returned as a negative angle, but it can also be calculated as the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JxaQv42GBE"},{"type":"inlineCode","value":"Forward Bearing - 360","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Wsp3Ke4jRM"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"N1uEWMbyO8"}],"key":"Qa0rPAOAKI"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For example, to find the bearing from Boulder and Boston:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NtJlkijSM8"}],"key":"r4CyYMsplv"}],"key":"LRHhg8tHNR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"geodesic = Geod(ellps=\"WGS84\")\nfwd_bearing, rvs_bearing, _ =  geodesic.inv(location_df.loc[\"boulder\", \"longitude\"],\n                                             location_df.loc[\"boulder\", \"latitude\"],\n                                             location_df.loc[\"boston\", \"longitude\"],\n                                             location_df.loc[\"boston\", \"latitude\"])\nprint(f\"Foward Bearing: {fwd_bearing}\")\nprint(f\"Reverse Bearing: {rvs_bearing} ({rvs_bearing%360})\")","key":"v3JjwY0NOi"},{"type":"output","id":"UmggbCRnk13xk9SpHThAK","data":[{"output_type":"stream","name":"stdout","text":"Foward Bearing: 73.51048829569022\nReverse Bearing: -83.57035585674933 (276.4296441432507)\n"}],"key":"Lbe4xNsw93"}],"key":"ONapseH9cH"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"When refering to bearing however, it is typically assumed to be refering to the foward bearing, so we will use the function below as we move foward.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dCpZPYKGij"}],"key":"QxyqK8tK6e"}],"key":"xAPn6fMKXC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def bearing_between_points_ellps(start_point=None, end_point=None):\n    geodesic = Geod(ellps=\"WGS84\")\n    fwd_bearing, _, _ =  geodesic.inv(location_df.loc[start_point, \"longitude\"],\n                                        location_df.loc[start_point, \"latitude\"],\n                                        location_df.loc[end_point, \"longitude\"],\n                                        location_df.loc[end_point, \"latitude\"])\n    return fwd_bearing","key":"kRbxVaVCOL"},{"type":"output","id":"X0Gz037T2izMHDt0VUHeo","data":[],"key":"veJqag7oIT"}],"key":"vdpqF5MnIn"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Because of the slightly flattened shape of an ellipsoid compared to a sphere, the bearing can also vary depending on if you are calculating bearing on a unit sphere or a ellipsoid:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JLtHFSz2TD"}],"key":"hfYksNruVh"}],"key":"qqmU7R3EZR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"### Compare Unit Sphere and Ellipsoid\nbeaing_ellps = bearing_between_points_ellps(\"boulder\", \"boston\")\nprint(f\"forward bearing between coordinates (ellipsoid)   = {beaing_ellps} Degrees\")\nbearing_us = bearing_between_points_unit_sphere(\"boulder\", \"boston\")\nprint(f\"forward bearing between coordinates (unit sphere) = {bearing_us} Degrees\")","key":"mFRANbQYdW"},{"type":"output","id":"SgexOWwKsI7n9LkBbn3fe","data":[{"output_type":"stream","name":"stdout","text":"forward bearing between coordinates (ellipsoid)   = 73.51048829569022 Degrees\nforward bearing between coordinates (unit sphere) = 73.49180375272644 Degrees\n"}],"key":"lq7WD17pQV"}],"key":"fnPoFD67hz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Generating a Great Circle Arc with Intermediates Points","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GzQH7KmWno"}],"identifier":"generating-a-great-circle-arc-with-intermediates-points","label":"Generating a Great Circle Arc with Intermediates Points","html_id":"generating-a-great-circle-arc-with-intermediates-points","implicit":true,"key":"AzaM9N5Gl6"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now we have calculated both the length of a great circle arc as well as its bearing. Now we can begin to add additional points along the arc. These intermediate points will lie along the great circle arc and can be calculated as the fractional distance laong the arc (for example, a point for every 10th of the arc).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TV2ROf6ytg"}],"key":"ylKGXU3Bfy"}],"key":"B3usy2E7vH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine Intermediate Points Mathemetically via Unit Sphere (Fractional Distance)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MfXJVScsLb"}],"identifier":"determine-intermediate-points-mathemetically-via-unit-sphere-fractional-distance","label":"Determine Intermediate Points Mathemetically via Unit Sphere (Fractional Distance)","html_id":"determine-intermediate-points-mathemetically-via-unit-sphere-fractional-distance","implicit":true,"key":"k4hCZPgOen"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Along a unit sphere, we can calculate each intermediate point as a fractional distance along the arc. We can determine the points as a given fraction of a distance (","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"l8h60xDMqp"},{"type":"inlineCode","value":"d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IOetIgj5Bi"},{"type":"text","value":") between a starting points A (latA, lonA) and the final point B (latB, lonB) where ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Pn5Bja6DUm"},{"type":"inlineCode","value":"f","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Pk0ri5JJwo"},{"type":"text","value":" is a fraction along the great circle arc. As a result, Point A is at","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JkufF91HoG"},{"type":"inlineCode","value":"f=0","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"exNPL54fEo"},{"type":"text","value":" and Point B sits at","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CUsXU68YER"},{"type":"inlineCode","value":"f=1","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"P81jEdfwjv"},{"type":"text","value":" along the arc.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"q4noUhXy9k"}],"key":"HiT41j8WRo"},{"type":"blockquote","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Note: The points must not lie on exact opposite sides of a sphere (antipodal), otherwise, the path is undefined because f=0=1","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Q7cYQbQSxA"}],"key":"JYEt1uHNOO"}],"key":"eBLPNRdKHd"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Where, antipodal is defined by:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"VAYoFvpMPV"}],"key":"UBU1ZalcKM"},{"type":"math","value":"latA + latB = 0","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"tight":true,"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo>+</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">latA + latB = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span>","enumerator":"6","key":"Sl1B2KQNF8"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"AVGJbAZFmr"}],"key":"So8t1WXphY"},{"type":"math","value":"abs(lonA - lonB) = pi","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"tight":"before","html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mi>b</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>A</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>p</mi><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">abs(lonA - lonB) = pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">ab</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">i</span></span></span></span></span>","enumerator":"7","key":"KBwCLlaRVy"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Where the distance between two points is the angular distance:","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"XJSVR3XBTe"}],"key":"xPDaMRdyC0"},{"type":"math","value":"d = \\frac{\\text{total distance of arc}}{\\text{earth's radius}}","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>d</mi><mo>=</mo><mfrac><mtext>total distance of arc</mtext><mtext>earth’s radius</mtext></mfrac></mrow><annotation encoding=\"application/x-tex\">d = \\frac{\\text{total distance of arc}}{\\text{earth&#x27;s radius}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0574em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">earth’s radius</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">total distance of arc</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>","enumerator":"8","key":"VwG0nRLSuV"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"The intermediate points (lat, lon) along a given path starting point to end point:","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"qgCqOYV4O0"}],"key":"y6Q9dibBBK"},{"type":"math","value":"A = sin(\\frac{(1-f) * d}{sin(d)}","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>d</mi></mrow><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">A = sin(\\frac{(1-f) * d}{sin(d)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>","enumerator":"9","key":"ULsVoRxRHg"},{"type":"math","value":"B = \\frac{sin(f*d)}{sin(d)}","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>B</mi><mo>=</mo><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo>∗</mo><mi>d</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">B = \\frac{sin(f*d)}{sin(d)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>","enumerator":"10","key":"duCTwemdgI"},{"type":"math","value":"x = A * cos(latA) * cos(lonA) + B * cos(latB) * cos(lonB)","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>x</mi><mo>=</mo><mi>A</mi><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>B</mi><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x = A * cos(latA) * cos(lonA) + B * cos(latB) * cos(lonB)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"11","key":"HbHeUUFdz3"},{"type":"math","value":"y = A * cos(latA) * sin(lonA) + B * cos(latB) * sin(lonB)","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>A</mi><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>B</mi><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y = A * cos(latA) * sin(lonA) + B * cos(latB) * sin(lonB)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"12","key":"iLx8b3iEJk"},{"type":"math","value":"z = A * sin(latA) + B * sin(latB)","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>z</mi><mo>=</mo><mi>A</mi><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>B</mi><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">z = A * sin(latA) + B * sin(latB)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"13","key":"yUkzisudte"},{"type":"math","value":"lat = atan2(z, \\sqrt{x^2 + y^2})","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>a</mi><mi>t</mi><mo>=</mo><mi>a</mi><mi>t</mi><mi>a</mi><mi>n</mi><mn>2</mn><mo stretchy=\"false\">(</mo><mi>z</mi><mo separator=\"true\">,</mo><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow></msqrt><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">lat = atan2(z, \\sqrt{x^2 + y^2})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2567em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">an</span><span class=\"mord\">2</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0067em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9667em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2333em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"14","key":"sIz4DibxTS"},{"type":"math","value":"lon = atan2(y, x)","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>n</mi><mo>=</mo><mi>a</mi><mi>t</mi><mi>a</mi><mi>n</mi><mn>2</mn><mo stretchy=\"false\">(</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">lon = atan2(y, x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">an</span><span class=\"mord\">2</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"15","key":"z7V1U3KSSJ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":25,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"link","url":"https://edwilliams.org/avform147.htm#Intermediate","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Ed Williams: Intermediate Points on a Great Circle","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"NvmoZzgqH8"}],"urlSource":"https://edwilliams.org/avform147.htm#Intermediate","key":"rPj7cDdVu2"}],"key":"kG8LrcXWtH"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"link","url":"https://www.movable-type.co.uk/scripts/latlong.html#intermediate-point","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Moveable Type: Intermediate Point","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"brD7zOzMHB"}],"urlSource":"https://www.movable-type.co.uk/scripts/latlong.html#intermediate-point","key":"IAPpcphRgP"}],"key":"TznOrsIGkj"}],"key":"Vm9SYevq01"},{"type":"paragraph","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Let’s translate this math into Python code:","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"eyoSfumGZ4"}],"key":"sV4gDy3Fnq"}],"key":"BpyTFHZpAv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def intermediate_points(start_point=None, end_point=None,\n                        fraction=None, distance=None):\n    # Calculates the position of an intermediate point based on its fractional position along an arc defined from Point A to Point B\n    earth_radius = 6378137  # meters\n    total_distance = distance / earth_radius\n    latA = np.deg2rad(location_df.loc[start_point, \"latitude\"])\n    lonA = np.deg2rad(location_df.loc[start_point, \"longitude\"])\n    latB = np.deg2rad(location_df.loc[end_point, \"latitude\"])\n    lonB = np.deg2rad(location_df.loc[end_point, \"longitude\"])\n\n    A = np.sin((1-fraction) * total_distance) / np.sin(total_distance)\n    B = np.sin(fraction * total_distance) / np.sin(total_distance)\n    x = (A * np.cos(latA) * np.cos(lonA)) + (B * np.cos(latB) * np.cos(lonB))\n    y = (A * np.cos(latA) * np.sin(lonA)) + (B * np.cos(latB) * np.sin(lonB))\n    z = (A * np.sin(latA)) + (B * np.sin(latB))\n    lat = np.arctan2(z, np.sqrt(x**2 + y**2))\n    lon = np.arctan2(y, x)\n    return (float(np.rad2deg(lat)), float(np.rad2deg(lon)))\n\ndef calculate_intermediate_pts(start_point=None, end_point=None,\n                               fraction=None, total_distance_meter=None):\n    # returns a list of intermediate points along the arc seperated by a specific fraction\n    fractions = np.arange(0, 1+fraction, fraction)\n    intermediate_lat_lon = []\n    for fractional in fractions:\n        intermediate_pts = intermediate_points(start_point, end_point,\n                                                fractional, total_distance_meter)\n        intermediate_lat_lon.append(intermediate_pts)\n    return intermediate_lat_lon","key":"Bi6eZ64AdP"},{"type":"output","id":"csXtqWi2LkYcbPTgIMwcd","data":[],"key":"YshzNZ6rVv"}],"key":"iqsrFbluH1"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine Intermediate Points via Python Package ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hOSJQVTTyt"},{"type":"inlineCode","value":"pyproj","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jXtmC4Y7gS"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QoAUyzKmx5"},{"type":"inlineCode","value":"geopy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"A2wCxHOyBb"}],"identifier":"determine-intermediate-points-via-python-package-pyproj-and-geopy","label":"Determine Intermediate Points via Python Package pyproj and geopy","html_id":"determine-intermediate-points-via-python-package-pyproj-and-geopy","implicit":true,"key":"gpKKAoXwfO"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"However, there is a strong advantage when you the Python libraries ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"STzWdP3jg8"},{"type":"inlineCode","value":"pyproj","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pWVmW4sEUn"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vKC0Bc9b1E"},{"type":"inlineCode","value":"geopy","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yieJmNTbpB"},{"type":"text","value":". Not only can you use an ellipsoid instead of a sphere, you can also interpolate points along an arc in additional ways:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"q4IxQgdFc4"}],"key":"W76hhNirzb"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"A fractional distance laong the arc (for example, a point for every 10th of the arc)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fDOZ0AALuB"}],"key":"KyfKAbPd37"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"A known distance along the arc (for example, a point ever 100 meters)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"FqkLKRvfx2"}],"key":"AlhHjFoHCe"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"An equal amount of points (for example, adding 6 intermediate points which are equally spaced along the arc)","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"R4tH0fFHDH"}],"key":"d8rXovc2vW"}],"key":"okKTVjqKMv"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Below you will see how we can use one function ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"JqaYi1ML7S"},{"type":"inlineCode","value":"interpolate_points_along_gc","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"fStGA6qcFG"},{"type":"text","value":" to be able to solve for all three possible types of intermediate points. The function will use both the starting and ending coordinates (Point A to Point B) and a distance you’d like to have between each point.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"scQCLilVGa"}],"key":"Mc0ebnVPTx"}],"key":"nJWB4CAPX6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def interpolate_points_along_gc(lat_start,\n                                lon_start,\n                                lat_end,\n                                lon_end,\n                                distance_between_points_meter): \n    # Interpolate intermediate points along an arc wtih a given distance between each point\n    lat_lon_points = [(float(lat_start), float(lon_start))]\n    \n    # move to next point when distance between points is less than the equal distance\n    move_to_next_point = True\n    while(move_to_next_point):\n        forward_bearing, _, distance_meters = geodesic.inv(lon_start,\n                                                            lat_start, \n                                                            lon_end,\n                                                            lat_end)\n        if distance_meters < distance_between_points_meter:\n            # ends before overshooting\n            move_to_next_point = False\n        else:\n            start_point = geopy.Point(lat_start, lon_start)\n            distance_to_move = geopy.distance.distance(\n                            kilometers=distance_between_points_meter /\n                            1000)  # distance to move towards the next point\n            final_position = distance_to_move.destination(\n                            start_point, bearing=forward_bearing)\n            lat_lon_points.append((float(final_position.latitude), float(final_position.longitude)))\n            # new starting position is newly found end position\n            lon_start, lat_start = final_position.longitude, final_position.latitude\n    lat_lon_points.append((float(lat_end), float(lon_end)))\n    return lat_lon_points","key":"UmQLgB6Ukr"},{"type":"output","id":"8ZofHNWyeBv1EuGhlMyeS","data":[],"key":"m8WKx5iHZm"}],"key":"rA7Z1JoZUi"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Interpolate with N Total Equally Spaced Points","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u2WNj9X8m2"}],"identifier":"interpolate-with-n-total-equally-spaced-points","label":"Interpolate with N Total Equally Spaced Points","html_id":"interpolate-with-n-total-equally-spaced-points","implicit":true,"key":"BrXlU9K3jB"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Imagine we are flying a plane with a set amount of gas and will need to make 10 stops along our path to refuel from Boulder to Boston. If we need to stop 10 times (imagine that there is a refueling station wherever we stop) then we can interpolate along our path with 10 additional points","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mWogTRRiMj"}],"key":"uEwv33wy7X"}],"key":"hrCdRIqKPy"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"n_total_points = 10 # total points (n points)\n\n# Calculate the distance between Point A (Boulder) and Point B (Boston)\ndistance_meter = distance_pyproj(\"boulder\", \"boston\")\nprint(f\"Total distance from Boulder to Boston = {distance_meter/1000} km\")\n\ndistance_between_points_meter = distance_meter / (n_total_points + 1)\nprint(f\"Each of the {n_total_points} points will be separated by {distance_between_points_meter} meters ({distance_between_points_meter/1000} km)\")","key":"pU1lloz2Ub"},{"type":"output","id":"MVF_Win-FadIgfnJL5Jne","data":[{"output_type":"stream","name":"stdout","text":"Total distance from Boulder to Boston = 2862.5974799145215 km\nEach of the 10 points will be separated by 260236.13453768377 meters (260.23613453768377 km)\n"}],"key":"WWHEP5kWjQ"}],"key":"AhswuFdCc7"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Excellent! Now that we know the distances between each of the 10 equally spaced points we can use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Vn5PggO1Fk"},{"type":"inlineCode","value":"interpolate_points_along_gc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"labsas6Bax"},{"type":"text","value":" to find a list of interpolated points. Note that will be 12 total points, 10 intermediate points and 1 for each the starting and ending position.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kv4UmcE86w"}],"key":"xBz0giRdTJ"}],"key":"JGUoOaUEdk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"lat_start, lon_start = location_df.loc[[\"boulder\"]][\"latitude\"].iloc[0], location_df.loc[[\"boulder\"]][\"longitude\"].iloc[0]\nlat_end, lon_end = location_df.loc[[\"boston\"]][\"latitude\"].iloc[0], location_df.loc[[\"boston\"]][\"longitude\"].iloc[0]\n\ninterpolated_pts = interpolate_points_along_gc(lat_start,\n                                          lon_start,\n                                          lat_end,\n                                          lon_end,\n                                          distance_between_points_meter)\nprint(f\"{len(interpolated_pts)} Total Points\")\nprint(f\"List of Interpolated Points:\\n{interpolated_pts}\")","key":"q65boC44g8"},{"type":"output","id":"qbMm4rEL-JVWaZokBh6Bz","data":[{"output_type":"stream","name":"stdout","text":"12 Total Points\nList of Interpolated Points:\n[(40.015, -105.2705), (40.64283438472448, -102.32002071588883), (41.19386139956729, -99.31719425393653), (41.665293789240074, -96.2672998277903), (42.05464865958041, -93.17653047007545), (42.35980367525435, -90.05192021556942), (42.579048241302566, -86.9012334462751), (42.71112689737456, -83.73281874084786), (42.75527239726804, -80.5554326250441), (42.711226442193585, -77.37804142647055), (42.579246749547636, -74.20961159223961), (42.3601, -71.0589)]\n"}],"key":"l0fCgb110z"}],"key":"whSvbUBgEm"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Arcs as Points on a World Map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"i2Yvx638fs"}],"identifier":"plot-arcs-as-points-on-a-world-map","label":"Plot Arcs as Points on a World Map","html_id":"plot-arcs-as-points-on-a-world-map","implicit":true,"key":"ZbgEEIRVDW"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The easiest way to understand how these interpolated points will look along an arc is to plot them. To be able to reuse this plotting structure in multiple examples below we will encompass the plot into a simple function which takes in a string for the plot’s title and a list of coordinates (which will include Point A at the start and Point B at the end)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"S8vXnihizx"}],"key":"WApYEphHzq"}],"key":"BdHsAVHnCI"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def plot_coordinate(lst_of_coords=None, title=None):\n    # Set up world map plot on the United States\n    fig = plt.subplots(figsize=(15, 10))\n    projection_map = ccrs.PlateCarree()\n    ax = plt.axes(projection=projection_map)\n    lon_west, lon_east, lat_south, lat_north = -130, -60, 20, 60\n    ax.set_extent([lon_west, lon_east, lat_south, lat_north], crs=projection_map)\n    ax.coastlines(color=\"black\")\n    ax.add_feature(cfeature.STATES, edgecolor=\"black\")\n    \n    # Plot Latitude/Longitude Coordinates\n    longitudes = [x[1] for x in lst_of_coords] # longitude\n    latitudes = [x[0] for x in lst_of_coords] # latitude\n    plt.plot(longitudes, latitudes)\n    plt.scatter(longitudes, latitudes)\n    \n    # Setup Axis Limits and Title/Labels\n    plt.title(title)\n    plt.show()","key":"mXiumhXiMr"},{"type":"output","id":"REXDSZ8H8RoXqu-AxpZhh","data":[],"key":"mOZ64teZ6W"}],"key":"FIkt6CZPVZ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now, let’s plot those 10 equally spaced points!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"J2jYvprfEn"}],"key":"q2fdv9y3D9"}],"key":"uSbdTcP1W3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_coordinate(intermediate_geodesic,\n                title=f\"Interpolate {n_total_points} Equally Spaced Points\")","key":"yvpzhny72y"},{"type":"output","id":"Y0zdN2MMR8-p12Ij6-GlW","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mNameError\u001b[39m                                 Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[21]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m plot_coordinate(\u001b[43mintermediate_geodesic\u001b[49m,\n\u001b[32m      2\u001b[39m                 title=\u001b[33mf\u001b[39m\u001b[33m\"\u001b[39m\u001b[33mInterpolate \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mn_total_points\u001b[38;5;132;01m}\u001b[39;00m\u001b[33m Equally Spaced Points\u001b[39m\u001b[33m\"\u001b[39m)\n\n\u001b[31mNameError\u001b[39m: name 'intermediate_geodesic' is not defined","ename":"NameError","evalue":"name 'intermediate_geodesic' is not defined"}],"key":"XDDNu4fJMz"}],"key":"wFzTEuj3qP"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Looking good! Alright, let’s move along to interpolate based on a known distance","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"O7aSPRyCOQ"}],"key":"gJfk92QVqp"}],"key":"JO1sch8eQU"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Interpolate every N meters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WymBrD7vDj"}],"identifier":"interpolate-every-n-meters","label":"Interpolate every N meters","html_id":"interpolate-every-n-meters","implicit":true,"key":"aDjsj4yc1U"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A plane has a fuel tank that can hold a known amount of gas, what if instead we wanted to known how far we need to refuel, but now in meters? Let’s say we hold a gas tank that can hold enough fuel to get 112 km, how many times will we need to stop and where along would those stops appear?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kTejiDQzS3"}],"key":"FfL4pZD7Fc"}],"key":"MfGAaqpTOx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"distance_between_points_meter = 112000 # 122.0 km\nprint(f\"Each point will be separated by {distance_between_points_meter} meters ({distance_between_points_meter/1000} km)\")","key":"ch9TFnK8Yt"},{"type":"output","id":"LmDFTWEduHE-A0PX95yp-","data":[],"key":"Bch3Tzs0ui"}],"key":"cBv49k4Kq5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"lat_start, lon_start = location_df.loc[\"boulder\", \"latitude\"], location_df.loc[\"boulder\", \"longitude\"]\nlat_end, lon_end = location_df.loc[\"boston\", \"latitude\"], location_df.loc[\"boston\", \"longitude\"]\n\ninterpolated_pts = interpolate_points_along_gc(lat_start,\n                                          lon_start,\n                                          lat_end,\n                                          lon_end,\n                                          distance_between_points_meter)\nprint(f\"{len(interpolated_pts)} Total Points\")\nprint(f\"List of Interpolated Points:\\n{interpolated_pts}\")","key":"Dr9PAM7bWd"},{"type":"output","id":"UzJAfgSPNimK1-xaCdRjM","data":[],"key":"i5OMwvsHNp"}],"key":"JxZEJulHXd"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_coordinate(interpolated_pts,\n                title=f\"Interpolate every {distance_between_points_meter/1000} km\")","key":"DTqQ8UaeW7"},{"type":"output","id":"3qJUJ5EBshq8y8tAQXM29","data":[],"key":"XlsZUIMsJa"}],"key":"JiobDSptpS"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"That’s a lot of stop! Ok, now we can return to a familiar system. We can use this same system to also determine fractional distances as well!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Cqho33ca4F"}],"key":"xYWlhLoFrX"}],"key":"DaegHC6hnC"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Interpolate a fractional distance along arc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LnX8fs7wqg"}],"identifier":"interpolate-a-fractional-distance-along-arc","label":"Interpolate a fractional distance along arc","html_id":"interpolate-a-fractional-distance-along-arc","implicit":true,"key":"AW9QcZjH8j"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"crossReference","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Above","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qQ01lsiO69"}],"identifier":"determine-intermediate-points-mathemetically-via-unit-sphere-fractional-distance","label":"determine-intermediate-points-mathemetically-via-unit-sphere-fractional-distance","kind":"heading","template":"{name}","resolved":true,"html_id":"determine-intermediate-points-mathemetically-via-unit-sphere-fractional-distance","key":"KVym5kCKpY"},{"type":"text","value":" we calculated how to find intermediate points as a fractional distance along an arc. We can now return to this, but with the advantages of using an ellipsoid! Let’s try this method and interpolate points every 10th of an arc.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Gf2RxqLqta"}],"key":"QfElENxpW3"}],"key":"fDZ0dxvEjG"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fraction = 1/10","key":"htUU4KdQxI"},{"type":"output","id":"nXVTIQBlvMrnWSEg5mOrQ","data":[],"key":"M4Q2ECqP2V"}],"key":"btBCpgrRUc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"distance_between_points_meter = fraction * distance_meter\nprint(f\"Interpolate for every {fraction} of the arc\")\nprint(f\"Each point will be separated by {distance_between_points_meter} meters ({distance_between_points_meter/1000} km)\")","key":"nptDvyrmUw"},{"type":"output","id":"7JckIgFDcZ1CbgqBlBs0P","data":[],"key":"lBhBelcMdS"}],"key":"Nfk1aUeFL6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"lat_start, lon_start = location_df.loc[\"boulder\", \"latitude\"], location_df.loc[\"boulder\", \"longitude\"]\nlat_end, lon_end = location_df.loc[\"boston\", \"latitude\"], location_df.loc[\"boston\", \"longitude\"]\n\ninterpolated_pts = interpolate_points_along_gc(lat_start,\n                                          lon_start,\n                                          lat_end,\n                                          lon_end,\n                                          distance_between_points_meter)\nprint(f\"{len(interpolated_pts)} Total Points\")\nprint(f\"List of Interpolated Points:\\n{interpolated_pts}\")","key":"OPmUilvY5c"},{"type":"output","id":"1WC-kV_v7yDosBao8Opjz","data":[],"key":"NDNQmj9UGo"}],"key":"Idw5gCJPA0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_coordinate(interpolated_pts,\n                title=f\"(Ellipsoid) Interpolate every {fraction}th of the arc\")","key":"nwhrCYwNfp"},{"type":"output","id":"TZ9aNEtbjdBalPINz4_NP","data":[],"key":"vu8cJX8Su3"}],"key":"yNuzZETSqE"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can now compare both the ellipsoid and spherical model. First, let’s plot the same fractional distance along the unit sphere:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wvblBrmHRk"}],"key":"k3lYZgzFkq"}],"key":"hrNpes7tx8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"distance_unit_sphere_default = distance_between_points_default(\"boulder\", \"boston\")\nintermediate_unit_sphere = calculate_intermediate_pts(\"boulder\", \"boston\",\n                                               fraction, distance_unit_sphere_default)\nprint(f\"{len(intermediate_unit_sphere)} Total Points\")\nprint(f\"List of Interpolated Points:\\n{intermediate_unit_sphere}\")","key":"uLNVOtZqMo"},{"type":"output","id":"0-aTtbCeHPkO_txOFNgsT","data":[],"key":"kyhlTzskuP"}],"key":"Ir1maJgbtB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_coordinate(intermediate_unit_sphere,\n                title=f\"(Unit Sphere) Interpolate every {fraction}th of the arc\")","key":"KKLb2lQnva"},{"type":"output","id":"y53JGybMGxmK2bGajohNg","data":[],"key":"EEYoOR2avE"}],"key":"bJGuyymxho"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The difference between the ellipsoid and the sphere will become more apparently as intermediate points along the arc are shifted to new positions based on whether or not it is a sphere.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MtunPoYPiU"}],"key":"Ae5XXkLTmH"}],"key":"QFuQsFCzBv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Compare Unit Sphere and Ellipsoid\nfor i in range(len(interpolated_pts)):\n    _, _, distance_m = geodesic.inv(interpolated_pts[i][0], interpolated_pts[i][1],\n                                   intermediate_unit_sphere[i][0], intermediate_unit_sphere[i][1])\n    if np.isnan(distance_m): distance_m = 0\n    print(f\"Difference in distance between ellipsoid/unit sphere at point {i}: {distance_m} meters\")","key":"Fbkjxx2BOY"},{"type":"output","id":"fjLs2XtrZtpi1qo_tEIfJ","data":[],"key":"upHC0NBaeA"}],"key":"NZJ8EEOA6Q"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine the Midpoint of a Great Circle Arc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NBKZJA0lpH"}],"identifier":"determine-the-midpoint-of-a-great-circle-arc","label":"Determine the Midpoint of a Great Circle Arc","html_id":"determine-the-midpoint-of-a-great-circle-arc","implicit":true,"key":"CZsPWAso3D"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The advantage of using fractional distances it is make it simple to find the midpoint along the arc. The midpoint of an arc can be determined as a fractional distance along an arc where ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HA49Fva8zU"},{"type":"inlineCode","value":"f = 0.5","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Srm2QajvHa"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mlWsDKgIGY"}],"key":"nximoo4XqF"}],"key":"y8ciizTqSR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"distance_meter = distance_pyproj(\"boulder\", \"boston\")\n\n# Distance along the arc where the midpoint lies:\nmidpoint = distance_meter / 2","key":"cXeIOCTIg6"},{"type":"output","id":"f0wv-TUeJATM-u_VaEzdC","data":[],"key":"bzUC0vzrzD"}],"key":"oJP5es3379"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"lat_start, lon_start = location_df.loc[\"boulder\", \"latitude\"], location_df.loc[\"boulder\", \"longitude\"]\nlat_end, lon_end = location_df.loc[\"boston\", \"latitude\"], location_df.loc[\"boston\", \"longitude\"]\n\ninterpolated_pts = interpolate_points_along_gc(lat_start,\n                                          lon_start,\n                                          lat_end,\n                                          lon_end,\n                                          midpoint)\nprint(f\"{len(interpolated_pts)} Total Points\")\nprint(f\"List of Interpolated Points:\\n{interpolated_pts}\")\nprint(f\"Midpoint = {intermediate_geodesic[1]}\")","key":"rZ1pr222Rl"},{"type":"output","id":"mfHbm0nDA97VeVpIV72G7","data":[],"key":"Kj2F6Fzt1p"}],"key":"jAK8DmC69r"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Ok, let’s compare the midpoint along the ellipsoid and the unit sphere:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"C5w8Tk7ILn"}],"key":"p88kQTHSiS"}],"key":"ZFUVIJFRLw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"distance_unit_sphere_default = distance_between_points_default(\"boulder\", \"boston\")\nintermediate_unit_sphere = calculate_intermediate_pts(\"boulder\", \"boston\",\n                                               1/2, distance_unit_sphere_default)\nprint(f\"{len(intermediate_unit_sphere)} Total Points\")\nprint(intermediate_unit_sphere)\nprint(f\"Midpoint = {intermediate_unit_sphere[1]}\")","key":"HvMVA3ES8K"},{"type":"output","id":"CMlafONEo_55HxKpYQC2d","data":[],"key":"Ypc9RyMjwB"}],"key":"hk0qoXa9oC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Compare geodesic and unit sphere\n_, _, distance_m = geodesic.inv(intermediate_geodesic[1][0], intermediate_geodesic[1][1],\n                                   intermediate_unit_sphere[1][0], intermediate_unit_sphere[1][1])\nprint(f\"Distance between unit sphere and ellipsoid's midpoints = {distance_m} meters\")","key":"ACBSUeEs3P"},{"type":"output","id":"geH-5IbcuwRB0_SJi3vPe","data":[],"key":"eMx7tX1MGc"}],"key":"Sdic39TFpm"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"132 meters isn’t very far when you are working with something as large as the Earth, but that is more than an entire football field away from eachother!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kL2sCdaHv6"}],"key":"aJEfrYNZnW"}],"key":"oXGb5tdCJH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Generate a Great Circle Path","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YOnQhNIMMS"}],"identifier":"generate-a-great-circle-path","label":"Generate a Great Circle Path","html_id":"generate-a-great-circle-path","implicit":true,"key":"pLt9QKNEJA"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A great circle arc is the arc formed between two points along the surface of a sphere. So far, this is all we’ve focused on. However, imagine if you extending that arc in the same bearing all the way around the globe until you returned back to your starting position. This is known as a great circle path.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"I8IVm6WtNr"}],"key":"K5NWcRTmDT"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The great circle path can be used to determine where (at what latitude/longtiude) a great circle would cross a given parallel as well as illustrate how the plane cutting through the globe that is used to form a great circle.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"uxuMxhogp4"}],"key":"xcG7fA4X94"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Because a great circle path will move from -180 degrees to 180 degrees longitude, then all we need to know is what the latitude at each point would be. A a valid great circle path only exists if:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"YxSf6fjsqV"}],"key":"H3CcUDo5kv"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Point A and Point B are not meridians (at the same longitude, directly above or below each other)","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"n9DEwcvYW9"}],"key":"xoGnW0gQ8C"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Point A and Point B are not Antipodal (exactly on opposite sides of the globe)","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"jjwi1S6UuS"}],"key":"tPo1a1L9kR"}],"key":"EMkTLvN5xY"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Otherwise, the great circle path is considered undefined.","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"GcEIkOUsM8"}],"key":"admc1RV4jl"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"To do this, we will generate a list of longitude points from -180 to 180 degrees. By default, this will be 360 total points, 1 point for each degree longitude. Then, since we know the starting and ending point, we can determine the latitude for any longitude point (","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"y6L1M7wwGE"},{"type":"inlineCode","value":"lon","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"fccEiJVWNe"},{"type":"text","value":") along the great circle path generated from a great circle arc (from Point A to Point B):","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"whie5Xif1M"}],"key":"ryDUBnwigf"},{"type":"math","value":"\\text{latitude} = atan(\\frac{sin(latA)*cos(latB)*sin(lon-lonB)-sin(latB)*cos(latA)*sin(lon-lon1)}{cos(latA)*cos(latB)*sin(lonA-lonB)})","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>latitude</mtext><mo>=</mo><mi>a</mi><mi>t</mi><mi>a</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>n</mi><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>A</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>n</mi><mi>B</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{latitude} = atan(\\frac{sin(latA)*cos(latB)*sin(lon-lonB)-sin(latB)*cos(latA)*sin(lon-lon1)}{cos(latA)*cos(latB)*sin(lonA-lonB)})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">latitude</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">an</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">tB</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">in</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span></span></span></span>","enumerator":"16","key":"F0GNZnvekQ"},{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"link","url":"https://edwilliams.org/avform147.htm#Int","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"See more: Latitude of point on GC","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"JKA48z5kuw"}],"urlSource":"https://edwilliams.org/avform147.htm#Int","key":"eVlNSTyanj"}],"key":"Yo1mL69SME"}],"key":"eSyoSJGnGZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Find Latitude Coordiante based on a Longitude Coordinate and a Great Circle Arc formed by Point A (start) to Point B (end)\ndef generate_latitude_along_gc(start_point=None, end_point=None, number_of_lon_pts=360):\n    # Generate a list of latitude coordinates for the great circle path\n\n    # First convert each point to radians (to work with sin/cos)\n    lat1 = np.deg2rad(location_df.loc[start_point, \"latitude\"])\n    lon1 = np.deg2rad(location_df.loc[start_point, \"longitude\"])\n    lat2 = np.deg2rad(location_df.loc[end_point, \"latitude\"])\n    lon2 = np.deg2rad(location_df.loc[end_point, \"longitude\"])\n\n    # Verify not meridian (longitude passes through the poles)\n    # If points lie at the same longitude, alert user and return a totally linear path\n    if np.sin(lon1 - lon2) == 0:\n        print(\"Invalid inputs: start/end points are meridians\")\n        # plotting meridians at 0 longitude through all latitudes\n        meridian_lat = np.arange(-90, 90, 180/len(longitude_lst)) # split in n number\n        meridians = []\n        for lat in meridian_lat:\n            meridians.append((lat, 0))\n        return meridians\n\n    # verify not antipodal (diametrically opposite points)\n    if lat1 + lat2 == 0 and abs(lon1-lon2) == np.pi:\n        # if points are anitpodal, alert user and return empty list\n        print(\"Invalid inputs: start/end points are antipodal\")\n        return []\n\n    # generate N total number of longitude points along the great circle\n    # Similiar code in R: https://github.com/rspatial/geosphere/blob/master/R/greatCircle.R#L18C3-L18C7\n    gc_lon_lst = []\n    for lon in range(1, number_of_lon_pts+1):\n        new_lon = (lon  * (360/number_of_lon_pts) - 180)\n        gc_lon_lst.append(np.deg2rad(new_lon))\n\n    # Intermediate points on a great circle: https://edwilliams.org/avform147.htm#Int\n    # Equation 22\n    gc_lat_lon = []\n    for gc_lon in gc_lon_lst:\n        num = np.sin(lat1)*np.cos(lat2)*np.sin(gc_lon-lon2)-np.sin(lat2)*np.cos(lat1)*np.sin(gc_lon-lon1)\n        den = np.cos(lat1)*np.cos(lat2)*np.sin(lon1-lon2)\n        new_lat = np.arctan(num/den)\n        # convert back to degrees and save latitude/longitude pair\n        gc_lat_lon.append((np.rad2deg(new_lat), np.rad2deg(gc_lon)))\n    return gc_lat_lon","key":"miZ04wUh6w"},{"type":"output","id":"i73-N3NzMTvHS1eHcqunF","data":[],"key":"t9M7n78Iex"}],"key":"lDtuVrMfuT"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now we have a great circle arc (formed from Point A to Point B) and a list of possible longitude values (from -180 to 180 degrees). With ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IlNzuTGXfo"},{"type":"inlineCode","value":"generate_latitude_along_gc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I6kgwyuIfy"},{"type":"text","value":" we can generate a full list of latitude/longitude pairs for the entire great circle path!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yUDvTx2Qpz"}],"key":"gtOTN8Mc0b"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To plot both the great circle arc and the great circle path, we will use ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RVDzanBefp"},{"type":"inlineCode","value":"arc_points","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"V8AqiiZh5E"},{"type":"text","value":" to get a list of the great circle arc positions and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PvFBInE8Dx"},{"type":"inlineCode","value":"generate_latitude_along_gc","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"I9eJ2gJ9m5"},{"type":"text","value":" to get a list of the points along the great circle path. There will be obvious overlap for the small section of the path that contains the arc.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mPGtdo5R3z"}],"key":"JUDkMHpQVr"}],"key":"PgtRwcUwJh"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def arc_points(start_lat=None,\n               start_lon=None,\n               end_lat=None,\n               end_lon=None,\n               n_total_points=10):\n    _, _, distance_meter =  geodesic.inv(start_lon,\n                                        start_lat,\n                                        end_lon,\n                                        end_lat)\n        \n    distance_between_points_meter = distance_meter / (n_total_points + 1)\n\n    \n    points_along_arc = interpolate_points_along_gc(start_lat,\n                                              start_lon,\n                                              end_lat,\n                                              end_lon,\n                                              distance_between_points_meter)\n    return points_along_arc","key":"XY3tHgq9Ty"},{"type":"output","id":"lsGWWvpuDa41mebUWnPbh","data":[],"key":"oUveQRbBMF"}],"key":"FBqRjRqulV"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Time to plot! To keep it simple ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MskQ2iKLGJ"},{"type":"inlineCode","value":"plot_coordinates","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"g2I8k9ycfF"},{"type":"text","value":" will take in a list of points along the great circle path with a starting and ending point (Point A and B) and internally generate a list of points for the great circle arc.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WVYYsYamut"}],"key":"xhtax5036o"}],"key":"P42b65FU1q"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def plot_coordinate(lat_lon_lst=None,\n                    start_point=None, end_point=None,\n                    title=None):\n    # Set up world map plot\n    fig = plt.subplots(figsize=(15, 10))\n    projection_map = ccrs.PlateCarree()\n    ax = plt.axes(projection=projection_map)\n    lon_west, lon_east, lat_south, lat_north = -180, 180, -90, 90\n    ax.set_extent([lon_west, lon_east, lat_south, lat_north], crs=projection_map)\n    ax.coastlines(color=\"black\")\n    ax.add_feature(cfeature.BORDERS, edgecolor='grey')\n    ax.add_feature(cfeature.STATES, edgecolor=\"grey\")\n        \n    # Get list of points along the great circle path (in blue)\n    longitudes = [x[1] for x in lat_lon_lst] # longitude\n    latitudes = [x[0] for x in lat_lon_lst] # latitude\n    plt.plot(longitudes, latitudes, c=\"cornflowerblue\")\n    plt.scatter(longitudes, latitudes, c=\"cornflowerblue\")\n\n    # Generate a great circle arc from the starting to ending point (in red)\n    start_end_lat_lon = arc_points(location_df.loc[start_point, \"latitude\"],\n                                   location_df.loc[start_point, \"longitude\"],\n                                   location_df.loc[end_point, \"latitude\"],\n                                   location_df.loc[end_point, \"longitude\"],\n                                   n_total_points=20)\n    longitudes = [x[1] for x in start_end_lat_lon] # longitude\n    latitudes = [x[0] for x in start_end_lat_lon] # latitude\n    plt.plot(longitudes, latitudes, c=\"red\")\n    plt.scatter(longitudes, latitudes, c=\"red\")\n    \n    # Setup Axis Limits and Title/Labels\n    plt.title(title)\n    plt.show()","key":"rCpyxsyecH"},{"type":"output","id":"CR3V74G0hAEBkZJnsnYri","data":[],"key":"keIbwZ1XLf"}],"key":"Nn9q0I5jRS"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s see how this look! First, let’s see how the great circle path and arc from Boulder to Boston looks:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"S9DUTLFOHj"}],"key":"pduSXnKm5K"}],"key":"gSzrrFT30A"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"start_pt = \"boulder\"\nend_pt = \"boston\"\nn_pts = 360 # number of points along the longitude (resolution for 360 is one point for each 1 degree)\nlat_lon_pts = generate_latitude_along_gc(start_pt, end_pt, number_of_lon_pts=n_pts)\nplot_coordinate(lat_lon_pts, start_pt, end_pt,\n                f\"Plot Great Circle, made from the arc {start_pt.title()} to {end_pt.title()}\")","key":"mCv5OnkDVA"},{"type":"output","id":"R8xkP98rGiNRrWxs7DsgN","data":[],"key":"shxax4Romc"}],"key":"PhSiBS79Yu"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"How about a longer arc? Let’s start at the Arceibo Telescope and move up to Greenwich (the Prime Meridian)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P7Id4Yh61y"}],"key":"K3kZqYkjcx"}],"key":"d4UNigRhWw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"start_pt = \"arecibo\"\nend_pt = \"greenwich\"\nn_pts = 360 # number of points along the longitude (resolution for 360 is one point for each 1 degree)\nlat_lon_pts = generate_latitude_along_gc(start_pt, end_pt, number_of_lon_pts=n_pts)\nplot_coordinate(lat_lon_pts, start_pt, end_pt,\n                f\"Plot Great Circle, made from the arc {start_pt.title()} to {end_pt.title()}\")","key":"nkr1M6BvZR"},{"type":"output","id":"aMge7OJYJvtnFHJFTqTAl","data":[],"key":"ExphALLUgt"}],"key":"FJhDrPPhZO"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Excellent! And now a very extreme example, starting all the way down in Zambezi and all the way up to Svalbard","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xvVvEgyhou"}],"key":"c6yz3srraD"}],"key":"RoPmybfg7V"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"start_pt = \"zambezi\"\nend_pt = \"svalbard\"\nn_pts = 360\nlat_lon_pts = generate_latitude_along_gc(start_pt, end_pt, number_of_lon_pts=n_pts)\nplot_coordinate(lat_lon_pts, start_pt, end_pt,\n                f\"Plot Great Circle, made from the arc {start_pt.title()} to {end_pt.title()}\")","key":"v2WK8nXbFB"},{"type":"output","id":"nItyTrZIAHE6z9nxbV5dn","data":[],"key":"IUy2qF2kBZ"}],"key":"msnTNMW6p5"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Wait! Wasn’t a Great Circle Suppose to be a Line?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ak7UknxzmF"}],"identifier":"wait-wasnt-a-great-circle-suppose-to-be-a-line","label":"Wait! Wasn’t a Great Circle Suppose to be a Line?","html_id":"wait-wasnt-a-great-circle-suppose-to-be-a-line","implicit":true,"key":"iowOKk6O2A"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"You are right! Great circle paths will appear like a straight line that cuts the globe in half. However, on a flat projection, a perfectly straight path will appear curved.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SSzmvBk2bB"}],"key":"dY3WeKlFOq"}],"key":"CuCg0hgKlF"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Determine an Antipodal Point","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"keWsRF4fqw"}],"identifier":"determine-an-antipodal-point","label":"Determine an Antipodal Point","html_id":"determine-an-antipodal-point","implicit":true,"key":"M7SCIF8R7T"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Imagine you could directly down below your feet through the Earth and all the way to the otherside of the planet. Where would that be? This exactly opposite position is known as a antipodal point.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"DhfYxXF3ey"}],"key":"xiMdZ1NxXa"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The latitude is simple, it is simply the inverse of your current latitude. So, standing at 40 degrees in Boulder, my antipodal latitude will sit at -40 degrees, we can defined this as:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"liEb1gjHdv"}],"key":"sAK3GaE0q9"},{"type":"math","value":"\\text{antipodal latitude} = -1 * \\text{latitude}","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>antipodal latitude</mtext><mo>=</mo><mo>−</mo><mn>1</mn><mo>∗</mo><mtext>latitude</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{antipodal latitude} = -1 * \\text{latitude}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">antipodal latitude</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">latitude</span></span></span></span></span></span>","enumerator":"17","key":"zOSKiDG5BH"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Antipodal longitude is a little more complicated. This will depend on if you are standing to the East (postive) or West (negative) of the Prime Meridian (0 degrees longitude)","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"SFHRK6OE3I"}],"key":"wuHn8g0m9n"},{"type":"math","value":"\\text{anitpodal longitude} = (\\text{longitude} + 180) \\text{ if longitude} \\le 0","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>anitpodal longitude</mtext><mo>=</mo><mo stretchy=\"false\">(</mo><mtext>longitude</mtext><mo>+</mo><mn>180</mn><mo stretchy=\"false\">)</mo><mtext> if longitude</mtext><mo>≤</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\text{anitpodal longitude} = (\\text{longitude} + 180) \\text{ if longitude} \\le 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">anitpodal longitude</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">longitude</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">180</span><span class=\"mclose\">)</span><span class=\"mord text\"><span class=\"mord\"> if longitude</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span>","enumerator":"18","key":"S6K83JTHx5"},{"type":"math","value":"\\text{anitpodal longitude} = (\\text{longitude} - 180) \\text{ if longitude} \\gt 0","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>anitpodal longitude</mtext><mo>=</mo><mo stretchy=\"false\">(</mo><mtext>longitude</mtext><mo>−</mo><mn>180</mn><mo stretchy=\"false\">)</mo><mtext> if longitude</mtext><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\text{anitpodal longitude} = (\\text{longitude} - 180) \\text{ if longitude} \\gt 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">anitpodal longitude</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">longitude</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">180</span><span class=\"mclose\">)</span><span class=\"mord text\"><span class=\"mord\"> if longitude</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span>","enumerator":"19","key":"PcC9Q4QZoX"}],"key":"Gc470rH563"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def antipodal(start_point=None):\n    # return the antipodal (latitude/longitude) point from a starting position\n    anti_lat = -1 * location_df.loc[start_point, \"latitude\"]\n    ref_lon = location_df.loc[start_point, \"longitude\"]\n    if ref_lon > 0:\n        anti_lon = ref_lon - 180\n    else:\n        anti_lon = ref_lon + 180\n    return (float(anti_lat), float(anti_lon))","key":"ZNge5PYzH1"},{"type":"output","id":"Jh_OY8DZAG9YbMw1MOCOT","data":[],"key":"iZlOuymXie"}],"key":"D5SGQSN0Xs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def is_antipodal(start_point=None, end_point=None):\n    # return true is a point is antipodal from another point\n    lon1 = np.deg2rad(location_df.loc[start_point, \"longitude\"])\n    lat1 = np.deg2rad(location_df.loc[start_point, \"latitude\"])\n    lon2 = np.deg2rad(location_df.loc[end_point, \"longitude\"])\n    lat2 = np.deg2rad(location_df.loc[end_point, \"latitude\"])\n    return lat1 + lat2 == 0 and abs(lon1-lon2) == np.pi","key":"rK45LvMcjm"},{"type":"output","id":"nCVKE76BuDnziXuQ7XiBW","data":[],"key":"gRabCPBAOk"}],"key":"O6AfI4IzZ5"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"link","url":"https://www.antipodesmap.com/","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"See for yourself on this antipodes map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BCgZ4aJD8N"}],"urlSource":"https://www.antipodesmap.com/","key":"m6EDmBtiJe"},{"type":"text","value":", but we can also plot this in Python.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"epk6yScpjJ"}],"key":"kjKUg7tydw"}],"key":"pTFKb0J908"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def plot_antipodal(start_point=None):\n    # Set up world map plot\n    fig = plt.subplots(figsize=(15, 10))\n    projection_map = ccrs.PlateCarree()\n    ax = plt.axes(projection=projection_map)\n    lon_west, lon_east, lat_south, lat_north = -180, 180, -90, 90\n    ax.set_extent([lon_west, lon_east, lat_south, lat_north], crs=projection_map)\n    ax.coastlines(color=\"black\")\n    ax.add_feature(cfeature.BORDERS, edgecolor='grey')\n    ax.add_feature(cfeature.STATES, edgecolor=\"grey\")\n        \n    # Plot Start point (in blue)\n    plt.scatter(location_df.loc[start_point, \"longitude\"],\n                location_df.loc[start_point, \"latitude\"],\n                s=100, c=\"cornflowerblue\", label=start_point.title())\n\n    # Plot Antipodal Point (in red)\n    antipodal_point = antipodal(start_point)\n    plt.scatter(antipodal_point[1], antipodal_point[0], s=100, c=\"red\", label=\"Antipodal\")\n    \n    # Setup Axis Limits and Title/Labels\n    plt.title(f\"{start_point.title()} and Antipodal Point {antipodal_point}\")\n    plt.legend(loc=\"lower right\")\n    plt.show()","key":"Zf9pPs0CXd"},{"type":"output","id":"wkf08bQXmV3B8sYjDI0b0","data":[],"key":"s9sgbFlQ3a"}],"key":"alNbU5tu5t"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s see how this looks. Where does the antipodal point from Boulder lie?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ntu3hgdtKA"}],"key":"cbE2QysznQ"}],"key":"d0C2i4Iq1a"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_antipodal(\"boulder\")","key":"CNwXmJIQWA"},{"type":"output","id":"-lIomGdZ2nrZSdwErmpaJ","data":[],"key":"csmoNkCB3j"}],"key":"EjmNVS9SaS"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Ah, the middle of the ocean. What about Svalbard?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SioQEPI2GF"}],"key":"gTpR7ICT8V"}],"key":"bfMFf2aSb6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_antipodal(\"svalbard\")","key":"nY9TXaFwx7"},{"type":"output","id":"C4yfUa7ekuVK7C-MbRpMq","data":[],"key":"B3y7S33IoQ"}],"key":"h7buKTQmP9"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Just off the coast of Antartica! And the city of Cairo?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ksVkLOKdDw"}],"key":"DfduYzXjFL"}],"key":"rE6SHzZAoR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot_antipodal(\"cairo\")","key":"vt1bIJzcmF"},{"type":"output","id":"t1TrsVW7rJBULGwWM2QdM","data":[],"key":"u76LhgHHFT"}],"key":"AJYa5jZULd"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We are back in the ocean, but that isn’t strange. The Earth is mostly water, so don’t be suprised if the point on the opposite of the globe from you is lying in the middle of the ocean.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"h0dzI671QQ"}],"key":"YXhdjC3kJm"}],"key":"veM1tcRKpb"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ARi0dKh5Zr"}],"key":"JaKZsFB8MJ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yANPZgwvrH"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"YJf3W3rCFN"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This notebook covered how to generate and plot great circle arcs and paths with just a starting and ending position. This also included how to calculate the bearing of a great circle arc as well interpolating along the great circle and even how to find the antipodal point to any point on the globe. You were able to see how the difference between treating the Earth as a sphere or as an ellipsoid impacts the final precision.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MsHAdrbQoT"}],"key":"uRcki2Gbki"},{"type":"heading","depth":3,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"What’s next?","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"QCxd7CvYAs"}],"identifier":"whats-next","label":"What’s next?","html_id":"whats-next","implicit":true,"key":"WTwrQcjysB"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"With a great circle arc defined, it’s time to start using the great circle arc as part of a large question. Next, we will determine if a third point is along the arc or at what distance it sits from the great circle arc and path.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"YWWeFtOOE0"}],"key":"IWLU0v6l9u"}],"key":"v3PuS245dX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mMpPdn4A26"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"gm5I4rhrQN"}],"key":"N76VGU69eb"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"link","url":"https://edwilliams.org/avform147.htm","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Ed Williams “Avitation Formulary”","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WdNHKxARsx"}],"urlSource":"https://edwilliams.org/avform147.htm","key":"XzFmoCDddT"}],"key":"bHiY7FqcMI"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"link","url":"https://www.movable-type.co.uk/scripts/latlong.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Movable Type Scripts","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Huw01sw5XK"}],"urlSource":"https://www.movable-type.co.uk/scripts/latlong.html","key":"pQlJv3x7wd"}],"key":"bAMRiGf5qI"}],"key":"k6VpSbktoF"}],"key":"CUbp6lC7LE"}],"key":"GJNiw3zAU8"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Coordinate Types","url":"/notebooks/foundations/coordinates","group":"Foundations"},"next":{"title":"Great Circles and a Point","url":"/notebooks/tutorials/arc-to-point","group":"Tutorials"}}},"domain":"http://localhost:3000"}